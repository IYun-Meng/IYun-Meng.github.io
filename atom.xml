<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱梦的博客</title>
  
  <subtitle>常常与我陪伴的就是梦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mengyun.club/"/>
  <updated>2021-05-21T07:52:06.791Z</updated>
  <id>http://www.mengyun.club/</id>
  
  <author>
    <name>云</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unity2D - 射线</title>
    <link href="http://www.mengyun.club/post/738741fb/"/>
    <id>http://www.mengyun.club/post/738741fb/</id>
    <published>2021-05-20T10:50:45.000Z</published>
    <updated>2021-05-21T07:52:06.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Debug-DrawLine"><a href="#Debug-DrawLine" class="headerlink" title="Debug.DrawLine"></a>Debug.DrawLine</h1><p><a href="https://docs.unity.cn/cn/2019.4/ScriptReference/Debug.DrawLine.html" target="_blank" rel="noopener" color="red">官方API说明</a></p><p>由于射线不可见, 所以测试时可以使用<code>DrawLine</code>绘制辅助线.<br>描述:在指定的起始点与结束点之间绘制一条直线</p><pre>public static void DrawLine(    <font color="green">Vector3</font> start,     <font color="green">Vector3</font> end);public static void DrawLine(    <font color="green">Vector3</font> start,     <font color="green">Vector3</font> end,     <font color="green">Color</font> color);public static void DrawLine(    <font color="green">Vector3</font> start,     <font color="green">Vector3</font> end,     <font color="green">Color</font> color,     <font color="green">float</font> duration);public static void DrawLine(    <font color="green">Vector3</font> start,     <font color="green">Vector3</font> end,     [Internal.DefaultValue("Color.white")] <font color="green">Color</font> color,     [Internal.DefaultValue("0.0f")] <font color="green">float</font> duration,     [Internal.DefaultValue("true")] <font color="green">bool</font> depthTest);</pre><table><tr><td>star</td><td>世界空间中的点作为该直线的起始点</td></tr><tr><td>end</td><td>世界空间中的点作为该直线的结束点</td></tr><tr><td>color</td><td>该直线的颜色</td></tr><tr><td>duration</td><td>该直线的可见长度应为多长</td></tr><tr><td>depthTest</td><td>该直线是否应被靠近此摄像机的对象遮挡</td></tr></table><a id="more"></a><p><code>duration</code>是在第一次显示该直线后该直线可见的时间长短(单位为秒). 如果持续时间为零, 则该直线仅显示一帧.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 辅助线可视化</span></span><br><span class="line">Debug.DrawLine(transform.position, transform.up * <span class="number">15</span>, Color.green);</span><br><span class="line"><span class="comment">// 游戏对象自旋转, rotateSpeed(旋转速度): float变量.</span></span><br><span class="line">transform.Rotate(<span class="number">0</span>, <span class="number">0</span>, rotateSpeed * Time.deltaTime);</span><br></pre></td></tr></table></figure><p><code>Time.deltaTime</code>:当前帧和上一帧之间的时间<br><code>transform.right</code>:世界空间中变换的红轴; 旋转游戏对象时, 表示游戏对象的X轴的红色箭头也会改变方向.<br><code>transform.Up</code>:世界空间中变换的绿轴; 旋转游戏对象时, 表示游戏对象的Y轴的红色箭头也会改变方向.</p><table><tr style="text-align:center"><td colspan="2">Vector3</td></tr><tr><td>back</td><td>用于编写<font color="green">Vector3(0, 0, -1</font>)的简便方法.</td></tr><tr><td>forward</td><td>用于编写<font color="green">Vector3(0, 0, 1)</font>的简便方法.</td></tr><tr><td>up</td><td>用于编写<font color="green">Vector3(0, 1, 0)</font> 的简便方法.</td></tr><tr><td>down</td><td>用于编写<font color="green">Vector3(0, -1, 0</font>)的简便方法.</td></tr><tr><td>left</td><td>用于编写<font color="green">Vector3(-1, 0, 0</font>)的简便方法.</td></tr><tr><td>right</td><td>用于编写<font color="green">Vector3(1, 0, 0)</font>的简便方法.</td></tr><tr><td>one</td><td>用于编写<font color="green">Vector3(1, 1, 1)</font>的简便方法.</td></tr><tr><td>zero</td><td>用于编写<font color="green">Vector3(0, 0, 0)</font>的简便方法.</td></tr></table><h1 id="Physics2D-Raycast"><a href="#Physics2D-Raycast" class="headerlink" title="Physics2D.Raycast"></a>Physics2D.Raycast</h1><p><a href="https://docs.unity.cn/cn/2019.4/ScriptReference/Physics2D.Raycast.html" target="_blank" rel="noopener" color="red">官方API说明</a></p><p>用来向场景中的碰撞体投射射线;<br>描述:从概念上说, 射线投射类似于从空间中的某个点朝特定方向发射一条光束. 在该过程中, 可以检测并报告与光束接触的任何对象. </p><pre>public static <font color="red">RaycastHit2D</font> Raycast(    <font color="green">Vector2</font> origin,     <font color="green">Vector2</font> direction);public static <font color="red">RaycastHit2D</font> Raycast(    <font color="green">Vector2</font> origin,     <font color="green">Vector2</font> direction,     <font color="green">float</font> distance);public static <font color="red">RaycastHit2D</font> Raycast(    <font color="green">Vector2</font> origin,     <font color="green">Vector2</font> direction,     <font color="green">float</font> distance,     <font color="green">int</font> layerMask);public static <font color="red">RaycastHit2D</font> Raycast(    <font color="green">Vector2</font> origin,     <font color="green">Vector2</font> direction,     <font color="green">float</font> distance,     <font color="green">int</font> layerMask,     <font color="green">float</font> minDepth);public static <font color="red">RaycastHit2D</font> Raycast(    <font color="green">Vector2</font> origin,     <font color="green">Vector2</font> direction,     [Internal.DefaultValue("Mathf.Infinity")] <font color="green">float</font> distance,     [Internal.DefaultValue("DefaultRaycastLayers")] <font color="green">int</font> layerMask,     [Internal.DefaultValue("-Mathf.Infinity")] <font color="green">float</font> minDepth,     [Internal.DefaultValue("Mathf.Infinity")] <font color="green">float</font> maxDepth);</pre><table><tr><td>origin</td><td>射线在2D空间中的起点</td></tr><tr><td>direction</td><td>表示射线方向的矢量</td></tr><tr><td>distance</td><td>射线的最大投射距离</td></tr><tr><td>layerMask</td><td>过滤器, 用于仅在特定层上检测碰撞体.</td></tr><tr><td>minDepth</td><td>仅包括Z坐标(深度)大于或等于该值的对象.</td></tr><tr><td>maxDepth</td><td>仅包括Z坐标(深度)小于或等于该值的对象.</td></tr></table><p>该函数返回一个<code>RaycastHit2D</code>对象, 该对象引用了射线命中的<code>碰撞体</code>(如果未命中任何对象, 则结果的碰撞体属性将为<code>NULL</code>). </p><p>当该对象添加了<code>Collider 2D</code>组件时, 射线会探测自身的碰撞体. 需进行设置:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Physics2D.queriesStartInColliders = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h1 id="LayerMask"><a href="#LayerMask" class="headerlink" title="LayerMask"></a>LayerMask</h1><p><a href="https://docs.unity.cn/cn/2019.4/ScriptReference/LayerMask.html" target="_blank" rel="noopener" color="red">官方API说明</a></p><p>描述:指定要在<code>Raycast</code>中使用的层<br><code>GameObject</code>最多可以使用Editor支持的<code>32个</code>LayerMask. 这些Layers中的<code>前8个</code>由<code>Unity</code>指定; 以下<code>24个</code>可由用户控制.</p><table><tr><td><img src="/post/738741fb/LayerNums01.png"></td><td><img src="/post/738741fb/LayerNums02.png"></td></tr></table><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">RaycastHit2D hitInfo;</span><br><span class="line"><span class="comment">// 3:探测Mask给定的层; 4 6:探测Default层; 5:探测Default之外的层; maxDistance(探测最大距离): float变量.</span></span><br><span class="line"><span class="comment">//optional 1:</span></span><br><span class="line">hitInfo= Physics2D.Raycast(transform.position, transform.up);</span><br><span class="line"><span class="comment">//optional 2:</span></span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance);</span><br><span class="line"><span class="comment">//optional 3:</span></span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, mask);</span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, mask.<span class="keyword">value</span>);</span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, <span class="number">256</span>);  <span class="comment">//2^8(第8层)</span></span><br><span class="line"><span class="comment">//optional 4:</span></span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, LayerMask.GetMask(<span class="string">"Default"</span>));</span><br><span class="line"><span class="comment">//optional 5:</span></span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, ~LayerMask.GetMask(<span class="string">"Default"</span>));</span><br><span class="line"><span class="comment">//optional 6:</span></span><br><span class="line">hitInfo = Physics2D.Raycast(transform.position, transform.up, maxDistance, <span class="number">1</span> &lt;&lt; LayerMask.NameToLayer(<span class="string">"Default"</span>)); <span class="comment">//左移运算符:需要移位的数字 &lt;&lt; 移位次数</span></span><br></pre></td></tr></table></figure><p><code>value</code>:将层遮罩值转换为整数值</p><pre>public static <font color="red">int</font> GetMask(    params <font color="green">string</font>[] layerNames);public static <font color="red">string</font> LayerToName(    <font color="green">int</font> layer);public static <font color="red">int</font> NameToLayer(    <font color="green">string</font> layerName);</pre><h1 id="RaycastHit2D"><a href="#RaycastHit2D" class="headerlink" title="RaycastHit2D"></a>RaycastHit2D</h1><p><a href="https://docs.unity.cn/cn/2019.4/ScriptReference/RaycastHit2D.html" target="_blank" rel="noopener" color="red">官方API说明</a></p><p>描述:在2D物理中, 有关射线投射检测到的对象的返回信息.</p><table><tr><td>centroid</td><td>用于执行投射的图元的质心</td></tr><tr><td>collider</td><td>射线命中的碰撞体</td></tr><tr><td>distance</td><td>从射线原点到撞击点的距离</td></tr><tr><td>fraction</td><td>射线上发生命中的距离的分数</td></tr><tr><td>normal</td><td>射线命中的表面的法线矢量</td></tr><tr><td>point</td><td>世界空间中射线命中碰撞体表面的点</td></tr><tr><td>rigidbody</td><td>附加到命中的对象的Rigidbody2D</td></tr><tr><td>transform</td><td>命中的对象的变换</td></tr></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Debug-DrawLine&quot;&gt;&lt;a href=&quot;#Debug-DrawLine&quot; class=&quot;headerlink&quot; title=&quot;Debug.DrawLine&quot;&gt;&lt;/a&gt;Debug.DrawLine&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.unity.cn/cn/2019.4/ScriptReference/Debug.DrawLine.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; color=&quot;red&quot;&gt;官方API说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于射线不可见, 所以测试时可以使用&lt;code&gt;DrawLine&lt;/code&gt;绘制辅助线.&lt;br&gt;描述:在指定的起始点与结束点之间绘制一条直线&lt;/p&gt;
&lt;pre&gt;
public static void DrawLine(
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; start, 
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; end
);

public static void DrawLine(
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; start, 
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; end, 
    &lt;font color=&quot;green&quot;&gt;Color&lt;/font&gt; color
);

public static void DrawLine(
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; start, 
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; end, 
    &lt;font color=&quot;green&quot;&gt;Color&lt;/font&gt; color, 
    &lt;font color=&quot;green&quot;&gt;float&lt;/font&gt; duration
);

public static void DrawLine(
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; start, 
    &lt;font color=&quot;green&quot;&gt;Vector3&lt;/font&gt; end, 
    [Internal.DefaultValue(&quot;Color.white&quot;)] &lt;font color=&quot;green&quot;&gt;Color&lt;/font&gt; color, 
    [Internal.DefaultValue(&quot;0.0f&quot;)] &lt;font color=&quot;green&quot;&gt;float&lt;/font&gt; duration, 
    [Internal.DefaultValue(&quot;true&quot;)] &lt;font color=&quot;green&quot;&gt;bool&lt;/font&gt; depthTest
);
&lt;/pre&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;star&lt;/td&gt;&lt;td&gt;世界空间中的点作为该直线的起始点&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;end&lt;/td&gt;&lt;td&gt;世界空间中的点作为该直线的结束点&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;color&lt;/td&gt;&lt;td&gt;该直线的颜色&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;duration&lt;/td&gt;&lt;td&gt;该直线的可见长度应为多长&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;depthTest&lt;/td&gt;&lt;td&gt;该直线是否应被靠近此摄像机的对象遮挡&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
    
      <category term="Unity" scheme="http://www.mengyun.club/tags/Unity/"/>
    
      <category term="Physics2D" scheme="http://www.mengyun.club/tags/Physics2D/"/>
    
  </entry>
  
  <entry>
    <title>Unity游戏组件</title>
    <link href="http://www.mengyun.club/post/5299bfe/"/>
    <id>http://www.mengyun.club/post/5299bfe/</id>
    <published>2021-05-19T02:01:43.000Z</published>
    <updated>2021-05-20T10:52:01.431Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Sprite"><a href="#Sprite" class="headerlink" title="Sprite"></a>Sprite</h1><p>在2D项目中, Sprite是一个2D图形对象; 在3D项目中, Sprite是一个纹理对象.<br><a href="https://docs.unity.cn/cn/2019.4/Manual/Sprites.html" target="_blank" rel="noopener" color="red">官方说明</a></p><h2 id="Sprite-Creator-创建"><a href="#Sprite-Creator-创建" class="headerlink" title="Sprite Creator(创建)"></a>Sprite Creator(创建)</h2><p>在项目中创建占位精灵</p><h2 id="Sprite-Editor-编辑"><a href="#Sprite-Editor-编辑" class="headerlink" title="Sprite Editor(编辑)"></a>Sprite Editor(编辑)</h2><p>允许从较大的图像中提取精灵图形, 并在图像编辑器中编辑单个纹理内的多个分量图像.</p><h2 id="Sprite-Renderer-渲染"><a href="#Sprite-Renderer-渲染" class="headerlink" title="Sprite Renderer(渲染)"></a>Sprite Renderer(渲染)</h2><p>应使用<code>Sprite Renderer</code>组件而不是用于<code>3D对象</code>的<code>Mesh Renderer</code>来渲染<code>精灵</code>. 使用该组件可将图像显示为<code>精灵</code>, 以便在2D和3D场景中均可使用.</p><h2 id="Sprite-Packer"><a href="#Sprite-Packer" class="headerlink" title="Sprite Packer"></a>Sprite Packer</h2><p>根据项目来优化视频内存的使用和性能</p><a id="more"></a><h2 id="导入精灵"><a href="#导入精灵" class="headerlink" title="导入精灵"></a>导入精灵</h2><ol><li><p>直接将图像放入<code>Unity</code>项目的<code>Assets</code>文件夹中, 最好单独存放.<br>例如: <code>Assets\Sprites</code></p><table><tr><td><img src="/post/5299bfe/Sprite/importPath.png"></td></tr></table></li><li><p>在<code>Unity</code>中, 选择<code>Assets</code>&gt;<code>Import New Asset</code>打开文件管理器后选择所需的图像, Unity会将其放在<code>Project视图</code>中.</p></li></ol><h2 id="设置精灵"><a href="#设置精灵" class="headerlink" title="设置精灵"></a>设置精灵</h2><ol><li><p>如果项目模式设置为<code>2D</code>, 则导入的图像将自动设置为<code>精灵(Sprite)</code>.</p></li><li><p>如果项目模式设置为<code>3D</code>, 则图像将设置为<code>纹理(Texture)</code>, 因此需要更改资源的<code>纹理类型(Texture Type)</code>.</p></li></ol><pre>1.单击该资源以查看其<font color="green">Import Inspector</font>2.将<font color="green">Texture Type</font>设置为<font color="red">Sprite (2D and UI)</font></pre><table><tr><td><img src="/post/5299bfe/Sprite/SelectType.png"></td></tr></table><h2 id="排序精灵"><a href="#排序精灵" class="headerlink" title="排序精灵"></a>排序精灵</h2><p><code>Unity</code>中的渲染器按几个条件排序, 例如图层顺序或与摄像机的距离.<br>菜单栏中的<code>Edit</code> &gt; <code>Project Settings...</code> &gt; <code>Graphics</code> &gt; <code>Transparency Sort Mode</code>这项设置使用精灵在轴上的位置来确定哪些精灵相对于其他精灵透明, 而哪些不透明. </p><table><tr style="text-align:center"><td colspan="2">Transparency Sort Mode的四个可用选项</td></tr><tr><td>Default</td><td>根据摄像机的 Projection 模式设置为 Perspective 还是 Orthographic 来进行排序</td></tr><tr><td>Perspective</td><td>根据透视图进行排序. 透视图根据从摄像机位置到精灵中心的距离对精灵进行排序. </td></tr><tr><td>Orthographic</td><td>根据正交视图进行排序. 正交视图根据沿视图方向的距离对精灵进行排序. </td></tr><tr><td>Custom Axis</td><td>根据 Transparency Sort Axis 中设置的指定轴进行排序</td></tr></table><p>当<code>Transparency Sort Mode</code>设置为<code>Custom Axis</code>时, 则需要设置 <code>Transparency Sort Axis</code>的<code>xyz值</code>:</p><table><tr><td><img src="/post/5299bfe/Sprite/SetSpritSort01.png"></td><td><img src="/post/5299bfe/Sprite/SetSpritSort02.png"></td></tr></table><pre>Scene视图中的渲染器将根据此轴与摄像机之间的距离进行排序. 应使用介于–1和1之间的值来定义此轴. <p>例如：X=0、Y=1、Z=0 将此轴方向设置为向上;<br>               X=1、Y=1、Z=0 将此轴方向设置为 X 和 Y 之间的对角线方向. </p><p>例如: 如果希望精灵在y轴值较高的精灵, 将站在y轴值较低的精灵的后面.<br>请将 Transparency Sort Mode 设置为 Custom Axis, 并将 Transparency Sort Axis 的 Y值 设置为大于0的值.<br></p></pre><p></p><h1 id="TileMap"><a href="#TileMap" class="headerlink" title="TileMap"></a>TileMap</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Sprite&quot;&gt;&lt;a href=&quot;#Sprite&quot; class=&quot;headerlink&quot; title=&quot;Sprite&quot;&gt;&lt;/a&gt;Sprite&lt;/h1&gt;&lt;p&gt;在2D项目中, Sprite是一个2D图形对象; 在3D项目中, Sprite是一个纹理对象.&lt;br&gt;&lt;a href=&quot;https://docs.unity.cn/cn/2019.4/Manual/Sprites.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; color=&quot;red&quot;&gt;官方说明&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Sprite-Creator-创建&quot;&gt;&lt;a href=&quot;#Sprite-Creator-创建&quot; class=&quot;headerlink&quot; title=&quot;Sprite Creator(创建)&quot;&gt;&lt;/a&gt;Sprite Creator(创建)&lt;/h2&gt;&lt;p&gt;在项目中创建占位精灵&lt;/p&gt;
&lt;h2 id=&quot;Sprite-Editor-编辑&quot;&gt;&lt;a href=&quot;#Sprite-Editor-编辑&quot; class=&quot;headerlink&quot; title=&quot;Sprite Editor(编辑)&quot;&gt;&lt;/a&gt;Sprite Editor(编辑)&lt;/h2&gt;&lt;p&gt;允许从较大的图像中提取精灵图形, 并在图像编辑器中编辑单个纹理内的多个分量图像.&lt;/p&gt;
&lt;h2 id=&quot;Sprite-Renderer-渲染&quot;&gt;&lt;a href=&quot;#Sprite-Renderer-渲染&quot; class=&quot;headerlink&quot; title=&quot;Sprite Renderer(渲染)&quot;&gt;&lt;/a&gt;Sprite Renderer(渲染)&lt;/h2&gt;&lt;p&gt;应使用&lt;code&gt;Sprite Renderer&lt;/code&gt;组件而不是用于&lt;code&gt;3D对象&lt;/code&gt;的&lt;code&gt;Mesh Renderer&lt;/code&gt;来渲染&lt;code&gt;精灵&lt;/code&gt;. 使用该组件可将图像显示为&lt;code&gt;精灵&lt;/code&gt;, 以便在2D和3D场景中均可使用.&lt;/p&gt;
&lt;h2 id=&quot;Sprite-Packer&quot;&gt;&lt;a href=&quot;#Sprite-Packer&quot; class=&quot;headerlink&quot; title=&quot;Sprite Packer&quot;&gt;&lt;/a&gt;Sprite Packer&lt;/h2&gt;&lt;p&gt;根据项目来优化视频内存的使用和性能&lt;/p&gt;
    
    </summary>
    
    
      <category term="Unity" scheme="http://www.mengyun.club/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://www.mengyun.club/tags/Unity/"/>
    
      <category term="Sprite" scheme="http://www.mengyun.club/tags/Sprite/"/>
    
  </entry>
  
  <entry>
    <title>在Deepin系统上搭建PXE服务器</title>
    <link href="http://www.mengyun.club/post/f7f05fc0/"/>
    <id>http://www.mengyun.club/post/f7f05fc0/</id>
    <published>2021-04-14T13:31:11.000Z</published>
    <updated>2021-04-15T14:17:53.154Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><table style="text-align:center;"><tr><td>PXE服务器</td><td>客户端</td></tr><tr><td>IP:  192.168.139.200</td><td>无</td></tr><tr><td>GATEWAY:  192.168.139.2</td><td>无</td></tr><tr><td colspan="2">Image: deepin-desktop-community-1002-amd64.iso</td></tr></table><h2 id="添加软件源"><a href="#添加软件源" class="headerlink" title="添加软件源"></a>添加软件源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> <span class="string">"deb [by-hash=force] https://professional-packages.chinauos.com/desktop-professional eagle main contrib non-free"</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h2 id="配置NFS"><a href="#配置NFS" class="headerlink" title="配置NFS"></a>配置NFS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server -y</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/var/nfs *(rw,sync,no_subtree_check)'</span> | sudo tee -a /etc/exports</span><br><span class="line">sudo mkdir /var/nfs</span><br><span class="line">sudo systemctl restart nfs-kernel-server</span><br><span class="line">showmount -e localhost</span><br></pre></td></tr></table></figure><h2 id="挂载镜像-并复制所有文件到NFS共享目录"><a href="#挂载镜像-并复制所有文件到NFS共享目录" class="headerlink" title="挂载镜像, 并复制所有文件到NFS共享目录."></a>挂载镜像, 并复制所有文件到NFS共享目录.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mount deepin-desktop-community-1002-amd64.iso /mnt/</span><br><span class="line">sudo mkdir -p /var/nfs/amd64</span><br><span class="line">sudo cp -r /mnt/* /var/nfs/amd64/</span><br><span class="line">sudo cp -r /mnt/.disk/ /var/nfs/amd64/</span><br></pre></td></tr></table></figure><pre>ls -lhA /mnt/总用量 46714drwxr-xr-x 1 user user 2.0K 9月   9  2020 boot-rw-r--r-- 1 user user  16M 9月   3  2020 deepin-boot-maker.exe-rw-r--r-- 1 user user  30M 9月   3  2020 deepin-boot-maker.zipdrwxr-xr-x 1 user user 2.0K 9月   9  2020 .diskdrwxr-xr-x 1 user user 2.0K 9月   9  2020 distsdrwxr-xr-x 1 user user 2.0K 9月   9  2020 EFIdrwxr-xr-x 1 user user 4.0K 9月   9  2020 isolinuxdrwxr-xr-x 1 user user 2.0K 9月   9  2020 live-rw-r--r-- 1 user user  41K 9月   9  2020 md5sum.txtdrwxr-xr-x 1 user user 2.0K 9月   9  2020 oemdrwxr-xr-x 1 user user 2.0K 9月   9  2020 pooldrwxr-xr-x 1 user user 2.0K 9月   9  2020 preseed</pre><h2 id="设置文件属主、属组和权限"><a href="#设置文件属主、属组和权限" class="headerlink" title="设置文件属主、属组和权限"></a>设置文件属主、属组和权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R root:root /var/nfs/</span><br><span class="line">find /var/nfs/amd64/ -<span class="built_in">type</span> d -<span class="built_in">exec</span> sudo chmod 755 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h2 id="安装netboot-amd64-并编写grub文件"><a href="#安装netboot-amd64-并编写grub文件" class="headerlink" title="安装netboot-amd64, 并编写grub文件."></a>安装netboot-amd64, 并编写grub文件.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install debian-installer-10-netboot-amd64</span><br><span class="line">sudo mkdir /var/tftp</span><br><span class="line">sudo cp -r /lib/debian-installer/images/10/amd64/text/debian-installer /var/tftp/</span><br><span class="line">sudo cat &gt; /var/tftp/debian-installer/amd64/grub/grub.cfg &lt;&lt;-EOF</span><br><span class="line"><span class="built_in">set</span> menu_color_normal=white/black</span><br><span class="line"><span class="built_in">set</span> menu_color_highlight=black/light-gray</span><br><span class="line"></span><br><span class="line">insmod gzio</span><br><span class="line">menuentry <span class="string">"Install Deepin V20"</span> &#123;</span><br><span class="line"><span class="built_in">set</span> gfxpayload=keep</span><br><span class="line">linux /debian-installer/amd64/live/vmlinuz console=tty boot=live netboot=nfs nfsroot=192.168.139.200:/var/nfs/amd64/ components union=overlay locales=zh_CN. UTF-8 livecd-installer --</span><br><span class="line">initrd /debian-installer/amd64/live/initrd.lz</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="将相关文件复制到关键目录"><a href="#将相关文件复制到关键目录" class="headerlink" title="将相关文件复制到关键目录"></a>将相关文件复制到关键目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/tftp/amd64</span><br><span class="line">sudo cp -r /mnt/live /var/tftp/amd64</span><br><span class="line">sudo cp /var/tftp/debian-installer/amd64/grubx64.efi /var/tftp/</span><br></pre></td></tr></table></figure><h2 id="配置dnsmasq"><a href="#配置dnsmasq" class="headerlink" title="配置dnsmasq"></a>配置dnsmasq</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install dnsmasq -y</span><br><span class="line">sudo groupadd dnsmasq</span><br><span class="line">sudo usermod -g dnsmasq dnsmasq</span><br><span class="line">sudo chown dnsmasq:dnsmasq /var/tftp -R</span><br><span class="line">sudo cat &gt; /etc/dnsmasq.conf &lt;&lt;-EOF</span><br><span class="line">listen-address=192.168.139.200</span><br><span class="line">dhcp-boot=/debian-installer/amd64/bootnetx64.efi</span><br><span class="line">interface=ens33</span><br><span class="line"><span class="built_in">bind</span>-interfaces</span><br><span class="line">dhcp-range=192.168.139.50,192.168.139.150,1h</span><br><span class="line">dhcp-option=3,192.168.139.2</span><br><span class="line">dhcp-option=6,192.168.139.2</span><br><span class="line">server=114.114.114.114</span><br><span class="line">dhcp-option=28,192.168.139.255</span><br><span class="line">dhcp-option=42,0.0.0.0</span><br><span class="line"><span class="built_in">enable</span>-tftp</span><br><span class="line">tftp-root=/var/tftp</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl restart dnsmasq</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Deepin" scheme="http://www.mengyun.club/tags/Deepin/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7.5的基础配置</title>
    <link href="http://www.mengyun.club/post/65f13b37/"/>
    <id>http://www.mengyun.club/post/65f13b37/</id>
    <published>2021-04-05T09:25:47.000Z</published>
    <updated>2021-04-09T06:44:03.168Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="分区划分"><a href="#分区划分" class="headerlink" title="分区划分"></a>分区划分</h1><h2 id="手动划分"><a href="#手动划分" class="headerlink" title="手动划分"></a>手动划分</h2><p>根分区:<code>/</code><br><code>size >= 5GB</code><br>生产环境: <code>size = 磁盘总额的4% ~ 6%</code></p><p>交换分区:<code>swap</code><br>当物理内存 &lt; 8GB时, <code>size = 物理内存 x 1.5;</code><br>当物理内存 &gt;= 8GB时, <code>size = 8GB ~ 16GB;</code></p><p>系统引导分区:<code>/boot</code><br><code>size = 200MB</code></p><p>应用分区:<code>/usr</code><br>生产环境: <code>size = 磁盘总额的10%</code></p><p>数据分区:<code>/data</code><br>生产环境: <code>size = 磁盘总额的30% ~ 40%</code></p><table><tr><td><img src="/post/65f13b37/手动分区1.png" title="选择自定义分区"></td><td><img src="/post/65f13b37/手动分区2.png" title="添加分区"></td><td><img src="/post/65f13b37/手动分区3.png" title="修改文件系统"></td><td><img src="/post/65f13b37/手动分区4.png" title="确认更改"></td><td><img src="/post/65f13b37/手动分区5.png" title="开始安装"></td></tr></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看交换内存和分区配额</span></span><br><span class="line">free -h</span><br><span class="line">df -h | grep -E <span class="string">"/$|/boot|/usr|/data"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="自动分区"><a href="#自动分区" class="headerlink" title="自动分区"></a>自动分区</h2><p>根分区:<code>/</code><br>交换分区:<code>swap</code><br>系统引导分区:<code>/boot</code><br>应用分区:<code>/usr</code></p><table><tr><td><img src="/post/65f13b37/自动分区1.png" title="选择安装位置"></td><td><img src="/post/65f13b37/自动分区2.png" title="选择自动分区"></td></tr></table><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h2><p>本地配置文件:<code>/etc/hostname</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname <span class="comment">#主机名</span></span><br><span class="line">cat /etc/hostname</span><br><span class="line"><span class="comment">#重新登陆时生效</span></span><br><span class="line"><span class="built_in">logout</span></span><br></pre></td></tr></table></figure><h2 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h2><p>本地配置文件:<code>/etc/sysconfig/network-scripts/ifcfg-*</code><br>方式一: 修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><pre>TYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=dhcp > <font color="green">none 或 static</font>DEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=ecc7964d-e900-4057-91f0-70dc4801e8a2DEVICE=ens33ONBOOT=no > <font color="green">yesIPADDR=192.168.139.110PREFIX=24 或 NETMASK=255.255.255.0GATEWAY=192.168.139.2DNS1=114.114.114.114DNS2=8.8.8.8</font></pre><p>方式二: nmtui命令(图形化)</p><table><tr><td><img src="/post/65f13b37/nmtui工具配置1.png" title="按下Enter键"></td><td><img src="/post/65f13b37/nmtui工具配置2.png" title="按下Enter键"></td><td><img src="/post/65f13b37/nmtui工具配置3.png" title="选择模式和显示"></td><td><img src="/post/65f13b37/nmtui工具配置4.png" title="配置ip地址、网关、DNS服务器"></td><td><img src="/post/65f13b37/nmtui工具配置5.png" title="返回"></td><td><img src="/post/65f13b37/nmtui工具配置6.png" title="按下Enter键"></td><td><img src="/post/65f13b37/nmtui工具配置7.png" title="按下Enter键"></td></tr></table><p>方式三: nmcli命令(命令行)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection modify ens33 ipv4.addresses <span class="string">"ip地址/掩码位数"</span> ipv4.gateway 网关 ipv4.dns DNS服务器的ip地址 ipv4.method manual connection.autoconnect yes connection.interface-name ens33</span><br></pre></td></tr></table></figure><p>查看网卡配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device show ens33</span><br></pre></td></tr></table></figure><h2 id="添加操作用户"><a href="#添加操作用户" class="headerlink" title="添加操作用户"></a>添加操作用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd <span class="built_in">test</span>; passwd <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 用户邮箱文件和家目录</span></span><br><span class="line">ls /var/spool/mail/ /home/</span><br></pre></td></tr></table></figure><pre>Changing password for user test.New password: **********Retype new password: **********passud: all authentication tokens updated successfully</pre><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install wget lrzsz vim telnet -y</span><br><span class="line">yum list installed |<span class="string"> grep -E "wget</span>|<span class="string">lrzsz</span>|<span class="string">vim</span>|<span class="string">telnet"</span></span><br></pre></td></tr></table></figure><h2 id="配置Yum源"><a href="#配置Yum源" class="headerlink" title="配置Yum源"></a>配置Yum源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/repos.d/CentOS-Base.repo /etc/repos.d/CentOS-Base.repo.bak</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum repolist | grep aliyun</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙和SELinux服务"><a href="#关闭防火墙和SELinux服务" class="headerlink" title="关闭防火墙和SELinux服务"></a>关闭防火墙和SELinux服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl status firewalld | grep Active</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看SELinux服务的当前模式</span></span><br><span class="line"><span class="comment"># --Enforcing: 强制模式</span></span><br><span class="line"><span class="comment"># --Permissive: 宽容模式</span></span><br><span class="line">getenforce</span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 永久关闭, 重启后生效.</span></span><br><span class="line">sed -i <span class="string">"s/=enforcing/=disabled/"</span> /etc/selinux/config; reboot</span><br><span class="line">getenforce</span><br><span class="line"><span class="comment"># Disabled</span></span><br></pre></td></tr></table></figure><h2 id="修改SSH服务配置"><a href="#修改SSH服务配置" class="headerlink" title="修改SSH服务配置"></a>修改SSH服务配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启后生效</span></span><br><span class="line">sed -i -e <span class="string">"s/#Port 22/Port 2388/"</span> -e <span class="string">"s/#PermitRootLogin yes/PermitRootLogin no/"</span> -e <span class="string">"s/#PermitEmptyPasswords/PermitEmptyPasswords/"</span> /etc/ssh/sshd_config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"UseDNS no"</span> &gt;&gt; /etc/ssh/sshd_config; reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口号</span></span><br><span class="line">ss -anpt | grep 2388</span><br></pre></td></tr></table></figure><h2 id="修改文件描述符"><a href="#修改文件描述符" class="headerlink" title="修改文件描述符"></a>修改文件描述符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看同一时间最多可开启的文件数</span></span><br><span class="line"><span class="built_in">ulimit</span> -n</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"* - nofile 65535"</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line"><span class="built_in">ulimit</span> -n</span><br></pre></td></tr></table></figure><h2 id="设置登录超时"><a href="#设置登录超时" class="headerlink" title="设置登录超时"></a>设置登录超时</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时, 单位为秒.</span></span><br><span class="line"><span class="built_in">export</span> TMOUT=10</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$TMOUT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export TMOUT=300"</span> &gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$TMOUT</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;分区划分&quot;&gt;&lt;a href=&quot;#分区划分&quot; class=&quot;headerlink&quot; title=&quot;分区划分&quot;&gt;&lt;/a&gt;分区划分&lt;/h1&gt;&lt;h2 id=&quot;手动划分&quot;&gt;&lt;a href=&quot;#手动划分&quot; class=&quot;headerlink&quot; title=&quot;手动划分&quot;&gt;&lt;/a&gt;手动划分&lt;/h2&gt;&lt;p&gt;根分区:&lt;code&gt;/&lt;/code&gt;&lt;br&gt;&lt;code&gt;size &gt;= 5GB&lt;/code&gt;&lt;br&gt;生产环境: &lt;code&gt;size = 磁盘总额的4% ~ 6%&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;交换分区:&lt;code&gt;swap&lt;/code&gt;&lt;br&gt;当物理内存 &amp;lt; 8GB时, &lt;code&gt;size = 物理内存 x 1.5;&lt;/code&gt;&lt;br&gt;当物理内存 &amp;gt;= 8GB时, &lt;code&gt;size = 8GB ~ 16GB;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;系统引导分区:&lt;code&gt;/boot&lt;/code&gt;&lt;br&gt;&lt;code&gt;size = 200MB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;应用分区:&lt;code&gt;/usr&lt;/code&gt;&lt;br&gt;生产环境: &lt;code&gt;size = 磁盘总额的10%&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数据分区:&lt;code&gt;/data&lt;/code&gt;&lt;br&gt;生产环境: &lt;code&gt;size = 磁盘总额的30% ~ 40%&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/post/65f13b37/手动分区1.png&quot; title=&quot;选择自定义分区&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/post/65f13b37/手动分区2.png&quot; title=&quot;添加分区&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/post/65f13b37/手动分区3.png&quot; title=&quot;修改文件系统&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/post/65f13b37/手动分区4.png&quot; title=&quot;确认更改&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;/post/65f13b37/手动分区5.png&quot; title=&quot;开始安装&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#查看交换内存和分区配额&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free -h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;df -h | grep -E &lt;span class=&quot;string&quot;&gt;&quot;/$|/boot|/usr|/data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://www.mengyun.club/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix监控系统</title>
    <link href="http://www.mengyun.club/post/bb6c6bce/"/>
    <id>http://www.mengyun.club/post/bb6c6bce/</id>
    <published>2020-09-23T01:15:26.000Z</published>
    <updated>2020-10-14T02:02:08.203Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="https://www.zabbix.com/cn/" target="_blank" rel="noopener">Zabbix</a>是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案. zabbix能监视各种网络参数, 保证服务器系统的安全运营; 并提供灵活的通知机制以让系统管理员快速定位, 解决存在的各种问题.</p><table><tr><td><img src="/post/bb6c6bce/Zabbix拓扑图.png" title="Zabbix拓扑"></td></tr><tr><td><img src="/post/bb6c6bce/监控对象分类.png" title="监控对象"></td></tr></table><a id="more"></a><h1 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h1><h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><ul><li><p>主动检测: 相对于agent而言; agent(active), <strong>agent向server请求与自己相关监控项配置</strong>, 主动地将server配置的监控项相关的数据发送给server;</p></li><li><p>主动监控能极大节约监控server的资源</p></li></ul><h2 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h2><ul><li>被动检测: 相对于agent而言; agent, <strong>server向agent请求获取配置的各监控项相关的数据</strong>, agent接收请求、获取数据并响应给server;</li></ul><h1 id="Zabbix架构"><a href="#Zabbix架构" class="headerlink" title="Zabbix架构"></a>Zabbix架构</h1><table><tr><td><img src="/post/bb6c6bce/Zabbix架构图.png" title="Zabbix架构"></td></tr></table><h2 id="Zabbix-Server"><a href="#Zabbix-Server" class="headerlink" title="Zabbix Server"></a>Zabbix Server</h2><ul><li>Zabbix server是agent程序报告系统可用性、系统完整性和统计数据的核心组件, 是所有配置信息、统计信息和操作数据的核心存储器. </li></ul><h2 id="Zabbix-数据库存储"><a href="#Zabbix-数据库存储" class="headerlink" title="Zabbix 数据库存储"></a>Zabbix 数据库存储</h2><ul><li>所有配置信息和Zabbix收集到的数据都被存储在数据库中</li></ul><h2 id="Zabbix-Web-界面"><a href="#Zabbix-Web-界面" class="headerlink" title="Zabbix Web 界面"></a>Zabbix Web 界面</h2><ul><li><p>为了从任何地方和任何平台都可以轻松的访问Zabbix, 官方提供基于Web的Zabbix界面. 该界面是Zabbix Server的一部分, 通常(但不一定)跟Zabbix Server运行在同一台物理机器上. </p></li><li><p>如果使用SQLite, Zabbix Web界面必须要跟Zabbix Server运行在同一台物理机器上.</p></li></ul><h2 id="Zabbix-Proxy-代理服务器"><a href="#Zabbix-Proxy-代理服务器" class="headerlink" title="Zabbix Proxy 代理服务器"></a>Zabbix Proxy 代理服务器</h2><ul><li>Zabbix proxy可以替Zabbix Server收集性能和可用性数据. Proxy代理服务器是Zabbix软件可选择部署的一部分; 当然, Proxy代理服务器可以帮助单台Zabbix Server分担负载压力. </li></ul><h2 id="Zabbix-Agent-监控代理"><a href="#Zabbix-Agent-监控代理" class="headerlink" title="Zabbix Agent 监控代理"></a>Zabbix Agent 监控代理</h2><ul><li>Zabbix agents监控代理部署在监控目标上, 能够主动监控本地资源和应用程序, 并将收集到的数据报告给Zabbix Server.</li></ul><h2 id="Zabbix-数据流"><a href="#Zabbix-数据流" class="headerlink" title="Zabbix 数据流"></a>Zabbix 数据流</h2><ul><li><p>监控方面, 为了创建一个监控项(item)用于采集数据, 必须先创建一个主机(host).</p></li><li><p>告警方面, 在监控项里创建触发器(trigger), 通过触发器(trigger)来触发告警动作(action). 因此, 如果你想收到Server XCPU负载过高的告警, 必须满足以下条件:<br>​      1.为Server X创建一个host并关联一个用于对CPU进行监控的监控项(Item)<br>​      2.创建一个Trigger, 设置成当CPU负载过高时会触发.<br>​      3.Trigger被触发, 发送告警邮件.</p><table><tr><td><img src="/post/bb6c6bce/监控流程图.png" title="监控流程"></td></tr></table></li></ul><h1 id="Zabbix监控系统部署"><a href="#Zabbix监控系统部署" class="headerlink" title="Zabbix监控系统部署"></a>Zabbix监控系统部署</h1><h2 id="搭建Zabbix监控系统环境"><a href="#搭建Zabbix监控系统环境" class="headerlink" title="搭建Zabbix监控系统环境"></a>搭建Zabbix监控系统环境</h2><table>搭建环境:<tr><td>名称</td><td>IP配置</td><td>服务角色</td><td>备注</td></tr><tr><td>Server</td><td>192.168.100.10</td><td>zabbix-server</td><td>开启监控功能</td></tr><tr><td>Node1</td><td>192.168.100.11</td><td>zabbix-agent</td><td>开启</td></tr><tr><td>Node2</td><td>192.168.100.12</td><td>zabbix-agent</td><td>开启</td></tr></table><h3 id="所有主机"><a href="#所有主机" class="headerlink" title="所有主机"></a>所有主机</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux<span class="built_in">/config </span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置通过主机名进行通信</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt;-EOF</span><br><span class="line">192.168.100.10 Server</span><br><span class="line">192.168.100.11 Node1</span><br><span class="line">192.168.100.12 Node2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><h4 id="配置Yum仓库"><a href="#配置Yum仓库" class="headerlink" title="配置Yum仓库"></a>配置Yum仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br><span class="line">wget https://mirrors.aliyun.com/zabbix/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">rpm -ivh zabbix-release-4.4-1.el7.noarch.rpm &amp;&amp; rm -rf zabbix-release-4.4-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新Yum仓库</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><h4 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h4><p>上传Zabbix的RPM包到linux中</p><pre><font color="red">zabbix-agent-4.4.4</font>-1.el7.x86_64.rpm<font color="red">zabbix-get-4.4.4</font>-1.el7.x86_64.rpm<font color="red">zabbix-sender-4.4.4</font>-1.el7.x86_64.rpm<font color="red">zabbix-server-mysql-4.4.4</font>-1.el7.x86_64.rpm<font color="red">zabbix-web-4.4.4</font>-1.el7.noarch.rpm<font color="red">zabbix-web-mysql-4.4.4</font>-1.el7.noarch.rpm</pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> [ $? != 0 ]; <span class="keyword">do</span> yum -y install zabbix-agent zabbix-get zabbix-sender zabbix-server-mysql zabbix-web zabbix-web-mysql &amp;&gt; /dev/null ; <span class="keyword">done</span></span><br><span class="line">yum remove -y zabbix-agent zabbix-get zabbix-sender zabbix-server-mysql zabbix-web zabbix-web-mysql</span><br><span class="line"></span><br><span class="line">ls -l *.rpm</span><br><span class="line">rpm -Uvh --force --nodeps *.rpm &amp;&amp; rm -rf *.rpm</span><br></pre></td></tr></table></figure><h4 id="安装设置数据库"><a href="#安装设置数据库" class="headerlink" title="安装设置数据库"></a>安装设置数据库</h4><ol><li><p>安装最新版本的Mariadb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/mariadb.repo &lt;&lt;-EOF</span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB </span><br><span class="line">baseurl = https://mirrors.ustc.edu.cn/mariadb/yum/10.4/centos7-amd64 </span><br><span class="line">gpgkey=https://mirrors.ustc.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB </span><br><span class="line">gpgcheck=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum install -y MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf.d/server.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 跳过主机名解析</span></span><br><span class="line">skip_name_resolve = ON</span><br><span class="line"><span class="comment"># 开启独立表空间    </span></span><br><span class="line">innodb_file_per_table = ON</span><br><span class="line"><span class="comment"># 缓存池大小</span></span><br><span class="line">innodb_buffer_pool_size = 256M</span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line">max_connections = 2000</span><br><span class="line"><span class="comment"># 开启二进制日志</span></span><br><span class="line"><span class="built_in">log</span>-bin = master-log</span><br></pre></td></tr></table></figure></li><li><p>重启数据库服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line">:&lt;&lt;-EOF</span><br><span class="line">Enter current password <span class="keyword">for</span> root (enter <span class="keyword">for</span> none): </span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line"></span><br><span class="line">Switch to unix_socket authentication [Y/n] Y</span><br><span class="line">Enabled successfully!</span><br><span class="line"></span><br><span class="line">Change the root password? [Y/n] n</span><br><span class="line"> ... skipping.</span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n] Y</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n] n</span><br><span class="line"> ... skipping.</span><br><span class="line"></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] Y</span><br><span class="line"> - Dropping <span class="built_in">test</span> database...</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n] Y</span><br><span class="line"> ... Success!</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建数据库并授权账号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">create database zabbix character <span class="built_in">set</span> <span class="string">'utf8'</span>;</span><br><span class="line">grant all on zabbix.* to <span class="string">'zbxuser'</span>@<span class="string">'192.168.100.%'</span> identified by <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="comment"># Zabbix和Mariadb在同一台主机下</span></span><br><span class="line">grant all on zabbix.* to <span class="string">'zbxuser'</span>@<span class="string">'localhost'</span> identified by <span class="string">'zabbix'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li><li><p>导入Zabbix服务表</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cp `rpm -ql zabbix-<span class="keyword">server</span>-mysql | grep "create"` ./</span><br><span class="line">gzip -d <span class="keyword">create</span>.<span class="keyword">sql</span>.gz &amp;&amp; rm -rf <span class="keyword">create</span>.<span class="keyword">sql</span>.gz</span><br><span class="line">head <span class="keyword">create</span>.<span class="keyword">sql</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'1i USE zabbix'</span> <span class="keyword">create</span>.<span class="keyword">sql</span></span><br><span class="line">head <span class="keyword">create</span>.<span class="keyword">sql</span></span><br><span class="line"></span><br><span class="line">mysql -uzbxuser -h192<span class="number">.168</span><span class="number">.100</span><span class="number">.10</span> -pzabbix &lt; <span class="keyword">create</span>.<span class="keyword">sql</span> &amp;&amp; rm -rf <span class="keyword">create</span>.<span class="keyword">sql</span></span><br><span class="line">mysql -uzbxuser -h192<span class="number">.168</span><span class="number">.100</span><span class="number">.10</span> -pzabbix</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use zabbix;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="配置Server端"><a href="#配置Server端" class="headerlink" title="配置Server端"></a>配置Server端</h4><ol><li><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/zabbix/</span><br><span class="line">cp zabbix_server.conf&#123;,.back&#125;</span><br><span class="line"></span><br><span class="line">:&lt;&lt;-EOF</span><br><span class="line">默认监听端口</span><br><span class="line">ListenPort=10051</span><br><span class="line"></span><br><span class="line">发采样数据请求的IP</span><br><span class="line">SourceIP=192.168.100.10</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'/ListenPort=/c ListenPort=10051'</span> zabbix_server.conf</span><br><span class="line">sed -i <span class="string">'/SourceIP=/c SourceIP=192.168.100.10'</span> zabbix_server.conf</span><br></pre></td></tr></table></figure></li><li><p>Zabbix日志</p></li></ol><ul><li>默认用文件记录, 也可以发送给rsyslog日志记录系统, 如果选择默认, 则日志存放在<code>LogFile=/var/log/zabbix/zabbix_server.log</code>中, 也可以自己设置.</li></ul><ol start="3"><li>日志滚动</li></ol><ul><li>默认值为1, 表示滚动. 设为0则表示不滚动. 当数据特别多的时候, 也可以设置成为1, 然后在<code>Maximum size of log file in MB.</code>设置当数据文件最大到多少时会自动滚动.<pre>### Option: LogFileSize#       <font color="red">Maximum size of log file in MB.</font>#       <font color="red">0 - disable automatic log rotation.</font>## Mandatory: no# Range: 0-1024# Default:# <font color="red">LogFileSize=1</font><br><font color="red">LogFileSize=0</font></pre></li></ul><ol start="4"><li>日志级别</li></ol><ul><li>一共有6个级别, 可以根据自己的需要来设置级别. 其中0表示输出最少的信息, 5表示输出最详细的信息, 默认值为3, 设置为3的话就表示, 0、1、2、3四个级别都显示. 考虑到生产系统中的压力时, 这里的信息, 如果没有必要的话, 越简单越好, 只要在出错的时候, 可以依据其进行排错即可.<pre>### Option: DebugLevel#       Specifies debug level:#       <font color="red">0</font> - basic information about starting and stopping of Zabbix processes#       <font color="red">1</font> - critical information#       <font color="red">2</font> - error information#       <font color="red">3</font> - warnings#       <font color="red">4</font> - for debugging (produces lots of information)#       <font color="red">5</font> - extended debugging (produces even more information)## Mandatory: no# Range: 0-5# Default:# <font color="red">DebugLevel=3</font></pre></li></ul><ol start="5"><li><p>数据库相关的设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;-EOF</span><br><span class="line">数据库对外的主机</span><br><span class="line">DBHost=192.168.100.10</span><br><span class="line"></span><br><span class="line">数据库名称</span><br><span class="line">DBName=zabbix</span><br><span class="line"></span><br><span class="line">数据库用户</span><br><span class="line">DBUser=zbxuser</span><br><span class="line"></span><br><span class="line">数据库密码</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line">数据库启动端口</span><br><span class="line">DBPort=3306</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'/DBHost=/c DBHost=192.168.100.10'</span> zabbix_server.conf</span><br><span class="line">sed -i <span class="string">'/DBName=z/c DBName=zabbix'</span> zabbix_server.conf</span><br><span class="line">sed -i <span class="string">'/^DBUser=/c DBUser=zbxuser'</span> zabbix_server.conf</span><br><span class="line">sed -i <span class="string">'/DBPassword=/c DBPassword=zabbix'</span> zabbix_server.conf</span><br><span class="line">sed -i <span class="string">'/DBPort=/c DBPort=3306'</span> zabbix_server.conf</span><br><span class="line">cat zabbix_server.conf | grep -Ev <span class="string">'#|^$'</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务并确认服务端口是否开启</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> zabbix-<span class="keyword">server</span>.service</span><br><span class="line">systemctl status zabbix-<span class="keyword">server</span>.service</span><br><span class="line">ss -tnul | grep <span class="number">10051</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="配置Web-GUI"><a href="#配置Web-GUI" class="headerlink" title="配置Web GUI"></a>配置Web GUI</h4><ol><li><p>查找Web GUI的配置文件</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql zabbix-web <span class="string">| grep "</span>zabbix.conf<span class="string">"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">:&lt;&lt;-EOF</span><br><span class="line">    &lt;IfModule mod_php5.c&gt;</span><br><span class="line">        脚本执行的最大时长</span><br><span class="line">        php_value max_execution_time <span class="number">300</span></span><br><span class="line">        内存大小</span><br><span class="line">        php_value memory_limit <span class="number">128</span>M</span><br><span class="line">        php_value post_max_size <span class="number">16</span>M</span><br><span class="line">        php_value upload_max_filesize <span class="number">2</span>M</span><br><span class="line">        php_value max_input_time <span class="number">300</span></span><br><span class="line">        php_value max_input_vars <span class="number">10000</span></span><br><span class="line">        php_value always_populate_raw_post_data <span class="number">-1</span></span><br><span class="line">        设置时区</span><br><span class="line">        # php_value date.timezone Europe/Riga</span><br><span class="line">    &lt;/IfModule&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><div class="note info"><p>时区是一定要设置的, 这里被注释掉是因为要在php的配置文件中设置时区, 如果在php配置文件中设置时区, 则对所有的php服务均有效, 如果在zabbix.conf中设置时区, 则仅对zabbix服务有效.</p></div></li><li><p>在php配置文件中设置时区后, 启动httpd服务.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i '/;<span class="keyword">date</span>.timezone =/c <span class="keyword">date</span>.timezone = Asia/Shanghai' /etc/php.ini</span><br><span class="line">systemctl enable httpd</span><br><span class="line">systemctl <span class="literal">start</span> httpd</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问并进行初始化设置</p><table><code>http://192.168.100.10/zabbix</code><tr><td><img src="/post/bb6c6bce/Zabbix Web界面登陆.png" title="首页面"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆2.png" title="检查依赖项"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆3.png" title="连接数据库"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆4.png" title="Zabbix Server信息"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆5.png" title="确认信息"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆6.png" title="安装结果"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆7.png" title="登陆界面"></td><td><img src="/post/bb6c6bce/Zabbix Web界面登陆8.png" title="仪表盘"></td></tr></table></li></ol><h4 id="配置agent端"><a href="#配置agent端" class="headerlink" title="配置agent端"></a>配置agent端</h4><ol><li><p>确认配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql zabbix-agent | grep <span class="string">"zabbix_agentd.conf"</span></span><br><span class="line"><span class="comment"># /etc/zabbix/zabbix_agentd.conf</span></span><br></pre></td></tr></table></figure></li><li><p>编制配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/zabbix/</span><br><span class="line">cp zabbix_agentd.conf&#123;,.back&#125;</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"/^Server=127.0.0.1/s/127.0.0.1/192.168.100.10/"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# ListenPort=10050/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# ListenIP=0.0.0.0/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# StartAgents=3/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^ServerActive=127.0.0.1/s/127.0.0.1/192.168.100.10/"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# Hostname=/c Hostname=Server"</span> /etc/zabbix/zabbix_agentd.conf</span><br></pre></td></tr></table></figure></li><li><p>启动服务并查看端口是否已经开启</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">start zabbix-agent.service</span></span><br><span class="line"><span class="attr">ss</span> <span class="string">-tunl | grep 10050</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><h4 id="配置agent端-1"><a href="#配置agent端-1" class="headerlink" title="配置agent端"></a>配置agent端</h4><ol><li><p>上传zabbix-agens、zabbix-sender的RPM包, 并安装.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> -l *<span class="string">.rpm</span></span><br><span class="line">rpm -Uvh <span class="params">--force</span> <span class="params">--nodeps</span> *<span class="string">.rpm</span></span><br></pre></td></tr></table></figure></li><li><p>确认配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql zabbix-agent | grep <span class="string">"zabbix_agentd.conf"</span></span><br><span class="line"><span class="comment"># /etc/zabbix/zabbix_agentd.conf</span></span><br></pre></td></tr></table></figure></li><li><p>编制配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/zabbix/</span><br><span class="line">cp zabbix_agentd.conf&#123;,.back&#125;</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"/^Server=127.0.0.1/s/127.0.0.1/192.168.100.10/"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# ListenPort=10050/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# ListenIP=0.0.0.0/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">sed -i <span class="string">"/^# StartAgents=3/s/#//"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"><span class="comment"># 将"Hostname="修改成对应的主机名</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务并查看端口是否已经开启</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">start zabbix-agent.service</span></span><br><span class="line"><span class="attr">ss</span> <span class="string">-tunl | grep 10050</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="Node1"><a href="#Node1" class="headerlink" title="Node1"></a>Node1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"/^# Hostname=/c Hostname=Node1"</span> /etc/zabbix/ssszabbix_agentd.conf</span><br></pre></td></tr></table></figure><h4 id="Node2"><a href="#Node2" class="headerlink" title="Node2"></a>Node2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"/^# Hostname=/c Hostname=Node2"</span> /etc/zabbix/zabbix_agentd.conf</span><br></pre></td></tr></table></figure><h2 id="配置Zabbix监控系统s"><a href="#配置Zabbix监控系统s" class="headerlink" title="配置Zabbix监控系统s"></a>配置Zabbix监控系统s</h2><h3 id="修改密码及中文显示"><a href="#修改密码及中文显示" class="headerlink" title="修改密码及中文显示"></a>修改密码及中文显示</h3><table><tr>Password: zbx123mm<td><img src="/post/bb6c6bce/修改密码和中文显示.png" title="首页"></td><td><img src="/post/bb6c6bce/修改密码和中文显示2.png" title="更改密码和语言"></td><td><img src="/post/bb6c6bce/修改密码和中文显示3.png" title="输入密码"></td><td><img src="/post/bb6c6bce/修改密码和中文显示4.png" title="选择语言后更新"></td></tr></table><h3 id="创建主机及主机群组"><a href="#创建主机及主机群组" class="headerlink" title="创建主机及主机群组"></a>创建主机及主机群组</h3><table><tr><td><img src="/post/bb6c6bce/创建主机及主机群组.png" title="主机群组首页"></td><td><img src="/post/bb6c6bce/创建主机及主机群组2.png" title="添加主机群组"></td><td><img src="/post/bb6c6bce/创建主机及主机群组3.png" title="主机群组添加结果"></td><td><img src="/post/bb6c6bce/创建主机及主机群组4.png" title="主机首页"></td><td><img src="/post/bb6c6bce/创建主机及主机群组5.png" title="添加主机"></td><td><img src="/post/bb6c6bce/创建主机及主机群组6.png" title="添加主机结果"></td></tr></table><h3 id="监控项"><a href="#监控项" class="headerlink" title="监控项"></a>监控项</h3><table><tr><td><img src="/post/bb6c6bce/应用集.png" title="主机首页"></td><td><img src="/post/bb6c6bce/应用集2.png" title="创建应用集"></td><td><img src="/post/bb6c6bce/应用集3.png" title="输入应用集名"></td><td><img src="/post/bb6c6bce/应用集4.png" title="添加结果"></td></tr></table><h4 id="中文乱码解决"><a href="#中文乱码解决" class="headerlink" title="中文乱码解决"></a>中文乱码解决</h4><p>Windows中找到字体文件<br><code>Win+R:C:\Windows\Fonts</code><br>上传到linux中后修改权限<br><code>chmod 666 字体文件名</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">whereis zabbix | grep <span class="string">"/share/zabbix"</span></span><br><span class="line">find <span class="meta-keyword">/usr/</span>share/zabbix -name fonts</span><br><span class="line">cd <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/zabbix/</span>assets/fonts</span><br><span class="line">rm -f <span class="meta-keyword">/etc/</span>alternatives/zabbix-web-font</span><br><span class="line">ln -s <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/zabbix/</span>assets<span class="meta-keyword">/fonts/</span>SIMFANG.TTF <span class="meta-keyword">/etc/</span>alternatives/zabbix-web-font</span><br><span class="line">systemctl restart zabbix-server</span><br></pre></td></tr></table></figure><table><tr><td><img src="/post/bb6c6bce/中文乱码.png" title="乱码解决"></td></tr></table><h4 id="CPU中断数"><a href="#CPU中断数" class="headerlink" title="CPU中断数"></a>CPU中断数</h4><table><tr><td><img src="/post/bb6c6bce/CPU中断数5.png" title="监控项首页"></td><td><img src="/post/bb6c6bce/CPU中断数6.png" title="添加监控项"></td><td><img src="/post/bb6c6bce/CPU中断数6.1.png" title="添加进程"></td><td><img src="/post/bb6c6bce/CPU中断数6.2.png" title="添加步骤"></td><td><img src="/post/bb6c6bce/CPU中断数6.3.png" title="进程示例"></td><td><img src="/post/bb6c6bce/CPU中断数7.png" title="监控项示例"></td><td><img src="/post/bb6c6bce/CPU中断数8.png" title="添加监控项结果"></td><td><img src="/post/bb6c6bce/CPU中断数9.png" title="主机ZBX亮起"></td></tr></table><p>key值可以直接在网页上设置(服务器自动执行), 也可以使用命令行命令(手动执行)来获取:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 192<span class="selector-class">.168</span><span class="selector-class">.100</span><span class="selector-class">.10</span> <span class="selector-tag">-p</span> 10050 <span class="selector-tag">-k</span> "<span class="selector-tag">system</span><span class="selector-class">.cpu</span><span class="selector-class">.intr</span>"</span><br></pre></td></tr></table></figure><p>在agent端, 也可以使用命令来查看intr的速率变化:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat <span class="number">1</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="/post/bb6c6bce/vmstat 1.png" title="vmstat 1"></td></tr><tr><td><img src="/post/bb6c6bce/最新数据查看.png" title="监测"></td><td><img src="/post/bb6c6bce/最新数据查看2.png" title="最新数据"></td><td><img src="/post/bb6c6bce/最新数据查看3.png" title="图形"></td><td><img src="/post/bb6c6bce/最新数据查看4.png" title="1小时数据显示"></td><td><img src="/post/bb6c6bce/最新数据查看5.png" title="15分数据显示"></td><td><img src="/post/bb6c6bce/最新数据查看6.png" title="数据变化显示"></td></tr></table><h4 id="网卡端口流量"><a href="#网卡端口流量" class="headerlink" title="网卡端口流量"></a>网卡端口流量</h4><table><tr><td><img src="/post/bb6c6bce/CPU中断数5.png" title="监控项首页"></td><td><img src="/post/bb6c6bce/CPU中断数6 (2).png" title="添加监控项"></td><td><img src="/post/bb6c6bce/CPU中断数6.1.png" title="添加进程"></td><td><img src="/post/bb6c6bce/CPU中断数6.2.png" title="添加步骤"></td><td><img src="/post/bb6c6bce/CPU中断数6.3.png" title="进程示例"></td><td><img src="/post/bb6c6bce/网卡端口流量.png" title="监控项示例"></td><td><img src="/post/bb6c6bce/网卡端口流量2.png" title="添加监控项结果"></td></tr></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 192<span class="selector-class">.168</span><span class="selector-class">.100</span><span class="selector-class">.10</span> <span class="selector-tag">-p</span> 10050 <span class="selector-tag">-k</span> "<span class="selector-tag">net</span><span class="selector-class">.if</span><span class="selector-class">.in</span><span class="selector-attr">[ens33,packets]</span>"</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.zabbix.com/cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Zabbix&lt;/a&gt;是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案. zabbix能监视各种网络参数, 保证服务器系统的安全运营; 并提供灵活的通知机制以让系统管理员快速定位, 解决存在的各种问题.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/bb6c6bce/Zabbix拓扑图.png&quot; title=&quot;Zabbix拓扑&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/bb6c6bce/监控对象分类.png&quot; title=&quot;监控对象&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Zabbix" scheme="http://www.mengyun.club/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Nagios监控系统</title>
    <link href="http://www.mengyun.club/post/25c16f2d/"/>
    <id>http://www.mengyun.club/post/25c16f2d/</id>
    <published>2020-09-19T02:26:11.000Z</published>
    <updated>2020-09-19T14:54:44.034Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="Nagios简介"><a href="#Nagios简介" class="headerlink" title="Nagios简介"></a>Nagios简介</h1><p><a href="https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/toc.html" target="_blank" rel="noopener">Nagios</a>是一款开源的计算机系统和网络监视工具, 能有效监控Windows、Linux和UNIX的主机和各种服务状态. 状态异常时会发出电子邮件或短信报警, 以便在第一时间通知网站运维人员. 在状态恢复后会发出正常的电子邮件或短信通知.</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><pre> 网络服务监控: SMTP、POP3、HTTP、NNTP、ICMP、SNMP、FTP、SSH 主机资源监控: CPU load(CPU负载)、Disk usage(磁盘使用情况)、System logs(系统日志) <font color="green">--Windows主机使用NSClient++ plugin进行监控</font></pre><a id="more"></a><h1 id="Nagios监控系统的搭建与配置"><a href="#Nagios监控系统的搭建与配置" class="headerlink" title="Nagios监控系统的搭建与配置"></a>Nagios监控系统的搭建与配置</h1><p>搭建环境</p><table><tr><td>主机</td><td>操作系统</td><td>ip地址</td></tr><tr><td>Nagios</td><td>CentOS 7.3</td><td>192.168.100.11</td></tr><tr><td>MySQL</td><td>CentOS 7.3</td><td>192.168.100.12</td></tr></table><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>两台主机进行时间同步(暂时性)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ntp</span><br><span class="line">ntpdate ntp1.aliyun.com</span><br></pre></td></tr></table></figure><p>Nagios主机配置好邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mailx</span><br><span class="line">vi /etc/mail.rc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送邮件进行测试</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"--------test---------"</span> | mail -s <span class="string">"mailx-test"</span>  xxx@qq.com</span><br></pre></td></tr></table></figure><details blue><summary> <p>mail.rc-QQ邮箱为例</p> </summary>              <div class="content">              <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> <span class="attribute">from</span>=xxx@qq.com <span class="attribute">smtp</span>=<span class="string">"smtp.qq.com"</span></span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">smtp-auth-user</span>=<span class="string">"xxx@qq.com"</span> <span class="attribute">smtp-auth-password</span>=<span class="string">"授权码"</span></span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">smtp-auth</span>=login</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="搭建Nagios监控环境"><a href="#搭建Nagios监控环境" class="headerlink" title="搭建Nagios监控环境"></a>搭建Nagios监控环境</h2><h3 id="安装Nagios"><a href="#安装Nagios" class="headerlink" title="安装Nagios"></a>安装Nagios</h3><ol><li><p>关闭SeLinux</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/SELINUX=.*/SELINUX=disabled/g'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure></li><li><p>安装所需软件包</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc glibc glibc-common wget unzip httpd php <span class="built_in">gd</span> <span class="built_in">gd</span>-devel perl <span class="built_in">postfix</span></span><br></pre></td></tr></table></figure></li><li><p>下载Nagios软件包</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/src/</span></span><br><span class="line">wget -O nagioscore.tar.gz https:<span class="regexp">//gi</span>thub.com<span class="regexp">/NagiosEnterprises/</span>nagioscore<span class="regexp">/archive/</span>nagios-<span class="number">4.4</span>.<span class="number">5</span>.tar.gz</span><br><span class="line">tar xzf nagioscore.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译Nagios</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> nagioscore-nagios-<span class="number">4.4</span>.<span class="number">5</span>/</span><br><span class="line">./configure</span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span></span><br></pre></td></tr></table></figure></li><li><p>创建用户并添加组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make <span class="keyword">install</span>-<span class="keyword">groups</span>-<span class="keyword">users</span></span><br><span class="line">usermod -a -G nagios apache</span><br></pre></td></tr></table></figure></li><li><p>二进制安装Nagios, 并安装服务(守护程序)、配置文件.</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> install</span><br><span class="line"><span class="built_in">make</span> install-daemoninit</span><br><span class="line">systemctl <span class="keyword">enable</span> httpd.service</span><br><span class="line"></span><br><span class="line"><span class="built_in">make</span> install-commandmode</span><br><span class="line"><span class="built_in">make</span> install-config</span><br><span class="line"><span class="built_in">make</span> install-webconf</span><br></pre></td></tr></table></figure></li><li><p>配置防火墙开启80端口</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--add-port</span>=80/tcp</span><br><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--add-port</span>=80/tcp --permanent</span><br></pre></td></tr></table></figure></li><li><p>创建Nagios用户认证文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -c <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nagios/</span>etc/htpasswd.users nagiosadmin</span><br><span class="line"><span class="meta"># 输入密码: </span></span><br><span class="line"><span class="meta"># 再次输入密码:</span></span><br></pre></td></tr></table></figure></li><li><p>开启服务</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> httpd.service</span><br><span class="line">systemctl <span class="literal">start</span> nagios.service</span><br><span class="line"><span class="comment"># url: http://192.168.100.11/nagios/</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="安装Nagios插件"><a href="#安装Nagios插件" class="headerlink" title="安装Nagios插件"></a>安装Nagios插件</h3><h4 id="192-168-100-11"><a href="#192-168-100-11" class="headerlink" title="192.168.100.11"></a>192.168.100.11</h4><ol><li><p>安装所需软件包</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc glibc glibc-common make gettext automake autoconf wget openssl-devel <span class="built_in">net</span>-snmp <span class="built_in">net</span>-snmp-utils epel-release </span><br><span class="line">yum install -y perl-<span class="built_in">Net</span>-SNMP</span><br></pre></td></tr></table></figure></li><li><p>下载Nagios插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/src/</span></span><br><span class="line">wget --no-check-certificate -O nagios-plugins.tar.gz https:<span class="regexp">//gi</span>thub.com<span class="regexp">/nagios-plugins/</span>nagios-plugins<span class="regexp">/archive/</span>release-<span class="number">2.2</span>.<span class="number">1</span>.tar.gz</span><br><span class="line">tar zxf nagios-plugins.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译并安装</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/nagios-plugins-release-2.2.1/</span></span><br><span class="line"><span class="string">./tools/setup</span></span><br><span class="line"><span class="string">./configure</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>下载nrpe软件, 并上传解压.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">tar zxf nrpe<span class="number">-3.2</span><span class="number">.1</span>.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译并安装</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> nrpe-<span class="number">3.2</span>.<span class="number">1</span></span><br><span class="line">./configure</span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span> &amp;&amp; <span class="keyword">make</span> install-plugin &amp;&amp; <span class="keyword">make</span> install-config &amp;&amp; <span class="keyword">make</span> install-daemon</span><br></pre></td></tr></table></figure></li></ol><h4 id="192-168-100-12"><a href="#192-168-100-12" class="headerlink" title="192.168.100.12"></a>192.168.100.12</h4><ol><li><p>安装所需软件包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y openssl-devel gcc</span><br></pre></td></tr></table></figure></li><li><p>下载Nagios插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/src/</span></span><br><span class="line">wget --no-check-certificate -O nagios-plugins.tar.gz https:<span class="regexp">//gi</span>thub.com<span class="regexp">/nagios-plugins/</span>nagios-plugins<span class="regexp">/archive/</span>release-<span class="number">2.2</span>.<span class="number">1</span>.tar.gz</span><br><span class="line">tar zxf nagios-plugins.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译并安装</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd nagios-plugins-release-2.2.1</span><br><span class="line">libtoolize --force <span class="variable">&amp;&amp;</span> aclocal <span class="variable">&amp;&amp;</span> autoheader <span class="variable">&amp;&amp;</span> automake --force-<span class="meta">missing</span> --<span class="meta">add</span>-<span class="meta">missing</span> <span class="variable">&amp;&amp;</span> autoconf</span><br><span class="line">./tools/setup</span><br><span class="line">./configure</span><br><span class="line">make <span class="variable">&amp;&amp;</span> make install</span><br><span class="line">chown -R nagios:nagios /usr/local/nagios/</span><br></pre></td></tr></table></figure></li><li><p>下载nrpe软件, 并上传解压.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">tar zxf nrpe<span class="number">-3.2</span><span class="number">.1</span>.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>编译并安装</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> nrpe-<span class="number">3.2</span>.<span class="number">1</span></span><br><span class="line">./configure</span><br><span class="line"><span class="keyword">make</span> <span class="keyword">all</span> &amp;&amp; <span class="keyword">make</span> install-plugin &amp;&amp; <span class="keyword">make</span> install-config &amp;&amp; <span class="keyword">make</span> install-daemon</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置Nagios监控系统"><a href="#配置Nagios监控系统" class="headerlink" title="配置Nagios监控系统"></a>配置Nagios监控系统</h2><p>配置顺序说明:</p><ol><li>创建conf目录来存放hosts.cfg定义文件</li><li>使用默认自带的commands.cfg文件来定义命令</li><li>创建hosts.cfg文件来定义主机和主机组</li><li>使用默认自带的contacts.cfg文件来定义联系人和联系人组</li><li>使用默认自带的timeperiods.cfg文件来定义监控时间段</li></ol><h3 id="192-168-100-11-1"><a href="#192-168-100-11-1" class="headerlink" title="192.168.100.11"></a>192.168.100.11</h3><ol><li><p>添加引用, 并创建存放目录.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nagios/etc/</span><br><span class="line">vi nagios.cfg</span><br><span class="line"><span class="comment"># 第55行</span></span><br><span class="line">cfg_dir=/usr/<span class="built_in">local</span>/nagios/etc/conf</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/nagios/etc/conf</span><br></pre></td></tr></table></figure></li><li><p>在默认自带的commands.cfg文件末尾中新增监控命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi</span> objects/commands.cfg</span><br></pre></td></tr></table></figure><details blue><summary> <p>commands.cfg-copy</p> </summary>              <div class="content">              <figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">define command&#123;</span><br><span class="line">    command_name            check_nrpe</span><br><span class="line">    command_line            <span class="variable">$USER1</span><span class="variable">$/</span>check_nrpe -H <span class="variable">$HOSTADDRESS</span><span class="variable">$ </span>-c<span class="variable">$ARG1</span>$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>编辑hosts.cfg文件定义主机和主机组</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span> <span class="keyword">conf</span>/hosts.cfg</span><br></pre></td></tr></table></figure><details blue><summary> <p>hosts.cfg-copy</p> </summary>              <div class="content">              <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">define host&#123;</span><br><span class="line"></span><br><span class="line">    use                     linux-server</span><br><span class="line">    host_name               192.168.100.12</span><br><span class="line">    alias                   192.168.100.12</span><br><span class="line">   <span class="built_in"> address </span>                192.168.100.12</span><br><span class="line">    hostgroups              slaves</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define hostgroup&#123;</span><br><span class="line"></span><br><span class="line">    hostgroup_name          slaves</span><br><span class="line">    alias                   Linux Servers</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line"></span><br><span class="line">    use                     generic-service </span><br><span class="line">    host_name               192.168.100.12</span><br><span class="line">    service_description     check-load </span><br><span class="line">    check_command           check_nrpe!check_load</span><br><span class="line">    contact_groups          system</span><br><span class="line">    notifications_enabled   1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line"></span><br><span class="line">    use                     generic-service </span><br><span class="line">    host_name               192.168.100.12</span><br><span class="line">    service_description     check-users</span><br><span class="line">    check_command           check_nrpe!check_users</span><br><span class="line">    contact_groups          system</span><br><span class="line">    notifications_enabled   1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line"></span><br><span class="line">    use                     generic-service </span><br><span class="line">    host_name               192.168.100.12</span><br><span class="line">    service_description     otal_procs</span><br><span class="line">    check_command           check_nrpe!check_total_procs</span><br><span class="line">    contact_groups          system</span><br><span class="line">    notifications_enabled   1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line"></span><br><span class="line">    use                     generic-service </span><br><span class="line">    host_name               192.168.100.12</span><br><span class="line">    service_description     check-mariadb</span><br><span class="line">    check_command           check_tcp!3306</span><br><span class="line">    contact_groups          system</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>在默认自带的contacts.cfg文件末尾中新增联系人和联系人组</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi</span> objects/contacts.cfg</span><br></pre></td></tr></table></figure><details blue><summary> <p>contacts.cfg-copy</p> </summary>              <div class="content">              <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">define contact &#123;</span><br><span class="line"></span><br><span class="line">    contact_name            zl</span><br><span class="line">    use                     generic-contact</span><br><span class="line">    alias                   zl</span><br><span class="line">    email                   邮箱地址1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define contact &#123;</span><br><span class="line"></span><br><span class="line">    contact_name            zl2</span><br><span class="line">    use                     generic-contact</span><br><span class="line">    alias                   zl2</span><br><span class="line">    email                   邮箱地址2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define contactgroup &#123;</span><br><span class="line"></span><br><span class="line">    contactgroup_name       system</span><br><span class="line">    alias                   system</span><br><span class="line">    members                 zl,zl2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><p>编辑默认自带的timeperiods.cfg文件里的监控时间段, 以便查看监控效果.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi objects/templates.cfg</span><br><span class="line"><span class="comment"># 第72行</span></span><br><span class="line">check_interval                  1</span><br><span class="line"><span class="comment"># 第74行</span></span><br><span class="line">max_check_attempts              2</span><br></pre></td></tr></table></figure></li></ol><p>检查文件语法的正确性</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/nagios/</span>bin<span class="regexp">/nagios -v /u</span>sr<span class="regexp">/local/</span>nagios<span class="regexp">/etc/</span>nagios.cfg</span><br></pre></td></tr></table></figure><pre>Total Warnings: <font color="red">0</font>Total Errors:   <font color="red">0</font>Things look okay - No serious problems were detected during the pre-flight check</pre><p>语法无误后重启Nagios服务</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nagios.service</span><br><span class="line"><span class="meta"># url: http:<span class="comment">//192.168.100.11/nagios/</span></span></span><br></pre></td></tr></table></figure><h3 id="192-168-100-12-1"><a href="#192-168-100-12-1" class="headerlink" title="192.168.100.12"></a>192.168.100.12</h3><p>被监控的主机配置允许监控端监控的ip地址</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nagios/etc/nrpe.cfg</span><br><span class="line">allowed_hosts=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>,<span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span></span><br></pre></td></tr></table></figure><p>编辑nrpe.cfg文件, 开启监控插件.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep -v <span class="string">"^#|^$"</span> <span class="regexp">/usr/</span>local<span class="regexp">/nagios/</span>etc<span class="regexp">/nrpe.cfg</span></span><br></pre></td></tr></table></figure><p>安装MySQL, 启动服务.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y mariadb-<span class="keyword">server</span></span><br><span class="line">systemctl <span class="keyword">start</span> mariadb</span><br></pre></td></tr></table></figure><h2 id="定义文件的关联性说明"><a href="#定义文件的关联性说明" class="headerlink" title="定义文件的关联性说明"></a>定义文件的关联性说明</h2><p>监控命令的定义文件</p><pre>define command{    command_name            <font color="Cyan">check_nrpe</font>    command_line            $USER1$/check_nrpe -H $HOSTADDRESS$ -c$ARG1$}</pre><p>联系人和联系人组的定义文件</p><pre>define contact {    contact_name            zl    use                     generic-contact    alias                   zl    email                   邮箱地址1}define contact {    contact_name            zl2    use                     generic-contact    alias                   zl2    email                   邮箱地址2}define contactgroup {    contactgroup_name       <font color="yellow">system</font>    alias                   <font color="yellow">system</font>    members                 zl,zl2}</pre><p>主机和主机组的定义文件</p><pre>define host{    use                     linux-server    host_name               <font color="red">192.168.100.12</font>    alias                   <font color="red">192.168.100.12</font>    address                 <font color="red">192.168.100.12</font>    hostgroups              <font color="green">slaves</font>}define hostgroup{    hostgroup_name          <font color="green">slaves</font>    alias                   Linux Servers}define service{    use                     generic-service     host_name               <font color="red">192.168.100.12</font>    service_description     check-load     check_command           <font color="Cyan">check_nrpe</font>!check_load    contact_groups          <font color="yellow">system</font>    notifications_enabled   1}define service{    use                     generic-service     host_name               <font color="red">192.168.100.12</font>    service_description     check-users    check_command           <font color="Cyan">check_nrpe</font>!check_users    contact_groups          <font color="yellow">system</font>    notifications_enabled   1}define service{    use                     generic-service     host_name               <font color="red">192.168.100.12</font>    service_description     otal_procs    check_command           <font color="Cyan">check_nrpe</font>!check_total_procs    contact_groups          <font color="yellow">system</font>    notifications_enabled   1}define service{    use                     generic-service     host_name               <font color="red">192.168.100.12</font>    service_description     check-mariadb    check_command           check_tcp!3306    contact_groups          <font color="yellow">system</font>}</pre>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Nagios简介&quot;&gt;&lt;a href=&quot;#Nagios简介&quot; class=&quot;headerlink&quot; title=&quot;Nagios简介&quot;&gt;&lt;/a&gt;Nagios简介&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/toc.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nagios&lt;/a&gt;是一款开源的计算机系统和网络监视工具, 能有效监控Windows、Linux和UNIX的主机和各种服务状态. 状态异常时会发出电子邮件或短信报警, 以便在第一时间通知网站运维人员. 在状态恢复后会发出正常的电子邮件或短信通知.&lt;/p&gt;
&lt;h2 id=&quot;主要功能&quot;&gt;&lt;a href=&quot;#主要功能&quot; class=&quot;headerlink&quot; title=&quot;主要功能&quot;&gt;&lt;/a&gt;主要功能&lt;/h2&gt;&lt;pre&gt;
 网络服务监控: SMTP、POP3、HTTP、NNTP、ICMP、SNMP、FTP、SSH
 主机资源监控: CPU load(CPU负载)、Disk usage(磁盘使用情况)、System logs(系统日志)
 &lt;font color=&quot;green&quot;&gt;--Windows主机使用NSClient++ plugin进行监控&lt;/font&gt;
&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Nagios" scheme="http://www.mengyun.club/tags/Nagios/"/>
    
  </entry>
  
  <entry>
    <title>Docker数据管理与网络通信</title>
    <link href="http://www.mengyun.club/post/6b6ee287/"/>
    <id>http://www.mengyun.club/post/6b6ee287/</id>
    <published>2020-09-04T10:37:34.000Z</published>
    <updated>2020-09-19T15:10:48.140Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="Docker镜像的创建方法"><a href="#Docker镜像的创建方法" class="headerlink" title="Docker镜像的创建方法"></a>Docker镜像的创建方法</h1><h2 id="基于已有镜像创建"><a href="#基于已有镜像创建" class="headerlink" title="基于已有镜像创建"></a>基于已有镜像创建</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">把一个容器里面运行的程序以及该程序的运行环境打包起来生成新的镜像: </span><br><span class="line">docker <span class="keyword">commit</span> [选项] 容器<span class="keyword">ID</span>/名称 仓库名称[:标签]</span><br><span class="line">  |__ -m <span class="comment">--说明信息</span></span><br><span class="line">  |__ -a <span class="comment">--作者信息</span></span><br><span class="line">  |__ -p <span class="comment">--生成过程中停止容器的运行</span></span><br></pre></td></tr></table></figure><pre>把一个容器里面运行的程序以及该程序的运行环境打包起来生成新的镜像: docker commit [选项] 容器ID/名称 仓库名称[:标签]  |__ -m --说明信息  |__ -a --作者信息  |__ -p --生成过程中停止容器的运行</pre><a id="more"></a><h2 id="基于本地模板创建"><a href="#基于本地模板创建" class="headerlink" title="基于本地模板创建"></a>基于本地模板创建</h2><pre>通过导入操作系统模板文件可以生成镜像, 模板可以从OPENVZ开源项目下载, <a class="post-pre-a" href="http://openvz.org/Download/template/precreated" target="_blank" rel="noopener">下载地址</a>.cat 文件名 | docker import - 生成的仓库名称:标签</pre><h2 id="基于Dockerfile创建"><a href="#基于Dockerfile创建" class="headerlink" title="基于Dockerfile创建"></a>基于Dockerfile创建</h2><p>Dockerfile是由一组指令组成的文件, 其中每条指令对应Linux中的一条命令, Docker程序将读取Dockerfile中的指令生成指定镜像.<br>Dockerfile结构大致分为四个部分: 基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令.<br>Dockerfile每行支持一条指令, 每条指令可携带多个参数, 支持使用以”#”号开头的注释.</p><pre>在编写Dockerfile时, 有严格的格式需要遵循: <a class="post-pre-a" href="https://docs.docker.com/engine/reference/builder/#from" target="_blank" rel="noopener">官方文档</a>1.第一行必须使用FROM指令指取所基于的镜像名称;2.之后使用MAINTAINER指令说明维护该镜像的用户信息;3.然后是镜像操作相关指令, 每运行一条指令, 都会给基础镜像添加新的一层.4.最后使用CMD指令, 来指定启动容器时要运行的命令操作.</pre><table>Dockerfile操作指令<tr><td>指令</td><td>含义</td></tr><tr><td>FROM 镜像</td><td>指定新镜像所基于的镜像, 第一条指令必须为FROM指令, 每创建一个镜像就需要一条FROM指令.</td></tr><tr><td>MAINTAINER 名字</td><td>说明新镜像的维护人信息</td></tr><tr><td>RUN 命令</td><td>在所基于的镜像上执行命令, 并提交到新的镜像中.</td></tr><tr><td>CMD ["要运行的程序", "参数1", "参数2"]</td><td>指定启动容器时要运行的命令或者脚本, Dockerfile只能有一条CMD命令, 如果指定多条则只有最后一条被执行.</td></tr><tr><td>ENTRYPOINT 命令</td><td>指定启动容器时要运行的命令或者脚本</td></tr><tr><td>EXPOSE 端口号</td><td>指定新镜像加载到Docker时要开启的端口</td></tr><tr><td>ENV 环境变量 变量值</td><td>设置一个环境变量的值</td></tr><tr><td>ADD 源文件 目标目录</td><td>将源文件复制到目标目录中, 源文件要与Dockerfile位于相同目录中, 或者是一个URL.</td></tr><tr><td>COPY 源文件/目录 目标文件/目录</td><td>将本地主机上的源文件/目录复制到目标地点, 源文件/目录要与Dockerfile在相同的目录中.</td></tr><tr><td>VOLUME ["目录"]</td><td>在容器中创建一个挂载点</td></tr><tr><td>USER 用户名/UID</td><td>指定运行容器时的用户</td></tr><tr><td>WORKDIR 路径</td><td>为后续的RUN、 CMD、ENTRYPOINT指定工作目录</td></tr><tr><td>ONBUILD 命令</td><td>指定所生成的镜像作为一个基础镜像时所要运行的命令</td></tr></table><pre>使用Dockerfile生成镜像:docker build [选项] 路径  |__ -t 仓库名称[:标签] --指定镜像的标签信息</pre><h3 id="Dockerfile案例"><a href="#Dockerfile案例" class="headerlink" title="Dockerfile案例"></a>Dockerfile案例</h3><h4 id="vim-net-tools"><a href="#vim-net-tools" class="headerlink" title="vim+net-tools"></a>vim+net-tools</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7</span></span><br><span class="line"><span class="comment"># maintainer 镜像维护者的信息</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> yun&lt;email&gt; </span><br><span class="line"><span class="keyword">ENV</span> MYPATH /usr/local/</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim net-tools</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><h1 id="Docker的数据管理"><a href="#Docker的数据管理" class="headerlink" title="Docker的数据管理"></a>Docker的数据管理</h1><pre>管理Docker容器中数据主要有两种方式: 数据卷(Data Volumes)和数据卷容器(Data Volumes Containers)</pre><h2 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h2><p>1.创建数据卷</p><pre>docker run --name 自定义容器名 -v 目录 -v 目录2... -dit 仓库名称[:标签]</pre><p>2.挂载主机目录作为数据卷</p><pre>docker run --name 自定义容器名 -v 绝对路径的本地目录:目录1 -v 绝对路径的本地目录:目录2,... -dit 仓库名称[:标签]</pre><h2 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h2><pre>docker run --name 自定义容器名 --volumes-from 已挂载数据卷的容器 -it 仓库名称[:标签]</pre><h1 id="Docker网络通信"><a href="#Docker网络通信" class="headerlink" title="Docker网络通信"></a>Docker网络通信</h1><h2 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h2><pre>将宿主机的端口映射到容器中, 使得外部网络访问宿主机的端口便可访问容器的服务:docker run [选项] -d 仓库名称[:标签] |__ -P --实现随机映射 |__ -p 主机端口:容器端口 --指定要映射胡端口 </pre><h2 id="容器互联"><a href="#容器互联" class="headerlink" title="容器互联"></a>容器互联</h2><h3 id="创建源容器"><a href="#创建源容器" class="headerlink" title="创建源容器"></a>创建源容器</h3><pre>docker run --name 自定义容器名1 -dit 仓库名称[:标签]</pre><h3 id="创建接收容器"><a href="#创建接收容器" class="headerlink" title="创建接收容器"></a>创建接收容器</h3><pre>docker run --name 自定义容器名2 --link 连接容器名:连接别名 -dit 仓库名称[:标签]</pre><h3 id="测试容器互联"><a href="#测试容器互联" class="headerlink" title="测试容器互联"></a>测试容器互联</h3><pre>docker exec -it 自定义容器名2 /bin/bashping 连接别名</pre><div class="note info"><p>使用link建立的连接通道只是单向的.<br>即容器2可以ping通容器1, 而容器1无法ping通容器2.</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Docker镜像的创建方法&quot;&gt;&lt;a href=&quot;#Docker镜像的创建方法&quot; class=&quot;headerlink&quot; title=&quot;Docker镜像的创建方法&quot;&gt;&lt;/a&gt;Docker镜像的创建方法&lt;/h1&gt;&lt;h2 id=&quot;基于已有镜像创建&quot;&gt;&lt;a href=&quot;#基于已有镜像创建&quot; class=&quot;headerlink&quot; title=&quot;基于已有镜像创建&quot;&gt;&lt;/a&gt;基于已有镜像创建&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;把一个容器里面运行的程序以及该程序的运行环境打包起来生成新的镜像: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; [选项] 容器&lt;span class=&quot;keyword&quot;&gt;ID&lt;/span&gt;/名称 仓库名称[:标签]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |__ -m &lt;span class=&quot;comment&quot;&gt;--说明信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |__ -a &lt;span class=&quot;comment&quot;&gt;--作者信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |__ -p &lt;span class=&quot;comment&quot;&gt;--生成过程中停止容器的运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;pre&gt;
把一个容器里面运行的程序以及该程序的运行环境打包起来生成新的镜像: 
docker commit [选项] 容器ID/名称 仓库名称[:标签]
  |__ -m --说明信息
  |__ -a --作者信息
  |__ -p --生成过程中停止容器的运行
&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Docker" scheme="http://www.mengyun.club/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker架构、镜像及容器</title>
    <link href="http://www.mengyun.club/post/41804c37/"/>
    <id>http://www.mengyun.club/post/41804c37/</id>
    <published>2020-09-02T10:40:47.000Z</published>
    <updated>2020-09-18T09:23:29.890Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="Docker概述"><a href="#Docker概述" class="headerlink" title="Docker概述"></a>Docker概述</h1><p><a href="https://docs.docker.com/get-started/overview/" target="_blank" rel="noopener">Docker官方文档</a><br>Docker的Logo设计为蓝色鲸鱼, 拖着许多集装箱. 鲸鱼可以看作为宿主机, 而集装箱可以理解为相互隔离的容器, 每个集装箱中都包含自己的应用程序. 正如Docker的设计宗旨一样: Build, Ship and RunAny App, Anywhere, 即通过对应用组件的封装、发布、部署、运行等生命周期的管理, 达到应用组件级别的”一次封装, 到处运行”的目的. 这里的组件, 既可以是一个应用, 也可以是一套服务, 甚至是一个完整的操作系统.</p><p>Docker的容器技术可以在一台主机上轻松地为任何应用创建一个轻量级的、可移植的、自给自足的容器. 通过这种容器打包应用程序, 意味着简化了重新部署、调试这些琐碎的重复工作, 极大地提高了工作效率.</p><table><tr><td><img src="/post/41804c37/docker_log.jpg" title="Docker的log标志"></td></tr></table><table>Docker容器与传统虚拟化的比较<tr><td>特性</td><td>Docker容器</td><td>虚拟机</td></tr><tr><td>启动速度</td><td>秒级</td><td>分钟级</td></tr><tr><td>计算能力损耗</td><td>几乎无</td><td>损耗50%左右</td></tr><tr><td>性能</td><td>接近原生</td><td>弱于</td></tr><tr><td>系统支持量(单机)</td><td>上千个</td><td>几十个</td></tr><tr><td>隔离性</td><td>资源限制</td><td>完全隔离</td></tr></table><table><tr><td><img src="/post/41804c37/Docker与传统虚拟机架构.png" title="Docker与传统虚拟机架构"></td></tr></table><div class="note warning"><p>Docker的三大核心概念: 镜像、容器、仓库</p></div><a id="more"></a><h2 id="Docker的核心概念及安装"><a href="#Docker的核心概念及安装" class="headerlink" title="Docker的核心概念及安装"></a>Docker的核心概念及安装</h2><h3 id="镜像-Image"><a href="#镜像-Image" class="headerlink" title="镜像(Image)"></a>镜像(Image)</h3><p>Docker的镜像是创建容器的基础, 类似虚拟机的快照, 可以理解为是一个面向Docker容器引擎的只读模板.<br> Docker提供了简单的机制来创建和更新现有的镜像, 用户也可以从网上下载已经做好的应用镜像来直接使用.</p><h3 id="容器-Container"><a href="#容器-Container" class="headerlink" title="容器(Container)"></a>容器(Container)</h3><p>Docker的容器是从镜像创建的运行实例, 它可以被启动、停止和删除. 所创建的每一个容器都是相互隔离、互不可见的, 可以保证平台的安全性. 还可以把容器看作是一个简易版的Linux环境, Docker利用容器来运行和隔离应用.</p><h3 id="仓库-Repository"><a href="#仓库-Repository" class="headerlink" title="仓库(Repository)"></a>仓库(Repository)</h3><p>Docker仓库是用来集中保存镜像的地方, 当创建了自己的镜像之后, 可以使用push命令将它上传到公共仓库(Public)或者私有仓库(Private), 这样一来当下次要在另一台机器上使用这个镜像的时候, 只需要从仓库上pull下来就可以了.</p><p>仓库注册服务器(Registry)是存放仓库的地方, 其中包含了多个仓库, 每个仓库集中存放某一类镜像, 并且使用不同的标签(tag)来区分它们. 目前最大的公共仓库是Docker Hub, 其中存放了数量庞大的镜像供用户下载使用.</p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Docker官方文档</a></p><p>1.如果存在旧版本, 则卸载旧版本.</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker docker-<span class="keyword">client</span> docker-<span class="keyword">client</span>-latest docker-<span class="keyword">common</span> docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br></pre></td></tr></table></figure><p>2.使用yum进行安装</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum-config-manager --<span class="built_in">add</span>-repo http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo</span><br></pre></td></tr></table></figure><p>3.安装Docker引擎, 启动服务并设置为开机自启动.</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将软件包信息进行本地缓存, 用于提高搜索安装软件的速度.</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">makecache fast</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">install -y docker-ce</span></span><br><span class="line"></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start docker</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable docker</span></span><br></pre></td></tr></table></figure><p>4.检查是否安装成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> version</span><br><span class="line">docker <span class="literal">info</span></span><br></pre></td></tr></table></figure><p>5.配置Docker加速仓库</p><table><tr><td><img src="/post/41804c37/配置加速仓库1.png" title="配置Docker加速仓库"></td></tr><tr><td><img src="/post/41804c37/配置加速仓库2.png" title="配置Docker加速仓库"></td></tr><tr><td><img src="/post/41804c37/配置加速仓库3.png" title="配置Docker加速仓库"></td></tr></table><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="regexp">/etc/</span>docker</span><br><span class="line">tee <span class="regexp">/etc/</span>docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://gr0jon39.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>6.验证安装是否正确</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> hello-world</span></span><br></pre></td></tr></table></figure><pre>首先运行容器的时候, 在本地搜索可用的镜像, 如果找不到, 则再去远端官方仓库拉取(这里指定了为阿里云).Unable to find image 'hello-world:latest' locally<details blue><summary> <p>latest: Pulling from library/hello-world</p> </summary>              <div class="content">              <p>0e03bdcc26d7: Pull complete<br>Digest: sha256:7f0a9f93b4aa3022c3a4c147a449bf11e0941a1fd0bf4a8e6c9408b2600777c5<br>Status: Downloaded newer image for hello-world:latest</p><p>Hello from Docker!<br>This message shows that your installation appears to be working correctly.</p><p>To generate this message, Docker took the following steps:</p><ol><li>The Docker client contacted the Docker daemon.</li><li>The Docker daemon pulled the “hello-world” image from the Docker Hub.<br>(amd64)</li><li>The Docker daemon created a new container from that image which runs the<br>executable that produces the output you are currently reading.</li><li>The Docker daemon streamed that output to the Docker client, which sent it<br>to your terminal.</li></ol><p>To try something more ambitious, you can run an Ubuntu container with:<br> $ docker run -it ubuntu bash</p><p>Share images, automate workflows, and more with a free Docker ID:<br> <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p><p>For more examples and ideas, visit:<br> <a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">https://docs.docker.com/get-started/</a></p>              </div>            </details></pre><h2 id="Docker镜像操作"><a href="#Docker镜像操作" class="headerlink" title="Docker镜像操作"></a>Docker镜像操作</h2><p><a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener">Docker官方文档</a></p><h3 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h3><pre>搜索仓库中的共享镜像:docker search 关键字 [-s 星级值]NAME: 镜像名称DESCRIPTION: 描述STARS: 星级OFFICIAL: 是否官方创建AUTOMATED: 是否主动创建</pre><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><pre>从网络下载镜像到本地, 不指定标签时会默认从仓库中下载最新版本的镜像:docker pull 仓库名称[:标签]</pre><div class="note info"><p>镜像文件由若干层(Layer)组成, 称为AUFS(联合文件系统), 是实现增量保存与更新的基础, 下载过程中会输出镜像的各层信息.</p></div><h3 id="查看镜像信息"><a href="#查看镜像信息" class="headerlink" title="查看镜像信息"></a>查看镜像信息</h3><pre>查看下载到本地的所有镜像: docker images 仓库名称[:标签]获取镜像详细信息: docker inspect 镜像ID号为本地的镜像添加新的标签:docker tag 仓库名称[:标签] 新仓库名称[:新标签]REPOSITORY: 镜像归属的仓库TAG: 镜像的标签信息IMAGE ID: 镜像的唯一ID号CREATED: 镜像创建时间SIZE: 镜像大小REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</pre><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><pre>删除指定镜像: docker rmi 仓库名称[:标签]删除所有镜像: docker rmi $(docker images -q)</pre><h3 id="导出镜像"><a href="#导出镜像" class="headerlink" title="导出镜像"></a>导出镜像</h3><pre>docker save -o 存储文件名 存储的镜像</pre><h3 id="载入镜像"><a href="#载入镜像" class="headerlink" title="载入镜像"></a>载入镜像</h3><pre>docker load < 存出的文件docker --intput 存出的文件</pre><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><pre>在Docker Hub官方里创建账号后上传镜像到新建的公共仓库中:docker tag 仓库名称[:标签] 用户名/仓库名称:标签docker loginLogin with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.Username: <font color="red">dcyun</font>Password: <font color="red">输入密码</font>WARNING! Your password will be stored unencrypted in /root/.docker/config.json.Configure a credential helper to remove this warning. Seehttps://docs.docker.com/engine/reference/commandline/login/#credentials-store<font color="green">Login Succeeded</font></pre><pre>docker push 仓库名称 [:标签]<table><tr><td><img src="/post/41804c37/上传镜像.png"></td></tr></table></pre><h2 id="Docker容器操作"><a href="#Docker容器操作" class="headerlink" title="Docker容器操作"></a>Docker容器操作</h2><h3 id="容器创建与启动"><a href="#容器创建与启动" class="headerlink" title="容器创建与启动"></a>容器创建与启动</h3><pre>新键一个容器:docker create [选项] 仓库名称[:标签] 运行程序  |__ -i --让容器的输入保持打开  |__ -t --让Docer分配一个伪终端启动停止状态的容器:docker start 容器的ID/名称查看所有容器的运行状态:docker ps [选项]  |__ -a --列出系统中全部的容器(默认只列出当前运行的容器)  |__ -q --只列出ID号CONTAINER ID: 容器的ID号IMAGE: 加载的镜像COMMAND: 运行程序CREATED: 创建时间STATUS: 目前所处状态: <font color="green"> created(已创建)  restarting(重启中)  running(运行中)  removing(迁移中)  paused(暂停)  exited(停止)  dead(不可用)</font>PORTS: 端口映射NAMES: 镜像自动为容器创建的名字(唯一)CONTAINER ID        IMAGE                   COMMAND             CREATED             STATUS              PORTS               NAMES</pre><pre>创建并启动容器:docker run [选项] 镜像 运行程序 |__ -d --让docker容器以守护状态在后台运行</pre><div class="note info"><p>效果等同于先执行create再执行start命令</p></div><pre>Unable to find image 'centos:latest' locallylatest: Pulling from library/centos3c72a8ed6814: Pull complete Digest: sha256:76d24f3ba3317fa945743bb3746fbaf3a0b752f10b10376960de01da70685fbdStatus: Downloaded newer image for centos:latestWARNING: IPv4 forwarding is disabled. Networking will not work.<details blue><summary> <p>ls -l</p> </summary>              <div class="content">              <p>total 0<br>lrwxrwxrwx.   1 root root   7 May 11  2019 bin -&gt; usr/bin<br>drwxr-xr-x.   5 root root 340 Sep  4 02:27 dev<br>drwxr-xr-x.   1 root root  66 Sep  4 02:27 etc<br>drwxr-xr-x.   2 root root   6 May 11  2019 home<br>lrwxrwxrwx.   1 root root   7 May 11  2019 lib -&gt; usr/lib<br>lrwxrwxrwx.   1 root root   9 May 11  2019 lib64 -&gt; usr/lib64<br>drwx——.   2 root root   6 Aug  9 21:40 lost+found<br>drwxr-xr-x.   2 root root   6 May 11  2019 media<br>drwxr-xr-x.   2 root root   6 May 11  2019 mnt<br>drwxr-xr-x.   2 root root   6 May 11  2019 opt<br>dr-xr-xr-x. 149 root root   0 Sep  4 02:27 proc<br>dr-xr-x—.   2 root root 162 Aug  9 21:40 root<br>drwxr-xr-x.  11 root root 163 Aug  9 21:40 run<br>lrwxrwxrwx.   1 root root   8 May 11  2019 sbin -&gt; usr/sbin<br>drwxr-xr-x.   2 root root   6 May 11  2019 srv<br>dr-xr-xr-x.  13 root root   0 Sep  3 06:01 sys<br>drwxrwxrwt.   7 root root 145 Aug  9 21:40 tmp<br>drwxr-xr-x.  12 root root 144 Aug  9 21:40 usr<br>drwxr-xr-x.  20 root root 262 Aug  9 21:40 var</p>              </div>            </details></pre><h3 id="容器的运行与终止"><a href="#容器的运行与终止" class="headerlink" title="容器的运行与终止"></a>容器的运行与终止</h3><pre>终止运行的容器:docker stop 容器的ID/名称创建一个容器并运行, 如果本地镜像不存在会从仓库中拉取镜像后进行创建:docker run 仓库名称[:标签] </pre><h3 id="容器的进入"><a href="#容器的进入" class="headerlink" title="容器的进入"></a>容器的进入</h3><pre>进入运行着的容器:docker exec -it 容器的ID/名称 /bin/bash[root@容器ID号 /]exit</pre><h3 id="容器的导出与导入"><a href="#容器的导出与导入" class="headerlink" title="容器的导出与导入"></a>容器的导出与导入</h3><pre>将创建好的容器导出为文件:docker export 容器的ID/名称 > 文件名导入文件成为本地镜像:cat 文件名 | docker import - 生成的镜像名称:标签</pre><h3 id="容器的删除"><a href="#容器的删除" class="headerlink" title="容器的删除"></a>容器的删除</h3><pre> docker rm [选项] 容器的ID/名称 |__ -f --强制删除删除所有容器: docker rm $(docker ps -aq)</pre>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Docker概述&quot;&gt;&lt;a href=&quot;#Docker概述&quot; class=&quot;headerlink&quot; title=&quot;Docker概述&quot;&gt;&lt;/a&gt;Docker概述&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/get-started/overview/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker官方文档&lt;/a&gt;&lt;br&gt;Docker的Logo设计为蓝色鲸鱼, 拖着许多集装箱. 鲸鱼可以看作为宿主机, 而集装箱可以理解为相互隔离的容器, 每个集装箱中都包含自己的应用程序. 正如Docker的设计宗旨一样: Build, Ship and RunAny App, Anywhere, 即通过对应用组件的封装、发布、部署、运行等生命周期的管理, 达到应用组件级别的”一次封装, 到处运行”的目的. 这里的组件, 既可以是一个应用, 也可以是一套服务, 甚至是一个完整的操作系统.&lt;/p&gt;
&lt;p&gt;Docker的容器技术可以在一台主机上轻松地为任何应用创建一个轻量级的、可移植的、自给自足的容器. 通过这种容器打包应用程序, 意味着简化了重新部署、调试这些琐碎的重复工作, 极大地提高了工作效率.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/41804c37/docker_log.jpg&quot; title=&quot;Docker的log标志&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;table&gt;
Docker容器与传统虚拟化的比较
&lt;tr&gt;&lt;td&gt;特性&lt;/td&gt;&lt;td&gt;Docker容器&lt;/td&gt;&lt;td&gt;虚拟机&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;启动速度&lt;/td&gt;&lt;td&gt;秒级&lt;/td&gt;&lt;td&gt;分钟级&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;计算能力损耗&lt;/td&gt;&lt;td&gt;几乎无&lt;/td&gt;&lt;td&gt;损耗50%左右&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;性能&lt;/td&gt;&lt;td&gt;接近原生&lt;/td&gt;&lt;td&gt;弱于&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;系统支持量(单机)&lt;/td&gt;&lt;td&gt;上千个&lt;/td&gt;&lt;td&gt;几十个&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;隔离性&lt;/td&gt;&lt;td&gt;资源限制&lt;/td&gt;&lt;td&gt;完全隔离&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/41804c37/Docker与传统虚拟机架构.png&quot; title=&quot;Docker与传统虚拟机架构&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;Docker的三大核心概念: 镜像、容器、仓库&lt;/p&gt;
&lt;/div&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Docker" scheme="http://www.mengyun.club/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB复制集</title>
    <link href="http://www.mengyun.club/post/37db6981/"/>
    <id>http://www.mengyun.club/post/37db6981/</id>
    <published>2020-08-27T11:27:15.000Z</published>
    <updated>2020-09-18T01:28:36.915Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="MongoDB复制集概述"><a href="#MongoDB复制集概述" class="headerlink" title="MongoDB复制集概述"></a>MongoDB复制集概述</h1><h2 id="什么是复制集"><a href="#什么是复制集" class="headerlink" title="什么是复制集"></a>什么是复制集</h2><p>复制集(Replica Sets)是额外的数据副本, 是跨多个服务器同步数据的过程, 复制集提供了冗余并增加了数据可用性, 通过复制集可以对硬件故障和中断的服务进行恢复.</p><p>复制集的优势如下:<br>1.让数据更安全<br>2.高数据可用性(24*7)<br>3.灾难恢复<br>4.无停机维护(如备份、索引重建、故障转移)<br>5.读缩放(额外的副本读取)<br>6.副本集对应用程序是透明的</p><h2 id="复制集工作原理"><a href="#复制集工作原理" class="headerlink" title="复制集工作原理"></a>复制集工作原理</h2><p>MongoDB的复制集至少需要两个节点. 其中一个是主节点(Primary), 负责处理客户端的请求, 其余的都是从节点(Secondary), 负责复制主节点上的数据.</p><p>复制集特点:<br>1.N个节点的群集<br>2.任何节点可作为主节点<br>3.所有写入操作都在主节点上<br>4.自动故障转移<br>5.自动恢复</p><table>客户端在主节点写入数据, 在从节点读取数据, 主节点与从节点进行数据交互保障数据的一致性. 如果其中一个节点出现故障, 其他节点马上会将业务接过来而无需停机操作.<tr><td><img src="/post/37db6981/MongoDB复制结构图.png" title="复制集工作原理"></td></tr></table><a id="more"></a><h1 id="复制集的选举原理"><a href="#复制集的选举原理" class="headerlink" title="复制集的选举原理"></a>复制集的选举原理</h1><p>MongoDB复制集的节点是通过选举产生主节点</p><h2 id="复制原理"><a href="#复制原理" class="headerlink" title="复制原理"></a>复制原理</h2><p>复制是基于操作日志oplog, 相当于MySQL中的二进制日志, 只记录发生改变的记录. 复制是将主节点的oplog日志同步并应用到其他从节点的过程.</p><h2 id="选举原理"><a href="#选举原理" class="headerlink" title="选举原理"></a>选举原理</h2><p>节点类型分为标准(host)节点、被动(passive)节点和仲裁(arbiter)节点.</p><p>(1)只有标准节点可能被选举为活跃(primary)节点, 有选举权. 被动节点有完整副本, 不可能成为活跃节点, 有选举权. 仲裁节点不复制数据, 不可能成为活跃跃点只有选举权.<br>(2)标准节点与被动节点的区别: priority值高者是标准节点, 低者则为被动节点.<br>(3)选举规则是票数高者获胜, priority是优先权为0~1000的值, 相当于额外增加0~1000的票数.<br>选举结果:票数高者获胜; 若票数相同, 数据新者获胜.</p><table><tr><td><img src="/post/37db6981/MongoDB复制集节点间选举.png" title="复制集选举原理"></td></tr></table><h1 id="MongoDB复制集部属"><a href="#MongoDB复制集部属" class="headerlink" title="MongoDB复制集部属"></a>MongoDB复制集部属</h1><h2 id="配置复制集"><a href="#配置复制集" class="headerlink" title="配置复制集"></a>配置复制集</h2><p>安装MongoDB后配置多实例</p><p>(1).将mongoDB原本的数据清空</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mongo</span>/*</span></span><br></pre></td></tr></table></figure><p>(2).创建数据文件和日志文件存储路径</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mongo</span>&#123;2,3,4&#125;</span></span><br></pre></td></tr></table></figure><p>注: 日志文件可以自动生成</p><p>(4).编译4个MongoDB实例的配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -------27017-------</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/mongod.conf</span> <span class="string">&lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/var/lib/mongo</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/var/run/mongodb/mongod.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">test_rs</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------27018-------</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/mongod2.conf</span> <span class="string">&lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod2.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/var/lib/mongo2</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/var/run/mongodb/mongod.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27018</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">test_rs</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------27019-------</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/mongod3.conf</span> <span class="string">&lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod3.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/var/lib/mongo3</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/var/run/mongodb/mongod.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27019</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">test_rs</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------27020-------</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/mongod4.conf</span> <span class="string">&lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod4.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/var/lib/mongo4</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/var/run/mongodb/mongod.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27020</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">test_rs</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>注: bindIp更改为本机上的网卡IP地址</p><p>(5).启动mongoDB服务</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod2.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod3.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod4.conf</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-lnt</span></span><br></pre></td></tr></table></figure><p>(6).初始化配置复制集</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mongo --host <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">27017</span></span><br><span class="line">show dbs</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看复制集</span></span><br><span class="line">rs.status()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化配置并设置优先级</span></span><br><span class="line"><span class="built_in">config</span>=&#123;<span class="string">"_id"</span>:<span class="string">"test_rs"</span>,<span class="string">"members"</span>:[&#123;<span class="string">"_id"</span>:<span class="number">0</span>,<span class="string">"host"</span>:<span class="string">"192.168.100.10:27017"</span>,<span class="string">"priority"</span>:<span class="number">100</span>&#125;, &#123;<span class="string">"_id"</span>:<span class="number">1</span>,<span class="string">"host"</span>:<span class="string">"192.168.100.10:27018"</span>,<span class="string">"priority"</span>:<span class="number">100</span>&#125;, &#123;<span class="string">"_id"</span>:<span class="number">2</span>,<span class="string">"host"</span>:<span class="string">"192.168.100.10:27019"</span>,<span class="string">"priority"</span>:<span class="number">0</span>&#125;, &#123;<span class="string">"_id"</span>:<span class="number">3</span>,<span class="string">"host"</span>:<span class="string">"192.168.100.10:27020"</span>,<span class="string">"arbiterOnly"</span>:<span class="literal">true</span>&#125;]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化复制集</span></span><br><span class="line">rs.initiate(<span class="built_in">config</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 几秒后查看复制集</span></span><br><span class="line">rs.status()</span><br></pre></td></tr></table></figure><pre>当前未配置复制集时的错误提示:2020-08-28T15:29:12.858+0800 E QUERY    [thread1] Error: listDatabases failed:{    "ok" : 0,    <font color="red">"errmsg" : "not master and slaveOk=false"</font>,    "code" : 13435,    "codeName" : "NotMasterNoSlaveOk"} :_getErrorWithCode@src/mongo/shell/utils.js:25:13Mongo.prototype.getDBs@src/mongo/shell/mongo.js:62:1shellHelper.show@src/mongo/shell/utils.js:814:19shellHelper@src/mongo/shell/utils.js:704:15@(shellhelp2):1:1复制集状态:{    "info" : "run rs.initiate(...) if not yet done for the set",    "ok" : 0,    <font color="red">"errmsg" : "no replset config has been received"</font>,    "code" : 94,    "codeName" : "NotYetInitialized"}<details blue><summary> <p>初始化后的复制集状态</p> </summary>              <div class="content">              <p>{<br>    “set” : “test_rs”,<br>    “date” : ISODate(“2020-08-28T07:44:08.660Z”),<br>    “myState” : 1,<br>    “term” : NumberLong(1),<br>    “syncingTo” : “”,<br>    “syncSourceHost” : “”,<br>    “syncSourceId” : -1,<br>    “heartbeatIntervalMillis” : NumberLong(2000),<br>    “optimes” : {<br>        “lastCommittedOpTime” : {<br>            “ts” : Timestamp(1598600645, 1),<br>            “t” : NumberLong(1)<br>        },<br>        “appliedOpTime” : {<br>            “ts” : Timestamp(1598600645, 1),<br>            “t” : NumberLong(1)<br>        },<br>        “durableOpTime” : {<br>            “ts” : Timestamp(1598600645, 1),<br>            “t” : NumberLong(1)<br>        }<br>    },<br>    “members” : [<br>        {<br>            <font color="red">“_id” : 0,<br>            “name” : “192.168.100.10:27017”,<br>            “health” : 1,<br>            “state” : 1,<br>            “stateStr” : “PRIMARY”,</font> <font color="green"># 主节点</font><br>            “uptime” : 1047,<br>            “optime” : {<br>                “ts” : Timestamp(1598600645, 1),<br>                “t” : NumberLong(1)<br>            },<br>            “optimeDate” : ISODate(“2020-08-28T07:44:05Z”),<br>            “syncingTo” : “”,<br>            “syncSourceHost” : “”,<br>            “syncSourceId” : -1,<br>            “infoMessage” : “”,<br>            “electionTime” : Timestamp(1598600384, 1),<br>            “electionDate” : ISODate(“2020-08-28T07:39:44Z”),<br>            “configVersion” : 1,<br>            “self” : true,<br>            “lastHeartbeatMessage” : “”<br>        },<br>        {<br>            <font color="red">“_id” : 1,<br>            “name” : “192.168.100.10:27018”,<br>            “health” : 1,<br>            “state” : 2,<br>            “stateStr” : “SECONDARY”,</font> <font color="green"># 从节点</font><br>            “uptime” : 275,<br>            “optime” : {<br>                “ts” : Timestamp(1598600645, 1),<br>                “t” : NumberLong(1)<br>            },<br>            “optimeDurable” : {<br>                “ts” : Timestamp(1598600645, 1),<br>                “t” : NumberLong(1)<br>            },<br>            “optimeDate” : ISODate(“2020-08-28T07:44:05Z”),<br>            “optimeDurableDate” : ISODate(“2020-08-28T07:44:05Z”),<br>            “lastHeartbeat” : ISODate(“2020-08-28T07:44:08.245Z”),<br>            “lastHeartbeatRecv” : ISODate(“2020-08-28T07:44:08.471Z”),<br>            “pingMs” : NumberLong(0),<br>            “lastHeartbeatMessage” : “”,<br>            “syncingTo” : “192.168.100.10:27019”,<br>            “syncSourceHost” : “192.168.100.10:27019”,<br>            “syncSourceId” : 2,<br>            “infoMessage” : “”,<br>            “configVersion” : 1<br>        },<br>        {<br>            <font color="red">“_id” : 2,<br>            “name” : “192.168.100.10:27019”,<br>            “health” : 1,<br>            “state” : 2,<br>            “stateStr” : “SECONDARY”,</font> <font color="green"># 从节点</font><br>            “uptime” : 275,<br>            “optime” : {<br>                “ts” : Timestamp(1598600645, 1),<br>                “t” : NumberLong(1)<br>            },<br>            “optimeDurable” : {<br>                “ts” : Timestamp(1598600645, 1),<br>                “t” : NumberLong(1)<br>            },<br>            “optimeDate” : ISODate(“2020-08-28T07:44:05Z”),<br>            “optimeDurableDate” : ISODate(“2020-08-28T07:44:05Z”),<br>            “lastHeartbeat” : ISODate(“2020-08-28T07:44:08.245Z”),<br>            “lastHeartbeatRecv” : ISODate(“2020-08-28T07:44:08.450Z”),<br>            “pingMs” : NumberLong(0),<br>            “lastHeartbeatMessage” : “”,<br>            “syncingTo” : “192.168.100.10:27017”,<br>            “syncSourceHost” : “192.168.100.10:27017”,<br>            “syncSourceId” : 0,<br>            “infoMessage” : “”,<br>            “configVersion” : 1<br>        },<br>        {<br>            <font color="red">“_id” : 3,<br>            “name” : “192.168.100.10:27020”,<br>            “health” : 1,<br>            “state” : 7,<br>            “stateStr” : “ARBITER”,</font> <font color="green"># 仲裁节点</font><br>            “uptime” : 275,<br>            “lastHeartbeat” : ISODate(“2020-08-28T07:44:08.245Z”),<br>            “lastHeartbeatRecv” : ISODate(“2020-08-28T07:44:05.120Z”),<br>            “pingMs” : NumberLong(0),<br>            “lastHeartbeatMessage” : “”,<br>            “syncingTo” : “”,<br>            “syncSourceHost” : “”,<br>            “syncSourceId” : -1,<br>            “infoMessage” : “”,<br>            “configVersion” : 1<br>        }<br>    ],<br>    “ok” : 1<br>}</p>              </div>            </details></pre><h2 id="增加和删除节点"><a href="#增加和删除节点" class="headerlink" title="增加和删除节点"></a>增加和删除节点</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.add</span>(<span class="string">"ip地址:端口号"</span>)</span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.status</span>()</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.remove</span>(<span class="string">"ip地址:端口号"</span>)</span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.status</span>()</span><br></pre></td></tr></table></figure><h1 id="MongoDB复制集切换"><a href="#MongoDB复制集切换" class="headerlink" title="MongoDB复制集切换"></a>MongoDB复制集切换</h1><h2 id="模拟故障自动转移"><a href="#模拟故障自动转移" class="headerlink" title="模拟故障自动转移"></a>模拟故障自动转移</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭第一个实例</span></span><br><span class="line">mongod -f <span class="string">/etc/mongod.conf</span> <span class="params">--shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登陆主节点</span></span><br><span class="line">mongo <span class="params">--host</span> 192.168.100.10<span class="function">:27018</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> 查看复制集状态</span><br><span class="line">rs.status<span class="params">()</span></span><br></pre></td></tr></table></figure><pre><details blue><summary> <p>切换后的复制集状态</p> </summary>              <div class="content">              <p>{<br>    “set” : “test_rs”,<br>    “date” : ISODate(“2020-08-28T08:32:33.539Z”),<br>    “myState” : 1,<br>    “term” : NumberLong(2),<br>    “syncingTo” : “”,<br>    “syncSourceHost” : “”,<br>    “syncSourceId” : -1,<br>    “heartbeatIntervalMillis” : NumberLong(2000),<br>    “optimes” : {<br>        “lastCommittedOpTime” : {<br>            “ts” : Timestamp(1598603535, 1),<br>            “t” : NumberLong(1)<br>        },<br>        “appliedOpTime” : {<br>            “ts” : Timestamp(1598603548, 1),<br>            “t” : NumberLong(2)<br>        },<br>        “durableOpTime” : {<br>            “ts” : Timestamp(1598603548, 1),<br>            “t” : NumberLong(2)<br>        }<br>    },<br>    “members” : [<br>        {<br>            “_id” : 0,<br>            “name” : “192.168.100.10:27017”,<br>            <font color="red">“health” : 0,<br>            “state” : 8,<br>            “stateStr” : “(not reachable/healthy)”,</font><br>            “uptime” : 0,<br>            “optime” : {<br>                “ts” : Timestamp(0, 0),<br>                “t” : NumberLong(-1)<br>            },<br>            “optimeDurable” : {<br>                “ts” : Timestamp(0, 0),<br>                “t” : NumberLong(-1)<br>            },<br>            “optimeDate” : ISODate(“1970-01-01T00:00:00Z”),<br>            “optimeDurableDate” : ISODate(“1970-01-01T00:00:00Z”),<br>            “lastHeartbeat” : ISODate(“2020-08-28T08:32:32.982Z”),<br>            “lastHeartbeatRecv” : ISODate(“2020-08-28T08:32:14.597Z”),<br>            “pingMs” : NumberLong(0),<br>            “lastHeartbeatMessage” : “Connection refused”,<br>            “syncingTo” : “”,<br>            “syncSourceHost” : “”,<br>            “syncSourceId” : -1,<br>            “infoMessage” : “”,<br>            “configVersion” : -1<br>        },<br>        {<br>            “_id” : 1,<br>            “name” : “192.168.100.10:27018”,<br>            <font color="green">“health” : 1,<br>            “state” : 1,<br>            “stateStr” : “PRIMARY”,</font><br>            “uptime” : 3952,<br>            “optime” : {<br>                “ts” : Timestamp(1598603548, 1),<br>                “t” : NumberLong(2)<br>            },<br>            “optimeDate” : ISODate(“2020-08-28T08:32:28Z”),<br>            “syncingTo” : “”,<br>            “syncSourceHost” : “”,<br>            “syncSourceId” : -1,<br>            “infoMessage” : “could not find member to sync from”,<br>            “electionTime” : Timestamp(1598603546, 1),<br>            “electionDate” : ISODate(“2020-08-28T08:32:26Z”),<br>            “configVersion” : 1,<br>            “self” : true,<br>            “lastHeartbeatMessage” : “”<br>        },<br>        ……<br>    ],<br>    “ok” : 1<br>}</p>              </div>            </details></pre><h2 id="手动进行主从切换"><a href="#手动进行主从切换" class="headerlink" title="手动进行主从切换"></a>手动进行主从切换</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 开启第一个实例</span><br><span class="line">mongod -f /etc/mongod.conf</span><br><span class="line"></span><br><span class="line"># 登陆主节点</span><br><span class="line">mongo --host <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">27018</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主节点配置交出主节点位置, 维持从节点不少于60秒, 同时等待30秒以使主节点和从节点日志同步.</span></span><br><span class="line">rs.stepDown(<span class="number">60</span>, <span class="number">30</span>)</span><br><span class="line">rs.status()</span><br></pre></td></tr></table></figure><pre><details blue><summary> <p>切换前的复制集状态</p> </summary>              <div class="content">              <p>{<br>    “_id” : 0,<br>    “name” : “192.168.100.10:27017”,<br>    <font color="green">“health” : 1,<br>    “state” : 2,<br>    “stateStr” : “SECONDARY”,</font><br>    “uptime” : 663,<br>    “optime” : {<br>        “ts” : Timestamp(1598865163, 1),<br>        “t” : NumberLong(2)<br>    },<br>    “optimeDurable” : {<br>        “ts” : Timestamp(1598865163, 1),<br>        “t” : NumberLong(2)<br>    },<br>    “optimeDate” : ISODate(“2020-08-31T09:12:43Z”),<br>    “optimeDurableDate” : ISODate(“2020-08-31T09:12:43Z”),<br>    “lastHeartbeat” : ISODate(“2020-08-31T09:12:45.437Z”),<br>    “lastHeartbeatRecv” : ISODate(“2020-08-31T09:12:47.729Z”),<br>    “pingMs” : NumberLong(0),<br>    “lastHeartbeatMessage” : “”,<br>    “syncingTo” : “192.168.100.10:27019”,<br>    “syncSourceHost” : “192.168.100.10:27019”,<br>    “syncSourceId” : 2,<br>    “infoMessage” : “”,<br>    “configVersion” : 1<br>},<br>{<br>    “_id” : 1,<br>    “name” : “192.168.100.10:27018”,<br>    <font color="green">“health” : 1,<br>    “state” : 2,<br>    “stateStr” : “SECONDARY”,</font><br>    “uptime” : 1318,<br>    “optime” : {<br>        “ts” : Timestamp(1598865163, 1),<br>        “t” : NumberLong(2)<br>    },<br>    “optimeDate” : ISODate(“2020-08-31T09:12:43Z”),<br>    “syncingTo” : “”,<br>    “syncSourceHost” : “”,<br>    “syncSourceId” : -1,<br>    “infoMessage” : “could not find member to sync from”,<br>    “configVersion” : 1,<br>    “self” : true,<br>    “lastHeartbeatMessage” : “”<br>},<br>……</p>              </div>            </details><details blue><summary> <p>切换后的复制集状态</p> </summary>              <div class="content">              <p>{<br>    “_id” : 0,<br>    “name” : “192.168.100.10:27017”,<br>    <font color="green">“health” : 1,<br>    “state” : 1,<br>    “stateStr” : “PRIMARY”,</font><br>    “uptime” : 710,<br>    “optime” : {<br>        “ts” : Timestamp(1598865205, 1),<br>        “t” : NumberLong(3)<br>    },<br>    “optimeDurable” : {<br>        “ts” : Timestamp(1598865205, 1),<br>        “t” : NumberLong(3)<br>    },<br>    “optimeDate” : ISODate(“2020-08-31T09:13:25Z”),<br>    “optimeDurableDate” : ISODate(“2020-08-31T09:13:25Z”),<br>    “lastHeartbeat” : ISODate(“2020-08-31T09:13:34.476Z”),<br>    “lastHeartbeatRecv” : ISODate(“2020-08-31T09:13:34.450Z”),<br>    “pingMs” : NumberLong(0),<br>    “lastHeartbeatMessage” : “”,<br>    “syncingTo” : “”,<br>    “syncSourceHost” : “”,<br>    “syncSourceId” : -1,<br>    “infoMessage” : “”,<br>    “electionTime” : Timestamp(1598865174, 1),<br>    “electionDate” : ISODate(“2020-08-31T09:12:54Z”),<br>    “configVersion” : 1<br>},<br>{<br>    “_id” : 1,<br>    “name” : “192.168.100.10:27018”,<br>    <font color="green">“health” : 1,<br>    “state” : 2,<br>    “stateStr” : “SECONDARY”,</font><br>    “uptime” : 1366,<br>    “optime” : {<br>        “ts” : Timestamp(1598865205, 1),<br>        “t” : NumberLong(3)<br>    },<br>    “optimeDate” : ISODate(“2020-08-31T09:13:25Z”),<br>    “syncingTo” : “192.168.100.10:27017”,<br>    “syncSourceHost” : “192.168.100.10:27017”,<br>    “syncSourceId” : 0,<br>    “infoMessage” : “”,<br>    “configVersion” : 1,<br>    “self” : true,<br>    “lastHeartbeatMessage” : “”<br>},<br>……</p>              </div>            </details></pre><h1 id="验证复制集的选举原理"><a href="#验证复制集的选举原理" class="headerlink" title="验证复制集的选举原理"></a>验证复制集的选举原理</h1><p>1.查看oplog日志</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 登录主节点</span><br><span class="line">mongo --host <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">27017</span></span><br><span class="line"></span><br><span class="line">use local</span><br><span class="line"><span class="comment">// oplog除查询操作不会记录外, 会对数据有修改的所有操作进行记录.</span></span><br><span class="line">db.oplog.rs.find()</span><br></pre></td></tr></table></figure><p>2.配置复制集的优先级</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看所有节点的状态</span></span><br><span class="line">rs.isMaster<span class="comment">()</span></span><br></pre></td></tr></table></figure><pre>config={"_id":"test_rs","members":[    {"_id":0,"host":"192.168.100.10:27017",<font color="green">"priority":100</font>},     {"_id":1,"host":"192.168.100.10:27018",<font color="green">"priority":100</font>},     {"_id":2,"host":"192.168.100.10:27019",<font color="green">"priority":0}</font>,     {"_id":3,"host":"192.168.100.10:27020",<font color="green">"arbiterOnly":true</font>}]}<details blue><summary> <p>所有节点的状态</p> </summary>              <div class="content">              <p>{<br>    “hosts” : [<br>        “192.168.100.10:27017”,<br>        “192.168.100.10:27018”<br>    ],<br>    “passives” : [<br>        “192.168.100.10:27019”<br>    ],<br>    “arbiters” : [<br>        “192.168.100.10:27020”<br>    ],<br>    “setName” : “test_rs”,<br>    “setVersion” : 1,<br>    “ismaster” : true,<br>    “secondary” : false,<br>    “primary” : “192.168.100.10:27017”,<br>    “me” : “192.168.100.10:27017”,<br>    “electionId” : ObjectId(“7fffffff0000000000000003”),<br>    “lastWrite” : {<br>        “opTime” : {<br>            “ts” : Timestamp(1598877986, 1),<br>            “t” : NumberLong(3)<br>        },<br>        “lastWriteDate” : ISODate(“2020-08-31T12:46:26Z”)<br>    },<br>    “maxBsonObjectSize” : 16777216,<br>    “maxMessageSizeBytes” : 48000000,<br>    “maxWriteBatchSize” : 1000,<br>    “localTime” : ISODate(“2020-08-31T12:46:26.933Z”),<br>    “maxWireVersion” : 5,<br>    “minWireVersion” : 0,<br>    “readOnly” : false,<br>    “ok” : 1<br>}</p>              </div>            </details></pre><h1 id="MongoDB复制集管理"><a href="#MongoDB复制集管理" class="headerlink" title="MongoDB复制集管理"></a>MongoDB复制集管理</h1><h2 id="配置允许在从节点读取数据"><a href="#配置允许在从节点读取数据" class="headerlink" title="配置允许在从节点读取数据"></a>配置允许在从节点读取数据</h2><p>默认MongoDB复制集的从节点不能读取数据, 可以使用rs.slaveOk()命令允许能够在从节点读取数据. 连接到复制集的其中一个从节点, 配置其允许读取数据.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 登录从节点</span><br><span class="line">mongo --host <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">27019</span></span><br><span class="line">show dbs</span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许在从节点读取数据</span></span><br><span class="line">rs.slaveOk() </span><br><span class="line">show dbs</span><br></pre></td></tr></table></figure><pre># 允许在从节点读取数据前2020-08-31T21:41:36.272+0800 E QUERY    [thread1] Error: listDatabases failed:{    "ok" : 0,    "errmsg" : "not master and slaveOk=false",    "code" : 13435,    "codeName" : "NotMasterNoSlaveOk"} :_getErrorWithCode@src/mongo/shell/utils.js:25:13Mongo.prototype.getDBs@src/mongo/shell/mongo.js:62:1shellHelper.show@src/mongo/shell/utils.js:814:19shellHelper@src/mongo/shell/utils.js:704:15@(shellhelp2):1:1test_rs:SECONDARY> quit;function quit() {    [native code]}# 允许在从节点读取数据后admin   0.000GBlocal   0.000GBmytest  0.000GB</pre><h2 id="查看复制状态信息"><a href="#查看复制状态信息" class="headerlink" title="查看复制状态信息"></a>查看复制状态信息</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.printReplicationInfo</span>()</span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.printSlaveReplicationInfo</span>()</span><br></pre></td></tr></table></figure><pre><details blue><summary> <p>rs.printReplicationInfo()</p> </summary>              <div class="content">              <p>configured oplog size:   2048MB <font color="green"># 配置的oplog文件大小</font><br>log length start to end: 18118secs (5.03hrs) <font color="green"># oplog日志的启用时间段</font><br>oplog first event time:  Mon Aug 31 2020 16:50:59 GMT+0800 (CST) <font color="green"># 第一个事务日志的产生时间</font><br>oplog last event time:   Mon Aug 31 2020 21:52:57 GMT+0800 (CST) <font color="green"># 最后一个事务日志的产生时间</font><br>now:                     Mon Aug 31 2020 21:53:03 GMT+0800 (CST) <font color="green"># 现在的时间</font></p>              </div>            </details><details blue><summary> <p>rs.printSlaveReplicationInfo()</p> </summary>              <div class="content">              <p>source: 192.168.100.10:27018 <font color="green"># 从库的IP及端口</font><br>    syncedTo: Mon Aug 31 2020 22:01:07 GMT+0800 (CST) <font color="green"># 目前的同步情况, 以及最后一次同步时间等信息.</font><br>    0 secs (0 hrs) behind the primary<br>source: 192.168.100.10:27019<br>    syncedTo: Mon Aug 31 2020 22:01:07 GMT+0800 (CST)<br>    0 secs (0 hrs) behind the primary </p>              </div>            </details></pre><h2 id="更改oplog大小"><a href="#更改oplog大小" class="headerlink" title="更改oplog大小"></a>更改oplog大小</h2><p>oplog即operations log的简写, 存储在local数据库中. oplog中新操作会自动替换旧的操作, 以保证oplog不会超过预设的大小. 默认情况下, oplog大小会占用64位的实例5%的可用磁盘空间.</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">local</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改oplog的大小</span></span><br><span class="line"><span class="keyword">db</span>.runCommand(&#123;<span class="string">"convertToCapped"</span>:<span class="string">"oplog.rs"</span>, <span class="string">"size"</span>:102400000&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">db</span>.oplog.rs.stats()</span><br><span class="line">rs.printReplicationInfo()</span><br></pre></td></tr></table></figure><pre>{    "ns" : "local.oplog.rs",    "size" : 185610,    "count" : 1930,    "avgObjSize" : 96,    "storageSize" : 4096,    "capped" : true,    "max" : -1,    "maxSize" : 102400000,    "sleepCount" : 0,    "sleepMS" : 0,    "wiredTiger" : {        "metadata" : {            "formatVersion" : 1        },        ......    }}configured oplog size:   97.65625MBlog length start to end: 19178secs (5.33hrs)oplog first event time:  Mon Aug 31 2020 16:50:59 GMT+0800 (CST)oplog last event time:   Mon Aug 31 2020 22:10:37 GMT+0800 (CST)now:                     Mon Aug 31 2020 22:10:41 GMT+0800 (CST)</pre><h2 id="部署认证的复制"><a href="#部署认证的复制" class="headerlink" title="部署认证的复制"></a>部署认证的复制</h2><p>1.为每个实例生成密钥文件, 并修改权限.</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">touch /var/<span class="class"><span class="keyword">lib</span>/<span class="title">testKeyFile</span>.<span class="title">file</span></span></span><br><span class="line"></span><br><span class="line">openssl rand -base64 <span class="number">756</span>  &gt; <span class="regexp">/var/lib</span><span class="regexp">/testKeyFile.file</span></span><br><span class="line"><span class="regexp">chmod 400 /var</span><span class="regexp">/lib/test</span>KeyFile.file</span><br><span class="line"></span><br><span class="line">cp /var/<span class="class"><span class="keyword">lib</span>/<span class="title">testKeyFile</span>.<span class="title">file</span> /<span class="title">var</span>/<span class="title">lib</span>/<span class="title">testKeyFile2</span>.<span class="title">file</span> </span></span><br><span class="line">cp /var/<span class="class"><span class="keyword">lib</span>/<span class="title">testKeyFile</span>.<span class="title">file</span> /<span class="title">var</span>/<span class="title">lib</span>/<span class="title">testKeyFile3</span>.<span class="title">file</span> </span></span><br><span class="line">cp /var/<span class="class"><span class="keyword">lib</span>/<span class="title">testKeyFile</span>.<span class="title">file</span> /<span class="title">var</span>/<span class="title">lib</span>/<span class="title">testKeyFile4</span>.<span class="title">file</span></span></span><br></pre></td></tr></table></figure><p>2.登录主节点添加权限用户</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongo --host <span class="number">192.168</span>.<span class="number">100.10</span>:<span class="number">27017</span></span><br><span class="line">use admin</span><br><span class="line">db.createUser(&#123;user:<span class="string">"root"</span>,pwd:<span class="string">"123zxc"</span>,roles:[<span class="string">"root"</span>]&#125;)</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><p>3.关闭各实例服务, 为各实例配置文件添加上用户认证和密钥文件位置后并重新启动.</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod.conf --shutdown</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod1.conf --shutdown</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod2.conf --shutdown</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod3.conf --shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt;&gt; /etc/mongod.conf &lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">security</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">keyFile</span>: <span class="string">/var/lib/testKeyFile.file</span></span><br><span class="line">  <span class="attr">authorization</span>: <span class="string">enabled</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt;&gt; /etc/mongod2.conf &lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">security</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">keyFile</span>: <span class="string">/var/lib/testKeyFile2.file</span></span><br><span class="line">  <span class="attr">authorization</span>: <span class="string">enabled</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt;&gt; /etc/mongod3.conf &lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">security</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">keyFile</span>: <span class="string">/var/lib/testKeyFile3.file</span></span><br><span class="line">  <span class="attr">authorization</span>: <span class="string">enabled</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt;&gt; /etc/mongod4.conf &lt;&lt;-EOF</span></span><br><span class="line"><span class="attr">security</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">keyFile</span>: <span class="string">/var/lib/testKeyFile4.file</span></span><br><span class="line">  <span class="attr">authorization</span>: <span class="string">enabled</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod1.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod2.conf</span></span><br><span class="line"><span class="attr">mongod</span> <span class="string">-f /etc/mongod3.conf</span></span><br></pre></td></tr></table></figure><p>4.登录主节点服务器, 验证群集.</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mongo</span> <span class="selector-tag">--host</span> <span class="selector-tag">192</span><span class="selector-class">.168</span><span class="selector-class">.100</span><span class="selector-class">.10</span><span class="selector-pseudo">:27017</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 未认证前</span></span><br><span class="line"><span class="selector-tag">show</span> <span class="selector-tag">dbs</span></span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.status</span>()</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">use</span> <span class="selector-tag">admin</span></span><br><span class="line"><span class="comment">// 认证后</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.auth</span>(<span class="string">"root"</span>, <span class="string">"123zxc"</span>)</span><br><span class="line"><span class="selector-tag">show</span> <span class="selector-tag">dbs</span></span><br><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.status</span>()</span><br></pre></td></tr></table></figure><pre><details blue><summary> <p>认证前</p> </summary>              <div class="content">              <p>2020-09-01T09:34:48.476+0800 E QUERY    [thread1] Error: listDatabases failed:{<br>    “ok” : 0,<br>    <font color="red">“errmsg” : “not authorized on admin to execute command { listDatabases: 1.0 }”,</font><br>    “code” : 13,<br>    “codeName” : “Unauthorized”<br>} :</p><p>{<br>    “ok” : 0,<br>    <font color="red">“errmsg” : “not authorized on admin to execute command { replSetGetStatus: 1.0 }”,</font><br>    “code” : 13,<br>    “codeName” : “Unauthorized”<br>}</p>              </div>            </details><details blue><summary> <p>认证后</p> </summary>              <div class="content">              <p>admin   0.000GB<br>local   0.000GB<br>mytest  0.000GB</p><p>{<br>    “set” : “test_rs”,<br>    “date” : ISODate(“2020-09-01T01:34:49.819Z”),<br>    “myState” : 1,<br>    “term” : NumberLong(5),<br>    “syncingTo” : “”,<br>    “syncSourceHost” : “”,<br>    “syncSourceId” : -1,<br>    “heartbeatIntervalMillis” : NumberLong(2000),<br>    “optimes” : {<br>        “lastCommittedOpTime” : {<br>            “ts” : Timestamp(1598924082, 1),<br>            “t” : NumberLong(5)<br>        },<br>        “appliedOpTime” : {<br>            “ts” : Timestamp(1598924082, 1),<br>            “t” : NumberLong(5)<br>        },<br>        “durableOpTime” : {<br>            “ts” : Timestamp(1598924082, 1),<br>            “t” : NumberLong(5)<br>        }<br>    },<br>    ……<br>}</p>              </div>            </details></pre><p>5.登录从节点服务器, 验证群集.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongo --host <span class="number">192.168</span>.<span class="number">100.10</span>:<span class="number">27018</span></span><br><span class="line">rs.status()</span><br><span class="line"></span><br><span class="line">use admin</span><br><span class="line">db.auth(<span class="string">"root"</span>, <span class="string">"123zxc"</span>)</span><br><span class="line">rs.status()</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;MongoDB复制集概述&quot;&gt;&lt;a href=&quot;#MongoDB复制集概述&quot; class=&quot;headerlink&quot; title=&quot;MongoDB复制集概述&quot;&gt;&lt;/a&gt;MongoDB复制集概述&lt;/h1&gt;&lt;h2 id=&quot;什么是复制集&quot;&gt;&lt;a href=&quot;#什么是复制集&quot; class=&quot;headerlink&quot; title=&quot;什么是复制集&quot;&gt;&lt;/a&gt;什么是复制集&lt;/h2&gt;&lt;p&gt;复制集(Replica Sets)是额外的数据副本, 是跨多个服务器同步数据的过程, 复制集提供了冗余并增加了数据可用性, 通过复制集可以对硬件故障和中断的服务进行恢复.&lt;/p&gt;
&lt;p&gt;复制集的优势如下:&lt;br&gt;1.让数据更安全&lt;br&gt;2.高数据可用性(24*7)&lt;br&gt;3.灾难恢复&lt;br&gt;4.无停机维护(如备份、索引重建、故障转移)&lt;br&gt;5.读缩放(额外的副本读取)&lt;br&gt;6.副本集对应用程序是透明的&lt;/p&gt;
&lt;h2 id=&quot;复制集工作原理&quot;&gt;&lt;a href=&quot;#复制集工作原理&quot; class=&quot;headerlink&quot; title=&quot;复制集工作原理&quot;&gt;&lt;/a&gt;复制集工作原理&lt;/h2&gt;&lt;p&gt;MongoDB的复制集至少需要两个节点. 其中一个是主节点(Primary), 负责处理客户端的请求, 其余的都是从节点(Secondary), 负责复制主节点上的数据.&lt;/p&gt;
&lt;p&gt;复制集特点:&lt;br&gt;1.N个节点的群集&lt;br&gt;2.任何节点可作为主节点&lt;br&gt;3.所有写入操作都在主节点上&lt;br&gt;4.自动故障转移&lt;br&gt;5.自动恢复&lt;/p&gt;
&lt;table&gt;
客户端在主节点写入数据, 在从节点读取数据, 主节点与从节点进行数据交互保障数据的一致性. 如果其中一个节点出现故障, 其他节点马上会将业务接过来而无需停机操作.
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/37db6981/MongoDB复制结构图.png&quot; title=&quot;复制集工作原理&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="MongoDB" scheme="http://www.mengyun.club/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB基础</title>
    <link href="http://www.mengyun.club/post/f20a5c88/"/>
    <id>http://www.mengyun.club/post/f20a5c88/</id>
    <published>2020-08-26T08:10:46.000Z</published>
    <updated>2020-09-02T13:54:38.353Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="MongoDB概述"><a href="#MongoDB概述" class="headerlink" title="MongoDB概述"></a>MongoDB概述</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MongoDB是一款跨平台、面向文档的数据库.</p><p>可以实现高性能、高可用性, 并且能够轻松扩展. 是一个基于分布式文件存储的开源数据库系统, 在高负载的情况下, 添加更多的节点, 可以保证服务器性能.</p><p>MongoDB也是一个介于关系数据库和非关系数据库之间的产品, 是非关系数据库当中功能最丰富, 最像关系数据库的. 不采用关系模型主要是为了获得更好的扩展性, MongoDB不再有”行”(row)的概念, 其运行方式主要基于两个概念:集合(collection)与文档(document).</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>MongoDB的特点包括面向集合存储、模式自由、丰富的查询语句和多级索引、复制集机制、易于水平扩展、可插入存储引擎、跨平台多语言支持等.</p><p>MongoDB安装简单, 提供了面向文档存储功能, 操作起来比较容易.</p><p>MongobB提供了复制、高可用性和自动分片功能.<br>如果负载增加(需要更多的存储空间和更强的处理能力), 它可以分布在计算机网络中的其他节点上, 这就是所谓的分片. Mongo支持丰富的查询表达式, 查询指令使用JSON形式的标记, 可轻易查询文档中内嵌的对象及数组.</p><p>MongoDB支持各种编程语言:Ruby、Python、Java、C++、PHP、C#等多种语言</p><h2 id="适用领域"><a href="#适用领域" class="headerlink" title="适用领域"></a>适用领域</h2><p>MongoDB可以为Web应用提供可扩展的高性能数据存储解决方案. MongoDB主要适用领域有网站数据、分布式场景、数据缓存和JSON文档格式存储. 适合大数据量、高并发、弱事务的互联网应用, 其内置的水平扩展机制提供了从几百万到十亿级别的数据处理能力, 可以很好地满足Web2.0和移动互联网应用数据存储的要求.</p><a id="more"></a><h1 id="MongoDB安装"><a href="#MongoDB安装" class="headerlink" title="MongoDB安装"></a>MongoDB安装</h1><h2 id="安装及运行控制"><a href="#安装及运行控制" class="headerlink" title="安装及运行控制"></a>安装及运行控制</h2><p>1.配置yum源进行安装MongoDB</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/mongodb-org.repo &lt;&lt;-EOF</span><br><span class="line">[mongodb-org]</span><br><span class="line"><span class="attribute">name</span>=MongoDB Repository</span><br><span class="line"><span class="attribute">baseurl</span>=http://mirrors.aliyun.com/mongodb/yum/redhat/7Server/mongodb-org/3.4/x86_64/</span><br><span class="line"><span class="attribute">gpgcheck</span>=0</span><br><span class="line"><span class="attribute">enabled</span>=1</span><br><span class="line">EOF</span><br><span class="line">yum install -y mongodb-org</span><br></pre></td></tr></table></figure><p>2.MongoDB运行控制<br>设置内核参数</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 当某个节点可用内存不足时, 系统会从其他节点分配内存.</span></span><br><span class="line">echo <span class="number">0</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/vm/</span>zone_reclaim_mode</span><br><span class="line"></span><br><span class="line"><span class="meta"># 关闭大页内存</span></span><br><span class="line">echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled</span><br><span class="line">echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag</span><br><span class="line"></span><br><span class="line"><span class="meta"># 永久生效设置</span></span><br><span class="line">vi <span class="meta-keyword">/etc/</span>rc.local</span><br><span class="line">echo <span class="number">0</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/vm/</span>zone_reclaim_mode</span><br><span class="line">echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled</span><br><span class="line">echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">sh <span class="meta-keyword">/etc/</span>rc.local</span><br></pre></td></tr></table></figure><h2 id="启动和停止"><a href="#启动和停止" class="headerlink" title="启动和停止"></a>启动和停止</h2><p>1.启动MongoDB服务并设置开机自启动</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /etc/mongod.conf</span><br><span class="line"></span><br><span class="line">vim /etc/rc.local</span><br><span class="line">  rm -rf  /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mongo</span>/<span class="title">mongod</span>.<span class="title">lock</span></span></span><br><span class="line">  mongod -f /etc/mongod.conf</span><br></pre></td></tr></table></figure><p>2.测试是否安装成功</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">http:</span><span class="comment">//localhost:27017</span></span><br></pre></td></tr></table></figure><pre>It looks like you are trying to access MongoDB over HTTP on the native driver port.</pre><p>3.停止MongoDB</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /etc/mongod.conf --<span class="keyword">shutdown</span></span><br><span class="line">ps aux | <span class="keyword">grep</span> mongod</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当没有正常关闭成功时, 直接结束进程.</span></span><br><span class="line"><span class="keyword">kill</span> -<span class="number">2</span> pid号</span><br></pre></td></tr></table></figure><p>4.连接并访问MongoDB, 关闭数据库并退出.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line">use admin</span><br><span class="line">db.shutdownServer()</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p>注: 用Systemctl运行脚本文件来启动</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /lib/systemd/system/mongod.service &lt;&lt;-EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=MongoDB</span><br><span class="line"><span class="attribute">After</span>=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">PIDFile</span>=/var/lib/mongo/mongod.lock</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/bin/mongod --auth -f /etc/mongod.conf</span><br><span class="line"><span class="attribute">ExecReload</span>=rm -rf /var/lib/mongo/mongod.lock &amp;&gt; /dev/<span class="literal">null</span>;/usr/bin/mongod -f /etc/mongod.conf --shutdown;/usr/bin/mongod -f /etc/mongod.conf</span><br><span class="line"><span class="attribute">ExecStop</span>=/usr/bin/mongod -f /etc/mongod.conf --shutdown</span><br><span class="line"><span class="attribute">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="多实例启动"><a href="#多实例启动" class="headerlink" title="多实例启动"></a>多实例启动</h2><p>1.复制配置文件并更改</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> /etc/mongod.<span class="keyword">conf</span> /etc/mongod2.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">vim</span> /etc/mongod2.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><pre>systemLog:  destination: file  logAppend: true  <font color="red">path: /var/log/mongodb/mongod2.log</font>storage:  <font color="red">dbPath: /var/lib/mongo2</font>  journal:    enabled: trueprocessManagement:  fork: true    pidFilePath: /var/run/mongodb/mongod.pidnet:  <font color="red">port: 27018</font>  bindIp: 127.0.0.1  </pre><p>2.创建数据文件并赋予权限</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/<span class="class"><span class="keyword">lib</span>/<span class="title">mongo2</span></span></span><br><span class="line">touch /var/log/mongodb/mongod2.log</span><br><span class="line">chmod -R <span class="number">777</span> /var/log/mongodb/mongod2.log</span><br></pre></td></tr></table></figure><p>2.启动多实例</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongod -f <span class="regexp">/etc/m</span>ongod2.conf</span><br><span class="line">mongo</span><br><span class="line">use admin</span><br><span class="line">db.shutdownServer()</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h1 id="MongoDB存储结构"><a href="#MongoDB存储结构" class="headerlink" title="MongoDB存储结构"></a>MongoDB存储结构</h1><h2 id="逻辑存储结构"><a href="#逻辑存储结构" class="headerlink" title="逻辑存储结构"></a>逻辑存储结构</h2><p>MongoDB的逻辑结构主要由文档(document)、集合(collection)和数据库(database)三部分组成.</p><p>其中文档是MongoDB的核心概念, 它是MongoDB逻辑存储的最小单元, 相当于关系型数据库中的一行记录, 多个文档组成集合, 集合相当于关系型数据库中的表的概念, 多个集合组成数据库.</p><table><tr><td>SQL术语/概念</td><td>MongoDB术语/概念</td><td>解释/说明</td></tr><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>documen</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>field</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接, MongoDB不支持.</td></tr><tr><td>primary key</td><td>primary key</td><td>主键, MongoDB自动将_id字段设置为主键.</td></tr></table><p>1.数据库<br>MongoDB的默认数据库:<code>test</code><br><code>admin</code>: root数据库, 如果将一个用户添加到这个数据库, 这个用户将自动继承所有数据库的权限. 一些特定的服务器端命令也只能从这个数据库运行.</p><p><code>local</code>: 这个数据永远不会被复制, 可以用来存储限于本地单台服务器的任意集合.</p><p><code>config</code>: 当Mongo用于分片设置时, config数据库在内部使用, 用于保存分片的相关信息.</p><p>2.集合<br>集合存在于数据库中, 集合没有固定的结构, 这意味着在集合中可以插入不同格式和类型的数据, 但通常情况下插入集合的数据都会有一定的关联性.</p><p>当第一个文档插入时, 集合就会被创建.</p><p>合法的集合名不能是空字符串””, 不能含有\0字符(空字符), 这个字符表示集合名的结尾, 不能以”system.”开头, 这是为系统集合保留的前缀.</p><p>3.文档<br>文档是一个键值对:<br>(1)文档中的键值对是有序的<br>(2)文档中的值可以是双引号里面的字符串, 也可以是其他几种数据类型(甚至可以是整个嵌入的文档).<br>(3)MongoDB区分类型和大小写<br>(4)MongoDB的文档不能有重复的键<br>(5)文档的键是字符串. 除了少数例外情况, 键可以使用任意UTF-8字符.</p><p>文档键命名规范:<br>(1)键不能含有\0(空字符), 这个字符用来表示键的结尾.<br>(2).和$有特别的意义, 只有在特定环境下才能使用.<br>(3)以下划线”_”开头的键是保留的(不是严格要求的)</p><h2 id="物理存储结构"><a href="#物理存储结构" class="headerlink" title="物理存储结构"></a>物理存储结构</h2><p>MongoDB物理存储结构主要包括数据存储和日志存储</p><p>1.数据存储<br>MongoDB的数据目录由配置文件中的dbpath指定, 用来存储所有MongoDB的数据文件.</p><p>在MongoDB内部, 每个数据库都包含一个.ns文件和一些数据文件.</p><p>MongoDB内部有预分配空间的机制, 预分配的文件都用0进行填充, 这样MongoDB始终保持额外的空间和空余的数据文件. 数据文件每次新生成的一个文件, 大小都会是上一个文件的两倍.</p><p>文件使用MMAP进行内存映射, 会将所有数据文件映射到内存中, 但是只是虚拟内存, 只有访问到这块数据时才会交换到物理内存.</p><p>2.日志存储<br>结构:<br>(1)系统日志文件的存放由配置文件中的path指定<br>(2)Journal日志文件, 用于MongoDB崩溃恢复的保障.<br>(3)oplog复制操作日志文件在启动主从复制时出现<br>(4)慢查询日志文件, 需要在配置文件中指定profile=1(开启慢查询)与slowms<br>=200(记录毫秒数), 查看慢查询的命令:<code>db.system.profile.find()</code>.</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><table>常用数据类型<tr><td>String</td><td>字符串, 存储数据常用的数据类型. 在MongoDB中UTF-8编码的字符串才是合法的.</td></tr><tr><td>Integer</td><td>整型数值, 用于存储数值. 根据用户的服务器, 可分为32位或64位.</td></tr><tr><td>Boolean</td><td>布尔值, 用于存储布尔值(真/假).</td></tr><tr><td>Double</td><td>双精度浮点值, 用于存储浮点值.</td></tr><tr><td>Arrays</td><td>用于将数组或列表或多个值存储为一个键</td></tr><tr><td>Object</td><td>用于内嵌文档</td></tr><tr><td>Null</td><td>用于创建空值</td></tr><tr><td>Date</td><td>日期时间, 用户可以指定自己的日期时间, 创建Date对象, 传入年月日信息.</td></tr><tr><td>Binary Data</td><td>二进制数据, 用于存储二进制数据.</td></tr></table><h1 id="MongoDB基本操作"><a href="#MongoDB基本操作" class="headerlink" title="MongoDB基本操作"></a>MongoDB基本操作</h1><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看当前操作的库</span></span><br><span class="line"><span class="keyword">db</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看当前实例下的数据库列表</span></span><br><span class="line">show dbs</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换到指定数据库, 如果数据库不存在, 则创建数据库.</span></span><br><span class="line"><span class="keyword">use</span> db_name</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示当前数据库中的集合</span></span><br><span class="line">show collections</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示数据库操作命令</span></span><br><span class="line"><span class="keyword">db</span>.<span class="keyword">help</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示集合操作命令</span></span><br><span class="line"><span class="keyword">db</span>.ct_name.<span class="keyword">help</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对当前数据库中指定的集合进行数据查找</span></span><br><span class="line"><span class="keyword">db</span>.ct_name.find()</span><br><span class="line"><span class="keyword">db</span>.ct_name.findOne()</span><br></pre></td></tr></table></figure><h2 id="创建、复制、删除数据库"><a href="#创建、复制、删除数据库" class="headerlink" title="创建、复制、删除数据库"></a>创建、复制、删除数据库</h2><p>1.创建数据库或切换数据库</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> db_name</span><br><span class="line"><span class="keyword">show</span> dbs</span><br></pre></td></tr></table></figure><p>2.复制数据库</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.copyDatabase(<span class="string">"db_name"</span>,<span class="string">"db_name2"</span>,<span class="string">"localhost"</span>)</span><br><span class="line"><span class="keyword">show</span> dbs</span><br></pre></td></tr></table></figure><p>3.删除数据库</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">db</span><span class="selector-class">.dropDatabase</span>()</span><br><span class="line"><span class="selector-tag">show</span> <span class="selector-tag">dbs</span></span><br></pre></td></tr></table></figure><h2 id="集合和文档操作"><a href="#集合和文档操作" class="headerlink" title="集合和文档操作"></a>集合和文档操作</h2><p>1.集合中插入文档</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 没有该集合时会自动创建</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.ct_name</span><span class="selector-class">.insert</span>(&#123;<span class="attribute">id</span>:数字, <span class="string">'字段名'</span>:<span class="string">'值'</span>&#125;)</span><br><span class="line"><span class="selector-tag">db_ct_name</span><span class="selector-class">.fint</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除当前这个集合</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.ct</span><span class="selector-class">.name</span><span class="selector-class">.drop</span>()</span><br></pre></td></tr></table></figure><p>2.修改集合中的文档</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改匹配的第一条数据</span></span><br><span class="line"><span class="keyword">db</span>.ct_name.<span class="keyword">update</span>(&#123;id:数字,<span class="string">"字段名"</span>:<span class="string">"值"</span>&#125;, &#123;<span class="string">"字段名"</span>:<span class="string">"值"</span>,...&#125;)</span><br></pre></td></tr></table></figure><p>3.删除集合中符合条件的所有数据</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.ct_name.<span class="builtin-name">remove</span>(&#123;<span class="string">"字段名"</span>:<span class="string">"值"</span>&#125;)</span><br></pre></td></tr></table></figure><p>4.克隆集合</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 启动另一个实例</span></span><br><span class="line">mongod -f /etc/mongod2.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># 查看实例端口是否存在</span></span><br><span class="line">netstat -lnt</span><br><span class="line"></span><br><span class="line">mongo --port <span class="number">27018</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从指定来源实例中克隆指定数据库下的指定集合到当前实例中</span></span><br><span class="line">db.runCommand(&#123;<span class="string">"cloneCollection"</span>:<span class="string">"db_name.ct_name"</span>, <span class="string">"from"</span>:<span class="string">"127.0.0.1:27017"</span>&#125;)</span><br><span class="line">show dbs</span><br></pre></td></tr></table></figure><h1 id="MongoDB日常维护"><a href="#MongoDB日常维护" class="headerlink" title="MongoDB日常维护"></a>MongoDB日常维护</h1><table><tr><td>-d</td><td>指明数据库的名字</td></tr><tr><td>-c</td><td>指明集合的名字</td></tr><tr><td>-f</td><td>指明要导出的列名</td></tr><tr><td>-o</td><td>指明要导出的文件名</td></tr><tr><td>-q</td><td>指明导出数据的过滤条件</td></tr><tr><td>-h</td><td>MongoDB所在服务器地址(可指定端口号)</td></tr><tr><td>--authenticationDatabase</td><td>授权用户的数据库角色</td></tr></table><h2 id="备份与恢复管理"><a href="#备份与恢复管理" class="headerlink" title="备份与恢复管理"></a>备份与恢复管理</h2><p>1.导入与导出<br>(1).导出</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">use info</span><br><span class="line"></span><br><span class="line">\\ 创建测试数据</span><br><span class="line"><span class="keyword">for</span>(var i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;db.test.insert(&#123;<span class="string">'id'</span>:i,<span class="string">'name'</span>:<span class="string">'Alice'</span>&#125;);&#125;</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出数据</span></span><br><span class="line">mongoexport -d info -c test -o <span class="regexp">/opt/i</span>nfo.json</span><br><span class="line"><span class="comment"># 带用户认证的导出数据</span></span><br><span class="line">mongoexport -h <span class="number">192.168</span>.<span class="number">100.10</span>:<span class="number">27017</span> -uroot -p123456 -d info -c test -o <span class="regexp">/opt/i</span>nfo.json --authenticationDatabase admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出id&gt;500的数据</span></span><br><span class="line">mongoexport -d info -c test -q <span class="string">'&#123; "id":&#123; "$gt":500&#125; &#125;'</span> -o <span class="regexp">/opt/i</span>nfo_gt500.json</span><br><span class="line"><span class="comment"># 带用户认证导出id&gt;500的数据</span></span><br><span class="line">mongoexport -h <span class="number">192.168</span>.<span class="number">100.10</span>:<span class="number">27017</span> -uroot -p123456 -d info -c test -q <span class="string">'&#123; "id":&#123; "$gt":500&#125; &#125;'</span> -o <span class="regexp">/opt/i</span>nfo_gt500.json --authenticationDatabase admin</span><br><span class="line"></span><br><span class="line">head -<span class="number">10</span> <span class="regexp">/opt/i</span>nfo_gt500.json</span><br></pre></td></tr></table></figure><p>(2).导入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\\ 删除集合</span><br><span class="line">db.test.drop()</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">mongoimport -d info -c test --file <span class="regexp">/opt/i</span>nfo.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line">mongo</span><br><span class="line">use info</span><br><span class="line">show collections</span><br></pre></td></tr></table></figure><p>2.备份与恢复<br>(1)备份</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">27017</span> -d info -o /opt/</span><br><span class="line"></span><br><span class="line"># 带用户认证</span><br><span class="line">mongodump -h <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">27017</span> -uroot -p123456 -d info -o /opt/ --authenticationDatabase admin</span><br></pre></td></tr></table></figure><p>(2)恢复</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -h 127.0.0.1:27017 -d <span class="builtin-name">info</span> <span class="attribute">--dir</span>=/opt/info/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带用户认证</span></span><br><span class="line">mongorestore -h 192.168.100.10:27017 -uroot -p123456 -d <span class="builtin-name">info</span> <span class="attribute">--dir</span>=/opt/info/  --authenticationDatabase admin</span><br></pre></td></tr></table></figure><h2 id="安全管理"><a href="#安全管理" class="headerlink" title="安全管理"></a>安全管理</h2><p>1.限定监听特定IP和端口</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/etc/mongod.conf</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="string">netstat</span> <span class="string">-antp</span> <span class="string">|</span> <span class="string">grep</span> <span class="number">27017</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接MongoDB</span></span><br><span class="line"><span class="string">mongo</span> <span class="string">--host</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span><span class="string">:27017</span></span><br></pre></td></tr></table></figure><p>2.授权启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新连接MongoDB</span></span><br><span class="line">mongod -f <span class="regexp">/etc/m</span>ongod.conf --shutdown</span><br><span class="line">mongod -f <span class="regexp">/etc/m</span>ongod.conf </span><br><span class="line"></span><br><span class="line">mongo --host <span class="number">192.168</span>.<span class="number">100.10</span>:<span class="number">27017</span></span><br><span class="line">use admin </span><br><span class="line"><span class="regexp">//</span> 创建用户</span><br><span class="line">db.createUser(</span><br><span class="line">&#123;</span><br><span class="line">user:<span class="string">"root"</span>,</span><br><span class="line">pwd:<span class="string">"123456"</span>,</span><br><span class="line">roles:[&#123;role:<span class="string">"root"</span>, db:<span class="string">"admin"</span>&#125;]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 删除用户</span><br><span class="line">db.dropUser(<span class="string">'用户名'</span>)</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 授权验证</span><br><span class="line">db.auth(<span class="string">'root'</span>,<span class="string">'123456'</span>)</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 查看用户</span><br><span class="line">db.system.users.find().pretty()</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启MongoDB的授权</span></span><br><span class="line">vim <span class="regexp">/etc/m</span>ongod.conf</span><br><span class="line">  security:</span><br><span class="line">    authorization: enabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新连接MongoDB</span></span><br><span class="line">mongod -f <span class="regexp">/etc/m</span>ongod.conf --shutdown</span><br><span class="line">mongod -f <span class="regexp">/etc/m</span>ongod.conf </span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接验证</span></span><br><span class="line">mongo -uroot -p123456  <span class="number">192.168</span>.<span class="number">100.10</span><span class="regexp">/admin</span></span><br></pre></td></tr></table></figure><pre><font color="red">1</font>: 表示验证成功db.createUser({    user: "用户名",    pwd: "密码",    roles: [ { role: "角色", db: "作用数据库" } ]})数据库用户角色: read、readWrite数据库管理角色: dbAdmin、dbOwner、userAdmin集群管理角色: clusterAdmin、clusterManager、clusterMonitor、hostManager备份恢复角色: backup、restore所有数据库角色: readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase超级用户角色: root</pre><p>3.进程管理</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看当前正在运行的进程</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.currentOp</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据PID结束进程</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.killOp</span>(<span class="number">4988</span>)</span><br></pre></td></tr></table></figure><pre>{    "inprog" : [        {            "desc" : "conn2",            "threadId" : "140116274083584",            "connectionId" : 2,            "client" : "192.168.100.10:51702",            "appName" : "MongoDB Shell",            "clientMetadata" : {                "application" : {                    "name" : "MongoDB Shell"                },                "driver" : {                    "name" : "MongoDB Internal Client",                    "version" : "3.4.24"                },                "os" : {                    "type" : "Linux",                    "name" : "CentOS Linux release 7.5.1804 (Core) ",                    "architecture" : "x86_64",                    "version" : "Kernel 3.10.0-862.el7.x86_64"                }            },            "active" : true,            <font color="red">"opid" : 4988,</font>            "secs_running" : 0,            "microsecs_running" : NumberLong(47),            "op" : "command",            "ns" : "admin.$cmd",            "query" : {                "currentOp" : 1            },            "numYields" : 0,            "locks" : {            },            "waitingForLock" : false,            "lockStats" : {            }        }    ],    "ok" : 1}</pre><h2 id="MongoDB监控"><a href="#MongoDB监控" class="headerlink" title="MongoDB监控"></a>MongoDB监控</h2><p>1.查看数据库统计信息的命令<br>查看数据库实例的状态信息: <code>db.serverStatus()</code><br>查看当前数据库的统计信息: <code>db.stats()</code></p><p>用Web界面查看系统监控信息<br><a href="https://docs.mongodb.com/v3.4/reference/configuration-options/#net.http.enabled" target="_blank" rel="noopener">官方文档资料参考</a></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="meta-keyword">/etc/</span>mongod.conf</span><br><span class="line"><span class="symbol">  net:</span></span><br><span class="line">    ...</span><br><span class="line">  </span><br><span class="line"><span class="symbol">    http:</span></span><br><span class="line"><span class="symbol">      enabled:</span> true</span><br><span class="line">  </span><br><span class="line">  <span class="meta">#security:</span></span><br><span class="line">    <span class="meta">#authorization: enabled</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 重新连接MongoDB</span></span><br><span class="line">mongod -f <span class="meta-keyword">/etc/</span>mongod.conf --shutdown</span><br><span class="line">mongod -f <span class="meta-keyword">/etc/</span>mongod.conf </span><br><span class="line"></span><br><span class="line"><span class="meta"># 访问HTTP状态界面</span></span><br><span class="line">curl http:<span class="comment">//192.168.100.10:28017</span></span><br></pre></td></tr></table></figure><p>2.查看集合统计信息的命令<br>查看集合统计信息: <code>db.users.stats()</code><br>查看集合大小: <code>db.users.dataSize()</code></p><p>3.第三方监控工具<br>在Nagios中配置使用MongoDB插件来监控MongoDB数据库</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;MongoDB概述&quot;&gt;&lt;a href=&quot;#MongoDB概述&quot; class=&quot;headerlink&quot; title=&quot;MongoDB概述&quot;&gt;&lt;/a&gt;MongoDB概述&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;MongoDB是一款跨平台、面向文档的数据库.&lt;/p&gt;
&lt;p&gt;可以实现高性能、高可用性, 并且能够轻松扩展. 是一个基于分布式文件存储的开源数据库系统, 在高负载的情况下, 添加更多的节点, 可以保证服务器性能.&lt;/p&gt;
&lt;p&gt;MongoDB也是一个介于关系数据库和非关系数据库之间的产品, 是非关系数据库当中功能最丰富, 最像关系数据库的. 不采用关系模型主要是为了获得更好的扩展性, MongoDB不再有”行”(row)的概念, 其运行方式主要基于两个概念:集合(collection)与文档(document).&lt;/p&gt;
&lt;h2 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h2&gt;&lt;p&gt;MongoDB的特点包括面向集合存储、模式自由、丰富的查询语句和多级索引、复制集机制、易于水平扩展、可插入存储引擎、跨平台多语言支持等.&lt;/p&gt;
&lt;p&gt;MongoDB安装简单, 提供了面向文档存储功能, 操作起来比较容易.&lt;/p&gt;
&lt;p&gt;MongobB提供了复制、高可用性和自动分片功能.&lt;br&gt;如果负载增加(需要更多的存储空间和更强的处理能力), 它可以分布在计算机网络中的其他节点上, 这就是所谓的分片. Mongo支持丰富的查询表达式, 查询指令使用JSON形式的标记, 可轻易查询文档中内嵌的对象及数组.&lt;/p&gt;
&lt;p&gt;MongoDB支持各种编程语言:Ruby、Python、Java、C++、PHP、C#等多种语言&lt;/p&gt;
&lt;h2 id=&quot;适用领域&quot;&gt;&lt;a href=&quot;#适用领域&quot; class=&quot;headerlink&quot; title=&quot;适用领域&quot;&gt;&lt;/a&gt;适用领域&lt;/h2&gt;&lt;p&gt;MongoDB可以为Web应用提供可扩展的高性能数据存储解决方案. MongoDB主要适用领域有网站数据、分布式场景、数据缓存和JSON文档格式存储. 适合大数据量、高并发、弱事务的互联网应用, 其内置的水平扩展机制提供了从几百万到十亿级别的数据处理能力, 可以很好地满足Web2.0和移动互联网应用数据存储的要求.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="MongoDB" scheme="http://www.mengyun.club/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MySQL主从复制、读写分离、MMM高可用</title>
    <link href="http://www.mengyun.club/post/c7e46abc/"/>
    <id>http://www.mengyun.club/post/c7e46abc/</id>
    <published>2020-08-24T08:53:48.000Z</published>
    <updated>2020-09-18T01:14:18.822Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h2 id="MySQL主从复制"><a href="#MySQL主从复制" class="headerlink" title="MySQL主从复制"></a>MySQL主从复制</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>主从复制原理</p><table><tr><td><img src="/post/c7e46abc/MySQL复制的工作过程.png"></td></tr></table>Binary log:二进制日志Relay log:中继日志I/O thread:I/O线程, 状态必须为开启状态(YES).SQL thread:SQL语句线程, 状态同样必须为开启状态(YES).<p>1.在每个事务更新数据完成之前, Master在二进制日志中记录这些改变. 写入二进制日志完成后, Master通知存储引擎提交事务.</p><p>2.Slave将Master的二进制日志复制到其中继日志. 首先, Slave开始一个工作线程-I/O线程, I/O线程在Master上打开一个普通的连接, 然后开始Binlog dump process. Binlog dump process从Master的二进制日志中读取事件, 如果已经跟上Master, 它会睡眠并等待Master产生新的事件. I/O线程将这些事件写入中继日志.</p><p>3.SQL slave thread(SQL从线程)处理该过程的最后一步. SQL线程从中继日志读取事件, 并重放其中的事件而更新Slave的数据, 使其与Master中的数据一致. 只要该线程与I/O线程保持一致, 中继日志通常会位于Os的缓存中, 所以中继日志的开销很小.</p><p>注:复制过程有一个很重要的限制, 即复制在Slave上是串行化的, 也就是说Master上的并行更新操作不能在Slave上并行操作.</p><a id="more"></a><p>MySQL支持的复制类型<br>1.基于语句的复制<br>在主服务器上执行的SQL语句, 在从服务器上执行同样的语句, MySQL默认采用基于语句的复制, 效率比较高.</p><p>2.基于行的复制<br>把改变的内容复制过去, 而不是把命令在从服务器上执行一遍.</p><p>3.混合类型的复制<br>默认采用基于语句的复制, 一旦发现基于语句无法精确复制时, 就会采用基于行的复制.</p><h3 id="建立时间同步环境"><a href="#建立时间同步环境" class="headerlink" title="建立时间同步环境"></a>建立时间同步环境</h3><p>为了保证业务环境的实时同步, 需要建立时间同步环境.</p><p>MySQL主服务器<br>1.安装NTP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><p>2.配置NTP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line">  server 时间供给源 #127.127.1.0 为本地</span><br><span class="line">  fudge 时间供给源 stratum 8</span><br></pre></td></tr></table></figure><pre>阿里云时间服务器ntp1.aliyun.comntp2.aliyun.comntp3.aliyun.comntp4.aliyun.comntp5.aliyun.comntp6.aliyun.comntp7.aliyun.com</pre><p>3.重启服务并设置为开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 立即同步时间</span></span><br><span class="line">ntpdate 时间供给源 </span><br><span class="line"></span><br><span class="line">systemctl restart ntpd</span><br><span class="line">systemctl enable ntpd</span><br></pre></td></tr></table></figure><p>MySQL从服务器<br>1.安装NTPdate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntpdate</span><br><span class="line">ntpdate 主服务器ip地址</span><br></pre></td></tr></table></figure><p>2.配置NTP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line">  server 主服务器ip地址</span><br><span class="line">  fudge 主服务器ip地址 stratum 8</span><br></pre></td></tr></table></figure><p>3.重启服务并设置为开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ntpd</span><br><span class="line">systemctl enable ntpd</span><br></pre></td></tr></table></figure><h3 id="修改主服务器"><a href="#修改主服务器" class="headerlink" title="修改主服务器"></a>修改主服务器</h3><p>1.修改配置文件后并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  server-id = 11</span><br><span class="line">  log_bin = master-bin</span><br><span class="line">  log-slave-updates = true</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>2.登录mysql, 给服务器授权.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p[密码]</span><br><span class="line"></span><br><span class="line">grant replication slave on *.* to 'myslave'@'192.168.100.%' identified by '123456';</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure><pre>+-------------------+----------+--------------+------------------+-------------------+| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+-------------------+----------+--------------+------------------+-------------------+| master-bin.000001 |     4035 |              |                  |                   |+-------------------+----------+--------------+------------------+-------------------+</pre><p>注: 主服务器要关闭防火墙让从服务器访问, 或者对指定主机开放端口.</p><h3 id="修改从服务器"><a href="#修改从服务器" class="headerlink" title="修改从服务器"></a>修改从服务器</h3><p>1.修改配置文件后并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  server-id = #22 #33</span><br><span class="line">  log_bin = slave-bin</span><br><span class="line">  log-slave-updates = true</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>2.从服务器配置同步</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p[密码]</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'主服务器ip地址'</span>, master_user=<span class="string">'myslave'</span>, master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'master-bin.000001'</span>, master_log_pos=<span class="number">4035</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">stop</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">reset</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G;</span><br></pre></td></tr></table></figure><pre>*************************** 1. row ***************************               Slave_IO_State: Waiting for master to send event                  Master_Host: 192.168.100.10                  Master_User: myslave                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: master-bin.000001          Read_Master_Log_Pos: 4035               Relay_Log_File: localhost-relay-bin.000003                Relay_Log_Pos: 791        Relay_Master_Log_File: master-bin.000001             <font color="red">Slave_IO_Running: Yes</font>            <font color="red">Slave_SQL_Running: Yes</font>                             ...</pre><p>reset slave执行时:<br>1.删除slave_master_info、slave_relay_log_info的表数据;<br>2.删除所有relay log文件, 并重新生成;<br>3.不会改变gtid_executed或gtid_purged的值</p><h3 id="验证主从配置"><a href="#验证主从配置" class="headerlink" title="验证主从配置"></a>验证主从配置</h3><p>在主服务器上创建测试数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">hosts</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> db_test;</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> zang (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>),<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),address <span class="built_in">varchar</span>(<span class="number">20</span>));</span><br></pre></td></tr></table></figure><p>在从服务器上查看测试数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><h2 id="MySQL读写分离"><a href="#MySQL读写分离" class="headerlink" title="MySQL读写分离"></a>MySQL读写分离</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="https://github.com/Qihoo360/Atlas/blob/master/README_ZH.md" target="_blank" rel="noopener">Atlas</a>是由Qihoo 360公司Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目. 它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上, 修改了大量bug, 添加了很多功能特性.</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p>1.读写分离<br>2.从库负载均衡<br>3.IP过滤<br>4.自动分表<br>5.DBA可平滑上下线DB<br>6.自动摘除宕机的DB</p><p>Atlas相对于官方MySQL-Proxy的优势:<br>1.将主流程中所有Lua代码用C重写, Lua仅用于管理接口.<br>2.重写网络模型、线程模型<br>3.实现了真正意义上的连接池<br>4.优化了锁机制, 性能提高数十倍.</p><h3 id="配置读写分离"><a href="#配置读写分离" class="headerlink" title="配置读写分离"></a>配置读写分离</h3><table>在主从复制已搭建的环境下:<tr><td>MySQL-Master</td><td>192.168.100.10/24</td></tr><tr><td>MySQL-Slave1</td><td>192.168.100.20/24</td></tr><tr><td>MySQL-Slave2</td><td>192.168.100.30/24</td></tr><tr><td>MySQL+Atlas</td><td>192.168.100.40/24</td></tr></table><h4 id="MySQL-Master、Slave1、Slave2"><a href="#MySQL-Master、Slave1、Slave2" class="headerlink" title="MySQL-Master、Slave1、Slave2."></a>MySQL-Master、Slave1、Slave2.</h4><p>配置权限给Atlas</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'用户名'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><h4 id="MySQL-Atlas"><a href="#MySQL-Atlas" class="headerlink" title="MySQL-Atlas"></a>MySQL-Atlas</h4><p>1.<a href="https://github.com/Qihoo360/Atlas/releases/download/2.2.1/Atlas-2.2.1.el6.x86_64.rpm" target="_blank" rel="noopener">下载Atlas</a>并上传到当前目录下</p><p>2.安装Atlas软件, 安装好后会在<code>/usr/local/mysql-proxy</code>目录下生成文件夹.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh Atlas-2.2.1.el6.x86_64.rpm </span><br><span class="line"></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/usr/local/mysql-proxy/</span></span><br><span class="line"><span class="keyword">ls</span></span><br></pre></td></tr></table></figure><pre>bin: 可执行文件 |__ encrypt --对MySQL密码进行加密处理 |__ mysql-proxy --MySQL自身的读写分离代理 |__ mysql-proxyd --属于360, 管理服务的启动、重启、停止.lib: 库及Atlas的依赖项log: 日志文件conf: 配置文件 |__ test.cnf</pre><p>3.对MySQL的密码进行加密</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bin/encrypt </span>密码</span><br><span class="line">  加密后的密码</span><br></pre></td></tr></table></figure><p>4.编辑test.cnf配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim conf/test.cnf</span><br><span class="line">  <span class="comment"># 管理员登陆MySQL的用户名和密码</span></span><br><span class="line">  admin-username = user</span><br><span class="line">  admin-password = <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代理MySQL-Master</span></span><br><span class="line">  proxy-backend-addresses = 192.168.100.10:3306</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代理MySQL-Slave1、MySQL-Slave2.</span></span><br><span class="line">  proxy-read-only-backend-addresses = 192.168.100.20:3306@1, 192.168.100.30:3306@1</span><br><span class="line">  pwds = 用户名:加密后的密码</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 管理员和代理登录MySQL时, 允许访问的IP地址与端口号.</span></span><br><span class="line">  proxy-address = 192.168.100.40:1234</span><br><span class="line">  admin-address = 192.168.100.40:2345</span><br></pre></td></tr></table></figure><p>5.重启Atlas软件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/mysql-proxyd test <span class="keyword">start</span></span><br><span class="line">ps -ef | grep mysql-proxy</span><br><span class="line"></span><br><span class="line"><span class="keyword">bin</span>/mysql-proxyd <span class="keyword">test</span> restart</span><br></pre></td></tr></table></figure><h3 id="检测读写分离"><a href="#检测读写分离" class="headerlink" title="检测读写分离"></a>检测读写分离</h3><p>1.用Yum安装MySQL后并登陆MySQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员登陆MySQL</span></span><br><span class="line">mysql -h192<span class="number">.168</span><span class="number">.100</span><span class="number">.40</span> -uuser -ppwd -P2345</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> backends;</span><br></pre></td></tr></table></figure><pre>+-------------+---------------------+-------+------+| backend_ndx | address             | state | type |+-------------+---------------------+-------+------+|           1 | 192.168.100.10:3306 | up    | rw   ||           2 | 192.168.100.20:3306 | up    | ro   ||           3 | 192.168.100.30:3306 | up    | ro   |+-------------+---------------------+-------+------+</pre><p>2.在MySQL-Master上创建一个表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> db_test;</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> zang (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>),<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),address <span class="built_in">varchar</span>(<span class="number">20</span>));</span><br></pre></td></tr></table></figure><p>3.停止MySQL-Slave1、MySQL-Slave2的复制.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">stop</span> <span class="keyword">slave</span>;</span><br></pre></td></tr></table></figure><p>4.在MySQL-Master上插入一条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zang <span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'master'</span>,<span class="string">'this_is_master'</span>);</span><br></pre></td></tr></table></figure><p>5.分别在MySQL-Slave1、MySQL-Slave2中插入一条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL-Slave1</span></span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zang <span class="keyword">values</span>(<span class="string">'2'</span>,<span class="string">'slave1'</span>,<span class="string">'this_is_slave1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL-Slave2</span></span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zang <span class="keyword">values</span>(<span class="string">'3'</span>,<span class="string">'slave2'</span>,<span class="string">'this_is_slave2'</span>);</span><br></pre></td></tr></table></figure><p>6.在MySQL-Atlas上测试读操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代理登陆MySQL</span></span><br><span class="line">mysql -h192.168.100.40 -u用户名 -p密码 -P1234</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br></pre></td></tr></table></figure><h2 id="MySQL-MMM高可用"><a href="#MySQL-MMM高可用" class="headerlink" title="MySQL-MMM高可用"></a>MySQL-MMM高可用</h2><p>MMML(Master-Master replication manager for MySQL, MySQL主主复制管理器)是一套支持双主故障切换和双主日常管理的脚本程序.</p><p>MMM使用Perl语言开发, 主要用来监控和管理MySQL Master-Master(双主)复制, 这套脚本程序一方面实现了故障切换的功能, 另一方面其内部附加的工具脚本也可以实现多个Slave的read负载均衡.</p><p>MMM提供了自动和手动两种方式移除一组服务器中复制延迟较高的服务器的虚拟ip. 同时它还可以备份数据, 实现两节点之间的数据同步等, 但MMM无法完全保证数据的一致性.</p><table><tr><td><img src="/post/c7e46abc/MMM架构图.jpg"></td></tr></table><p><code>mmm_mon</code>: 监控进程, 负责所有的监控工作, 决定和处理所有节点角色活动. 此脚本需要在监管机上运行.<br><code>mnm_agent</code>: 运行在每个MySQL服务器上的代理进程, 完成监控的探针工作和执行简单的远端服务设置. 此脚本需要在被监管机上运行.<br><code>mmm_control</code>: 一个简单的脚本, 提供管理<code>mmm_mond</code>进程的命令.</p><p>mysal-mmm的监管端会提供多个虚拟IP(VIP), 包括一个可写VIP, 多个可读VIP, 通过监管的管理, 这些IP会绑定在可用MySQL之上, 当某一台MySQL宕机时, 监管会将VIP迁移至其他MySQL.</p><h3 id="MMM高可用搭建"><a href="#MMM高可用搭建" class="headerlink" title="MMM高可用搭建"></a>MMM高可用搭建</h3><table>搭建环境:<tr><td>MySQL-Master1</td><td>192.168.100.10/24</td></tr><tr><td>MySQL-Master2</td><td>192.168.100.20/24</td></tr><tr><td>MySQL-Slave1</td><td>192.168.100.30/24</td></tr><tr><td>MySQL-Slave2</td><td>192.168.100.40/24</td></tr><tr><td>MySQL+Atlas+monitor</td><td>192.168.100.50/24</td></tr></table><h4 id="配置MySQL主主复制"><a href="#配置MySQL主主复制" class="headerlink" title="配置MySQL主主复制"></a>配置MySQL主主复制</h4><p>1.全部都安装上MySQL<br><a href="http://www.mengyun.ink/2020/08/13/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#%E4%BD%BF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85MySQL-5-7-30" target="_blank" rel="noopener">二进制安装MySQL-5.7.30</a></p><p>2.配置Master1、2和Slave1、2的my.cnf文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">  <span class="comment"># MySQL-Master1</span></span><br><span class="line">  server_id = 11</span><br><span class="line">  log_bin = master-bin</span><br><span class="line">  log-slave-updates = true</span><br><span class="line">  auto-increment-increment = 2</span><br><span class="line">  auto-increment-offset = 1</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># MySQL-Master2</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  server_id = 22</span><br><span class="line">  log_bin = master-bin</span><br><span class="line">  log-slave-updates = true</span><br><span class="line">  auto-increment-increment = 2</span><br><span class="line">  auto-increment-offset = 2</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># MySQL-Slave1</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  server_id = 33</span><br><span class="line">  relay-log = relay-log-bin</span><br><span class="line">  relay-log-index = slave-relay-bin.index</span><br><span class="line">  log-slave-updates = true</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># MySQL-Slave2</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  server_id = 44</span><br><span class="line">  relay-log = relay-log-bin</span><br><span class="line">  relay-log-index = slave-relay-bin.index</span><br><span class="line">  log-slave-updates = true</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>注: 如果是虚拟机克隆出来的话, 需删除auto.cnf文件后重启.</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop mysqld</span></span><br><span class="line"><span class="attr">rm</span> <span class="string">-rf /data/mysql/auto.cnf</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start mysqld</span></span><br></pre></td></tr></table></figure><p>3.配置Master1、2的主主模式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL-Master1</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> <span class="keyword">slave</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'myslave'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>;<span class="comment">--Master2定位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'192.168.100.20'</span>, master_user=<span class="string">'myslave'</span>, master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'master-bin.000002'</span>, master_log_pos=<span class="number">615</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL-Master2</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> <span class="keyword">slave</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'myslave'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>;<span class="comment">--Master1定位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'192.168.100.10'</span>, master_user=<span class="string">'myslave'</span>, master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'master-bin.000003'</span>, master_log_pos=<span class="number">1076</span>;</span><br></pre></td></tr></table></figure><pre><font color="green">Master1:</font>+-------------------+----------+--------------+------------------+-------------------+| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+-------------------+----------+--------------+------------------+-------------------+| master-bin.000003 |     1076 |              |                  |                   |+-------------------+----------+--------------+------------------+-------------------+<font color="green">Master2:</font>+-------------------+----------+--------------+------------------+-------------------+| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+-------------------+----------+--------------+------------------+-------------------+| master-bin.000002 |      615 |              |                  |                   |+-------------------+----------+--------------+------------------+-------------------+</pre><p>4.查看Master1、2的主从状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G;</span><br></pre></td></tr></table></figure><pre><font color="green">Master1:</font>*************************** 1. row ***************************               Slave_IO_State: Waiting for master to send event                  Master_Host: 192.168.100.20                  Master_User: myslave                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: master-bin.000002          Read_Master_Log_Pos: 615               Relay_Log_File: localhost-relay-bin.000002                Relay_Log_Pos: 321        Relay_Master_Log_File: master-bin.000002             <font color="red">Slave_IO_Running: Yes</font>            <font color="red">Slave_SQL_Running: Yes</font>                             ...<font color="green">Master2:</font>*************************** 1. row ***************************               Slave_IO_State: Waiting for master to send event                  Master_Host: 192.168.100.10                  Master_User: myslave                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: master-bin.000003          Read_Master_Log_Pos: 1076               Relay_Log_File: localhost-relay-bin.000002                Relay_Log_Pos: 321        Relay_Master_Log_File: master-bin.000003             <font color="red">Slave_IO_Running: Yes</font>            <font color="red">Slave_SQL_Running: Yes</font>                             ...</pre><p>5.测试主主同步, 在Master2中新建一个库.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> db_test;</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> zang (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>),<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),address <span class="built_in">varchar</span>(<span class="number">20</span>));</span><br></pre></td></tr></table></figure><p>6.回到Master1中进行查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><h4 id="配置MySQL主从复制"><a href="#配置MySQL主从复制" class="headerlink" title="配置MySQL主从复制"></a>配置MySQL主从复制</h4><p>1.查看Master1的状态值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>;</span><br></pre></td></tr></table></figure><pre>+-------------------+----------+--------------+------------------+-------------------+| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+-------------------+----------+--------------+------------------+-------------------+| master-bin.000003 |     1249 |              |                  |                   |+-------------------+----------+--------------+------------------+-------------------+</pre><p>2.配置Slave1、2为Master1的从库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'192.168.100.10'</span>, master_user=<span class="string">'myslave'</span>, master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'master-bin.000003'</span>, master_log_pos=<span class="number">1249</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G;</span><br></pre></td></tr></table></figure><h4 id="配置MySQL-MMM"><a href="#配置MySQL-MMM" class="headerlink" title="配置MySQL-MMM"></a>配置MySQL-MMM</h4><p>1.全部都安装上MMM</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O <span class="regexp">/etc/</span>yum.repos.d<span class="regexp">/epel.repo http:/</span><span class="regexp">/mirrors.aliyun.com/</span>repo/epel<span class="number">-7.</span>repo </span><br><span class="line">yum install -y  mysql-mmm*</span><br></pre></td></tr></table></figure><p>2.在Master1、2和Slave1、2上授权monitor访问</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控用户授权</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> <span class="keyword">client</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'mmm_monitor'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'monitor'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理用户授权</span></span><br><span class="line"><span class="keyword">grant</span> super, <span class="keyword">replication</span> <span class="keyword">client</span>, process <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'mmm_agent'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'agent'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>3.修改每台的<code>mmm_common.conf</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql-mmm/mmm_common.conf</span><br><span class="line">    active_master_role      writer</span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">default</span>&gt;</span></span><br><span class="line">                              # 本机网卡</span><br><span class="line">        cluster_interface       ens33 </span><br><span class="line">        pid_path                /run/mysql-mmm-agent.pid</span><br><span class="line">        bin_path                /usr/libexec/mysql-mmm/</span><br><span class="line"></span><br><span class="line">                              # 主数据库用户</span><br><span class="line">        replication_user        myslave</span><br><span class="line"></span><br><span class="line">                              # 主数据库用户密码</span><br><span class="line">        replication_password    123456</span><br><span class="line"></span><br><span class="line">                              # 代理用户</span><br><span class="line">        agent_user              mmm_agent</span><br><span class="line">        </span><br><span class="line">                              # 代理用户密码</span><br><span class="line">        agent_password          agent</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">db1</span>&gt;</span></span><br><span class="line">        ip      192.168.100.10</span><br><span class="line">        mode    master</span><br><span class="line">        peer    db2</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">db2</span>&gt;</span></span><br><span class="line">        ip      192.168.100.20</span><br><span class="line">        mode    master</span><br><span class="line">        peer    db1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">db3</span>&gt;</span></span><br><span class="line">        ip      192.168.100.30</span><br><span class="line">        mode    slave</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">db4</span>&gt;</span></span><br><span class="line">        ip      192.168.100.40</span><br><span class="line">        mode    slave</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">writer</span>&gt;</span></span><br><span class="line">        hosts   db1, db2</span><br><span class="line">        # 写操作的VIP地址</span><br><span class="line">        ips     192.168.100.12 </span><br><span class="line">        mode    exclusive</span><br><span class="line">    <span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">reader</span>&gt;</span></span><br><span class="line">        hosts   db3, db4</span><br><span class="line">        # 读操作的VIP地址</span><br><span class="line">        ips     192.168.100.34, 192.168.100.35</span><br><span class="line">        mode    balanced</span><br><span class="line">    <span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.修改Master1、2和Slave1、2上的<code>mmm_agent.conf</code>文件, 不同的主机为不同的值.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql-mmm/mmm_agent.conf</span><br><span class="line">    <span class="comment"># Master1</span></span><br><span class="line">    include mmm_common.conf</span><br><span class="line">    this db1</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Master2</span></span><br><span class="line">    include mmm_common.conf</span><br><span class="line">    this db2</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Slave1</span></span><br><span class="line">    include mmm_common.conf</span><br><span class="line">    this db3</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Slave2</span></span><br><span class="line">    include mmm_common.conf</span><br><span class="line">    this db4</span><br></pre></td></tr></table></figure><p>5.修改monitor上的<code>mmm_mon.conf</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql-mmm/mmm_mon.conf</span><br><span class="line">    include mmm_common.conf</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">monitor</span>&gt;</span></span><br><span class="line">        ip                  127.0.0.1</span><br><span class="line">        pid_path            /run/mysql-mmm-monitor.pid</span><br><span class="line">        bin_path            /usr/libexec/mysql-mmm</span><br><span class="line">        status_path         /var/lib/mysql-mmm/mmm_mond.status</span><br><span class="line">        # 要监控的ip地址</span><br><span class="line">        ping_ips            192.168.100.10, 192.168.100.20, 192.168.100.30, 192.168.100.40 </span><br><span class="line">        auto_set_online     60</span><br><span class="line"></span><br><span class="line">        # The kill_host_bin does not exist by default, though the monitor will</span><br><span class="line">        # throw a warning about it missing.  See the section 5.10 "Kill Host</span><br><span class="line">        # Functionality" in the PDF documentation.</span><br><span class="line">        #</span><br><span class="line">        # kill_host_bin     /usr/libexec/mysql-mmm/monitor/kill_host</span><br><span class="line">        #</span><br><span class="line">    <span class="tag">&lt;/<span class="name">monitor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">default</span>&gt;</span></span><br><span class="line">        # 监控用户</span><br><span class="line">        monitor_user        mmm_monitor</span><br><span class="line"></span><br><span class="line">        # 监控用户密码</span><br><span class="line">        monitor_password    monitor</span><br><span class="line">    <span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    debug 0</span><br></pre></td></tr></table></figure><p>6.启动代理和监控</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># monitor</span></span><br><span class="line">systemctl start mysql-mmm-monitor</span><br><span class="line">systemctl <span class="builtin-name">enable</span> mysql-mmm-monitor</span><br><span class="line"></span><br><span class="line"><span class="comment"># Master1、2和Slave1、2</span></span><br><span class="line">systemctl start mysql-mmm-agent</span><br><span class="line">service mysql-mmm-agent status</span><br><span class="line">systemctl <span class="builtin-name">enable</span> mysql-mmm-agent</span><br></pre></td></tr></table></figure><p>7.配置读写分离<br>(1).Master1、2和Slave1、2配置权限给Atlas</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'Atlas'</span>@<span class="string">'192.168.100.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>(2).安装Atlas软件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/Qihoo360/</span>Atlas<span class="regexp">/releases/</span>download<span class="regexp">/2.2.1/</span>Atlas-<span class="number">2.2</span>.<span class="number">1</span>.el6.x86_64.rpm</span><br><span class="line">rpm -ivh Atlas-<span class="number">2.2</span>.<span class="number">1</span>.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><p>(3).将配置权限的密码进行加密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql-proxy/</span><br><span class="line">bin/encrypt 密码</span><br><span class="line">  加密后的密码</span><br></pre></td></tr></table></figure><p>(4).编辑test.cnf配置文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vim conf/test.cnf</span><br><span class="line">  # 管理员登陆MySQL的用户名和密码</span><br><span class="line">  admin-username = user</span><br><span class="line">  admin-password = pwd</span><br><span class="line"></span><br><span class="line">  # 代理MySQL-Master</span><br><span class="line">  proxy-backend-addresses = <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">3306</span>, <span class="number">192.168</span><span class="number">.100</span><span class="number">.20</span>:<span class="number">3306</span></span><br><span class="line"></span><br><span class="line">  # 代理MySQL-Slave1、MySQL-Slave2.</span><br><span class="line">  proxy-read-only-backend-addresses = <span class="number">192.168</span><span class="number">.100</span><span class="number">.30</span>:<span class="symbol">3306@</span><span class="number">1</span>, <span class="number">192.168</span><span class="number">.100</span><span class="number">.40</span>:<span class="symbol">3306@</span><span class="number">1</span></span><br><span class="line">  pwds = Atlas:加密后的密码</span><br><span class="line"></span><br><span class="line">  # 设置Atlas的运行方式, 设为<span class="literal">true</span>时为守护进程方式, 设为<span class="literal">false</span>时为前台方式.</span><br><span class="line">  daemon = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  # 管理员和代理登录MySQL时, 允许访问的IP地址与端口号.</span><br><span class="line">  proxy-address = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1234</span></span><br><span class="line">  admin-address = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">2345</span></span><br></pre></td></tr></table></figure><p>(5).重启Atlas软件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/mysql-proxyd test <span class="keyword">start</span></span><br><span class="line">ps -ef | grep mysql-proxy</span><br><span class="line"></span><br><span class="line"><span class="keyword">bin</span>/mysql-proxyd <span class="keyword">test</span> restart</span><br></pre></td></tr></table></figure><p>(6).检查读写分离</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h192<span class="number">.168</span><span class="number">.100</span><span class="number">.50</span> -uuser -ppwd -P2345</span><br><span class="line">select * <span class="keyword">from</span> backends;</span><br></pre></td></tr></table></figure><pre>+-------------+---------------------+-------+------+| backend_ndx | address             | state | type |+-------------+---------------------+-------+------+|           1 | 192.168.100.10:3306 | up    | rw   ||           2 | 192.168.100.20:3306 | up    | rw   ||           3 | 192.168.100.30:3306 | up    | ro   ||           4 | 192.168.100.40:3306 | up    | ro   |+-------------+---------------------+-------+------+</pre><p>7.在monitor上检查群集状态</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control checks <span class="keyword">all</span></span><br></pre></td></tr></table></figure><pre>db4  ping         [last change: 2020/08/25 17:12:14]  OKdb4  mysql        [last change: 2020/08/25 17:12:14]  OKdb4  rep_threads  [last change: 2020/08/25 17:12:14]  OKdb4  rep_backlog  [last change: 2020/08/25 17:12:14]  OK: Backlog is nulldb2  ping         [last change: 2020/08/25 17:12:14]  OKdb2  mysql        [last change: 2020/08/25 17:20:52]  OKdb2  rep_threads  [last change: 2020/08/25 17:26:04]  OKdb2  rep_backlog  [last change: 2020/08/25 17:12:14]  OK: Backlog is nulldb3  ping         [last change: 2020/08/25 17:12:14]  OKdb3  mysql        [last change: 2020/08/25 17:12:14]  OKdb3  rep_threads  [last change: 2020/08/25 17:12:14]  OKdb3  rep_backlog  [last change: 2020/08/25 17:12:14]  OK: Backlog is nulldb1  ping         [last change: 2020/08/25 17:12:14]  OKdb1  mysql        [last change: 2020/08/25 17:16:21]  OKdb1  rep_threads  [last change: 2020/08/25 17:12:14]  OKdb1  rep_backlog  [last change: 2020/08/25 17:12:14]  OK: Backlog is null</pre><p>8.在monitor上查看群集状态</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control <span class="keyword">show</span></span><br></pre></td></tr></table></figure><pre>db1(192.168.100.10) master/ONLINE. Roles: writer(192.168.100.12)db2(192.168.100.20) master/ONLINE. Roles: db3(192.168.100.30) slave/ONLINE. Roles: reader(192.168.100.35)db4(192.168.100.40) slave/ONLINE. Roles: reader(192.168.100.34)</pre><p>(*1)关闭SeLinux子安全系统, 让agent访问数据.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure><pre># Warning: agent on host db1 is not reachable# Warning: agent on host db2 is not reachable# Warning: agent on host db3 is not reachable# Warning: agent on host db4 is not reachable</pre><p>(*2)如果出现此状态, 则对所有主机进行时间同步.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">install</span> <span class="selector-tag">ntpdate</span></span><br><span class="line"><span class="selector-tag">ntpdate</span> <span class="selector-tag">ntp1</span><span class="selector-class">.aliyun</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><pre>db1(192.168.100.10) master/AWAITING_RECOVERY. Roles: db2(192.168.100.20) master/AWAITING_RECOVERY. Roles: db3(192.168.100.30) slave/AWAITING_RECOVERY. Roles: db4(192.168.100.40) slave/AWAITING_RECOVERY. Roles: </pre><h4 id="测试MySQL-MMM"><a href="#测试MySQL-MMM" class="headerlink" title="测试MySQL-MMM"></a>测试MySQL-MMM</h4><p>1.故障转移切换<br>(1)停止Master1的MySQL服务</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Master1</span></span><br><span class="line">systemctl <span class="keyword">stop</span> mysqld</span><br><span class="line"></span><br><span class="line"><span class="meta"># monitor</span></span><br><span class="line">mmm_contorl <span class="keyword">show</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 几秒过后</span></span><br><span class="line">mmm_contorl <span class="keyword">show</span></span><br></pre></td></tr></table></figure><p>2.模拟主主故障插入数据测试, 虚拟ip地址漂移, 存在延10秒左右.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># monitor</span></span><br><span class="line">mysql -uAtlas -h192.168.100.12 -p密码</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zang <span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'master'</span>,<span class="string">'this_is_master'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Master2</span></span><br><span class="line">mysql -uroot -p[密码]</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br></pre></td></tr></table></figure><p>3.在monitor中查看群集状态</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> mysqld</span><br><span class="line">mmm_contorl <span class="keyword">show</span> </span><br><span class="line">mmm_contorl <span class="keyword">show</span> </span><br><span class="line">mmm_contorl <span class="keyword">show</span></span><br></pre></td></tr></table></figure><pre># 关闭状态db2(192.168.100.20) master/<font color="red">HARD_OFFLINE</font>. Roles:# 正在恢复db2(192.168.100.20) master/<font color="red">AWAITING_RECOVERY</font>. Roles: # 已恢复在线状态db2(192.168.100.20) master/<font color="red">ONLINE</font>. Roles:</pre><p>4.在Master1中查看数据是否同步</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p[密码]</span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> zang;</span><br></pre></td></tr></table></figure><p>5.模拟主从故障</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Slave1</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">stop mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># monitor</span></span><br><span class="line"><span class="attr">mmm_contorl</span> <span class="string">show</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Slave1</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># monitor</span></span><br><span class="line"><span class="attr">mmm_contorl</span> <span class="string">show</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;MySQL主从复制&quot;&gt;&lt;a href=&quot;#MySQL主从复制&quot; class=&quot;headerlink&quot; title=&quot;MySQL主从复制&quot;&gt;&lt;/a&gt;MySQL主从复制&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;主从复制原理&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/c7e46abc/MySQL复制的工作过程.png&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
Binary log:二进制日志
Relay log:中继日志
I/O thread:I/O线程, 状态必须为开启状态(YES).
SQL thread:SQL语句线程, 状态同样必须为开启状态(YES).

&lt;p&gt;1.在每个事务更新数据完成之前, Master在二进制日志中记录这些改变. 写入二进制日志完成后, Master通知存储引擎提交事务.&lt;/p&gt;
&lt;p&gt;2.Slave将Master的二进制日志复制到其中继日志. 首先, Slave开始一个工作线程-I/O线程, I/O线程在Master上打开一个普通的连接, 然后开始Binlog dump process. Binlog dump process从Master的二进制日志中读取事件, 如果已经跟上Master, 它会睡眠并等待Master产生新的事件. I/O线程将这些事件写入中继日志.&lt;/p&gt;
&lt;p&gt;3.SQL slave thread(SQL从线程)处理该过程的最后一步. SQL线程从中继日志读取事件, 并重放其中的事件而更新Slave的数据, 使其与Master中的数据一致. 只要该线程与I/O线程保持一致, 中继日志通常会位于Os的缓存中, 所以中继日志的开销很小.&lt;/p&gt;
&lt;p&gt;注:复制过程有一个很重要的限制, 即复制在Slave上是串行化的, 也就是说Master上的并行更新操作不能在Slave上并行操作.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="MySQL" scheme="http://www.mengyun.club/tags/MySQL/"/>
    
      <category term="Atlas" scheme="http://www.mengyun.club/tags/Atlas/"/>
    
      <category term="NTP" scheme="http://www.mengyun.club/tags/NTP/"/>
    
  </entry>
  
  <entry>
    <title>Python基础知识与爬虫技术</title>
    <link href="http://www.mengyun.club/post/248475c2/"/>
    <id>http://www.mengyun.club/post/248475c2/</id>
    <published>2020-08-14T12:23:21.000Z</published>
    <updated>2020-09-18T01:11:07.698Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="Python环境安装"><a href="#Python环境安装" class="headerlink" title="Python环境安装"></a>Python环境安装</h1><p>在<a href="http://www.python.org" target="_blank" rel="noopener">官方网站</a>下载Python安装程序<br>Windows x86-64 executable installer</p><table><tr><td><img src="/post/248475c2/Python安装1.png"></td></tr><tr><td><img src="/post/248475c2/Python安装2.png"></td></tr></table><h1 id="Pycharm集成开发环境安装"><a href="#Pycharm集成开发环境安装" class="headerlink" title="Pycharm集成开发环境安装"></a>Pycharm集成开发环境安装</h1><p>在<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">官方网站</a>下载Pycharm安装程序<br>Community Download</p><table><tr><td><img src="/post/248475c2/PyCharm安装.png"></td></tr></table><a id="more"></a><h1 id="Python基础知识"><a href="#Python基础知识" class="headerlink" title="Python基础知识"></a>Python基础知识</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><code>#</code>:单行注释<br><code>&#39;&#39;&#39;</code><br>多行注释<br><code>&#39;&#39;&#39;</code></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量可以是任意的数据类型, 在程序中用一个变量名表示.<br>变量名必须是大小写英文、数字和下划线(-)的组合, 且不能以<font color="red">数字</font>开头.</p><h2 id="核心数据类型"><a href="#核心数据类型" class="headerlink" title="核心数据类型"></a>核心数据类型</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>多行字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"""</span></span><br><span class="line"><span class="string">-"""</span> * <span class="number">60</span>)</span><br></pre></td></tr></table></figure><p>字符串截取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">"1234567890"</span></span><br><span class="line">print(str[下标])</span><br><span class="line">print(str[:终止位置])</span><br><span class="line">print(str[起始位置:终止位置])</span><br><span class="line">print(str[起始位置:])</span><br><span class="line">print(str[起始位置:终止位置:步进值])</span><br></pre></td></tr></table></figure><p>全部转义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">r"\t\b\n\a"</span>)</span><br></pre></td></tr></table></figure><h3 id="列表-List"><a href="#列表-List" class="headerlink" title="列表(List)"></a>列表(List)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [<span class="number">0</span>, <span class="number">0.0</span>, <span class="string">'1'</span>, <span class="string">"2s"</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> values <span class="keyword">in</span> list:</span><br><span class="line">    print(values)</span><br></pre></td></tr></table></figure><h2 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h2><p>显示所有的关键字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line">print(keyword.kwlist)</span><br></pre></td></tr></table></figure><h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(变量名<span class="number">1</span>/值<span class="number">1</span>, 变量名<span class="number">2</span>/值<span class="number">2</span>, 变量名<span class="number">3</span>/值<span class="number">3</span>,...)</span><br></pre></td></tr></table></figure><table>占位符输出<tr><td>%с</td><td>字符</td></tr><tr><td>%s</td><td>通过str()字符串转换来格式化</td></tr><tr><td>%i</td><td>有符号十进制整数</td></tr><tr><td>%d</td><td>有符号十进制整数</td></tr><tr><td>%u</td><td>无符号十进制整数</td></tr><tr><td>%o</td><td>八进制整数</td></tr><tr><td>%x</td><td>十六进制整数(小写字母)</td></tr><tr><td>%X</td><td>十六进制整数(大写字母)</td></tr><tr><td>%е</td><td>索引符号(小写'e')</td></tr><tr><td>%E</td><td>索引符号(大写"E")</td></tr><tr><td>%f</td><td>浮点实数</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单值输出</span></span><br><span class="line">print(<span class="string">"%d"</span> % <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#多值输出</span></span><br><span class="line">print(<span class="string">"%c %s %i %d %u %o %x %X %e %E %f"</span> % (<span class="string">'o'</span>, <span class="string">"other"</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">100</span>, <span class="number">0.01</span>, <span class="number">1.0044</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多值输出-指定符分隔</span></span><br><span class="line">print(<span class="string">'1'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'4'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'3'</span>, sep=<span class="string">"-"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#多语句输出-结尾带指定符</span></span><br><span class="line">print(<span class="string">' |-----'</span>, end=<span class="string">'|\n|0'</span>)</span><br><span class="line">print(<span class="string">'-----'</span>, end=<span class="string">'0|\n+|'</span>)</span><br><span class="line">print(<span class="string">'-----'</span>, end=<span class="string">'|+\n|0'</span>)</span><br><span class="line">print(<span class="string">'-----'</span>, end=<span class="string">'0|\n |'</span>)</span><br><span class="line">print(<span class="string">'-----'</span>, end=<span class="string">'|'</span>)</span><br></pre></td></tr></table></figure><h2 id="格式化输入"><a href="#格式化输入" class="headerlink" title="格式化输入"></a>格式化输入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 值输入</span></span><br><span class="line">变量名 = input(<span class="string">"输入提示信息: "</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类型判断</span></span><br><span class="line">print(type(变量名))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类型转换</span></span><br><span class="line">变量名 = int(值)</span><br></pre></td></tr></table></figure><h2 id="算术、比较、赋值运算符"><a href="#算术、比较、赋值运算符" class="headerlink" title="算术、比较、赋值运算符"></a>算术、比较、赋值运算符</h2><table style="text-align:center"><tr><td colspan="2">算术</td><td colspan="2">比较</td><td colspan="2">赋值</td></tr><tr><td>+</td><td></td><td>==</td><td></td><td>=</td><td></td></tr><tr><td>-</td><td></td><td>!=</td><td></td><td>+=</td><td></td></tr><tr><td>*</td><td></td><td>></td><td></td><td>-=</td><td></td></tr><tr><td>/</td><td></td><td><</td><td></td><td>*=</td><td></td></tr><tr><td>%</td><td></td><td>>=</td><td></td><td>/=</td><td></td></tr><tr><td>**</td><td>幕</td><td><=< td><td></td><td>%=</td><td></td></=<></td></tr><tr><td>//</td><td>向下取整除</td><td></td><td></td><td>**=</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>//=</td><td></td></tr></table><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单条件判断</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># True/非0值/(not None)</span></span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># False/0值/()/None</span></span><br><span class="line">    print(<span class="string">"False"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多条件判断</span></span><br><span class="line">num = <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">50</span> &lt;= num <span class="keyword">and</span> num &lt;= <span class="number">100</span>:  <span class="comment"># 不推荐此写法...</span></span><br><span class="line">    print(<span class="string">"num = %d, 50 &lt;= num &lt;= 100"</span> % num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">50</span> &lt;= num &lt;= <span class="number">100</span>:  <span class="comment"># 推荐此写法...</span></span><br><span class="line">    print(<span class="string">"num = %d, 50 &lt;= num &lt;= 100"</span> % num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="number">20</span> &lt;= num &lt; <span class="number">50</span>:</span><br><span class="line">    print(<span class="string">"num = %d, 20 &lt;= num &lt; 50"</span> % num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="number">0</span> &lt;= num &lt; <span class="number">20</span>:</span><br><span class="line">    print(<span class="string">"num = %d, 0 &lt;= num &lt; 20"</span> % num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"num = %d, num &gt; 100, num &lt; 0"</span> % num)</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p><a href="https://docs.python.org/3/library/stdtypes.html#range" target="_blank" rel="noopener">range(): 官方资料</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(起始值, 结束值, 步进值):  <span class="comment">#不包含结束值</span></span><br><span class="line">    print(i, end=<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">str = <span class="string">"abcde"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">    print(i, end=<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># while循环</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; 结束值:  <span class="comment">#不包含结束值</span></span><br><span class="line">    print(i, end=<span class="string">'\t'</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'\n不满足条件时, 退出循环前执行. i:'</span>, i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fow+while循环</span></span><br><span class="line">print(<span class="string">'-'</span> * <span class="number">110</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        print(<span class="string">'%d * %d = %d'</span> % (i, j, i*j), end=<span class="string">'\t'</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print()</span><br><span class="line">print(<span class="string">'-'</span> * <span class="number">110</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># break、continue、pass</span></span><br><span class="line"><span class="comment"># pass用于占位</span></span><br></pre></td></tr></table></figure><h2 id="引入库"><a href="#引入库" class="headerlink" title="引入库"></a>引入库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引入随机库</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储随机数</span></span><br><span class="line">x = random.randint(下限, 上限)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Python环境安装&quot;&gt;&lt;a href=&quot;#Python环境安装&quot; class=&quot;headerlink&quot; title=&quot;Python环境安装&quot;&gt;&lt;/a&gt;Python环境安装&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;http://www.python.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方网站&lt;/a&gt;下载Python安装程序&lt;br&gt;Windows x86-64 executable installer&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/248475c2/Python安装1.png&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/248475c2/Python安装2.png&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h1 id=&quot;Pycharm集成开发环境安装&quot;&gt;&lt;a href=&quot;#Pycharm集成开发环境安装&quot; class=&quot;headerlink&quot; title=&quot;Pycharm集成开发环境安装&quot;&gt;&lt;/a&gt;Pycharm集成开发环境安装&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方网站&lt;/a&gt;下载Pycharm安装程序&lt;br&gt;Community Download&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/248475c2/PyCharm安装.png&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://www.mengyun.club/categories/Python/"/>
    
    
      <category term="Python" scheme="http://www.mengyun.club/tags/Python/"/>
    
      <category term="Pycharm" scheme="http://www.mengyun.club/tags/Pycharm/"/>
    
  </entry>
  
  <entry>
    <title>KVM虚拟化平台</title>
    <link href="http://www.mengyun.club/post/fbec7778/"/>
    <id>http://www.mengyun.club/post/fbec7778/</id>
    <published>2020-08-14T07:11:21.000Z</published>
    <updated>2020-09-18T01:24:55.197Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="KVM概述"><a href="#KVM概述" class="headerlink" title="KVM概述"></a>KVM概述</h1><h2 id="什么是虚拟化"><a href="#什么是虚拟化" class="headerlink" title="什么是虚拟化"></a>什么是虚拟化</h2><p>虚拟化就是把硬件资源从物理方式转变为逻辑方式, 打破原有物理结构, 使用户可以灵活管理这些资源, 并且允许1台物理机上同时运行多个操作系统, 以实现资源利用率最大化和灵活管理的一项技术.</p><h2 id="虚拟化的优势"><a href="#虚拟化的优势" class="headerlink" title="虚拟化的优势"></a>虚拟化的优势</h2><p>1.减少服务器数量, 降低硬件采购成本.<br>2.资源利用率最大化<br>3.降低机房空间、散热、用电消耗的成本<br>4.硬件资源可动态调整, 提高企业IT业务灵活性.<br>5.高可用性<br>6.在不中断服务的情况下进行物理硬件调整<br>7.降低管理成本<br>8.具备更高效的灾备能力</p><h2 id="KVM虚拟化"><a href="#KVM虚拟化" class="headerlink" title="KVM虚拟化"></a>KVM虚拟化</h2><p>KVM自Linux2.6.20版本后就直接整合到Linux内核中, 它依托CPU虚拟化指令集(如Inter-VT、AMD-V)实现高性能的虚拟化支持. 由于与Linux内核高度整合, 因此在性能、安全性、兼容性、稳定性上都有很好的表现.</p><table><tr><td><img src="/post/fbec7778/KVM虚拟化架构.png"></td></tr></table><a id="more"></a><h1 id="搭建KVM虚拟化平台"><a href="#搭建KVM虚拟化平台" class="headerlink" title="搭建KVM虚拟化平台"></a>搭建KVM虚拟化平台</h1><h2 id="KVM环境搭建"><a href="#KVM环境搭建" class="headerlink" title="KVM环境搭建"></a>KVM环境搭建</h2><p>1.关闭虚拟机, 并在设置中开启虚拟化.</p><table><tr><td><img src="/post/fbec7778/开启虚拟化.png"></td></tr></table><p>2.检测系统是否已经支持虚拟化, 有条目表示已支持.</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo | <span class="type">egrep</span> 'vmx|<span class="type">svm</span>' | <span class="type">wc</span> -l</span><br></pre></td></tr></table></figure><p>3.安装KVM环境后并重启加载KVM相关模块</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> qemu-kvm qemu-kvm-tools</span><br><span class="line">yum -y <span class="keyword">install</span> libvirt python-virtinst libvirt-python virt-<span class="keyword">install</span> virt-manager</span><br><span class="line"><span class="keyword">shutdown</span> -r <span class="keyword">now</span></span><br></pre></td></tr></table></figure><p><code>qemu-kvm qemu-kvm-tools</code>:虚拟操作系统模拟器加速模块(KVM核心)<br><code>libvirt</code>:必须要装的核心工具<br><code>virt-manager</code>:虚拟机图形管理工具<br><code>bridge-utils</code>:虚拟机与外界通信的命令管理工具<br><code>virt-install</code>:虚拟机安装工具<br><code>pyhon-virtinst</code>::包含python模块和工具(virt-install，virt-clone和virt-image)</p><p>4.查看KVM模块是否被正确加载</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod <span class="string">| grep kvm</span></span><br></pre></td></tr></table></figure><pre>kvm_amd              2176426  0 kvm                   578518  1 kvm_amdirqbypass              13503  1 kvm</pre><p>5.开启KVM服务, 并设置开机自启动.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> libvirtd</span><br><span class="line">systemctl <span class="keyword">enable</span> libvirtd</span><br></pre></td></tr></table></figure><p>6.查看KVM服务状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">status</span> libvirtd</span><br><span class="line">systemctl <span class="built_in">is</span>-enabled libvirtd</span><br></pre></td></tr></table></figure><h2 id="设置KVM网络"><a href="#设置KVM网络" class="headerlink" title="设置KVM网络"></a>设置KVM网络</h2><p>1.查看虚拟机网卡信息, 确定名称后复制文件.</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ip</span> <span class="string">addr</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">/etc/sysconfig/network-scripts/</span></span><br><span class="line"><span class="attr">cp</span> <span class="string">ifcfg-ens33 ifcfg-br0</span></span><br></pre></td></tr></table></figure><p>2.修改ens33网卡配置</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ifcfg-e<span class="symbol">ns33</span></span><br></pre></td></tr></table></figure><pre>TYPE=<font color="red">Ethernet</font>PROXY_METHOD=noneBROWSER_ONLY=no<font color="green">#BOOTPROTO=none#DEFROUTE=yes</font>IPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=eb242f93-3890-4f77-b15a-12589b9e7badDEVICE=ens33ONBOOT=yes<font color="green">#IPADDR=192.168.100.60#PREFIX=24#GATEWAY=192.168.100.2#DNS1=192.168.100.2</font><font color="red">BRIDGE=br0NM_CONTROLLED=no</font></pre><p>3.修改桥接网卡配置</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ifcfg-<span class="keyword">br</span><span class="number">0</span></span><br><span class="line">sed -i <span class="string">"/UUID/c UUID=`uuidgen`"</span> ifcfg-<span class="keyword">br</span><span class="number">0</span></span><br></pre></td></tr></table></figure><pre>TYPE=<font color="red">Bridge</font>PROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=<font color="red">static</font>DEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=<font color="red">br0</font>UUID=03983d4e-3d8d-4212-aa90-7043a259ff6bDEVICE=<font color="red">br0</font>ONBOOT=yesIPADDR=<font color="red">192.168.127.60</font>PREFIX=24GATEWAY=<font color="red">192.168.127.1</font>DNS1=<font color="red">192.168.127.1</font></pre><p>4.重启网络服务</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop NetworkManager</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart network</span></span><br></pre></td></tr></table></figure><p>5.查看网络配置信息</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brctl </span>show</span><br></pre></td></tr></table></figure><pre>ridge name    bridge id            STP enabled    interfaces<font color="red">br0</font>           8000.000c293a6592    no             <font color="red">ens33</font>virbr0        8000.525400c83c0d    yes            virbr0-nic</pre><h2 id="KVM创建管理"><a href="#KVM创建管理" class="headerlink" title="KVM创建管理"></a>KVM创建管理</h2><p>打开KVM图形化管理界面</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">virt-manager</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="/post/fbec7778/KVM管理.png"></td></tr></table><h3 id="1-创建镜像存储池"><a href="#1-创建镜像存储池" class="headerlink" title="1.创建镜像存储池"></a>1.创建镜像存储池</h3><table><tr><td><img src="/post/fbec7778/KVM管理-镜像池创建.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-镜像池创建2.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-镜像池创建3.png"></td></tr></table><h3 id="2-用WinSCP软件将镜像文件上传至指定目录下"><a href="#2-用WinSCP软件将镜像文件上传至指定目录下" class="headerlink" title="2.用WinSCP软件将镜像文件上传至指定目录下"></a>2.用WinSCP软件将镜像文件上传至指定目录下</h3><table><tr><td><img src="/post/fbec7778/KVM-WinSCP连接.png"></td></tr><tr><td><img src="/post/fbec7778/KVM-WinSCP连接2.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-镜像池创建4.png"></td></tr></table><h3 id="3-创建存储池"><a href="#3-创建存储池" class="headerlink" title="3.创建存储池"></a>3.创建存储池</h3><table>注: 在创建该存储池时请保证磁盘容量足够大, 以便存储新建的虚拟机.<tr><td><img src="/post/fbec7778/KVM管理-虚拟机池创建.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机池创建2.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机池创建3.png"></td></tr></table><h3 id="4-创建存储卷"><a href="#4-创建存储卷" class="headerlink" title="4.创建存储卷"></a>4.创建存储卷</h3><table><tr><td><img src="/post/fbec7778/KVM管理-虚拟机池创建4.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-存储卷创建.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-存储卷创建2.png"></td></tr></table><h3 id="5-创建虚拟机"><a href="#5-创建虚拟机" class="headerlink" title="5.创建虚拟机"></a>5.创建虚拟机</h3><talbe><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建2.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建3.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建4.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建5.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建6.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建7.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建8.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建9.png"></td></tr><tr><td><img src="/post/fbec7778/KVM管理-虚拟机创建10.png"></td></tr><div class="note info"><p>可用<code>cat /proc/scsi/scsi</code>命令查看该主机是否为虚拟机</p></div><h2 id="KVM功能管理"><a href="#KVM功能管理" class="headerlink" title="KVM功能管理"></a>KVM功能管理</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看命令帮助</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">-h</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看KVM的配置文件存放目录</span></span><br><span class="line"><span class="attr">ls</span> <span class="string">/etc/libvirt/qemu/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看虚拟机状态</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">list --all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚拟机关机与开机</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">shutdown 虚拟机名</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">start 虚拟机名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制实例系统关闭电源</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">destroy 虚拟机名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过配置文件启动虚拟机系统实例</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">create /etc/libvirt/qemu/虚拟机名.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚拟机挂起与恢复</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">suspend 虚拟机名</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">resume 虚拟机名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出虚拟机配置</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">dumpxml 虚拟机名 &gt; /etc/libvirt/qemu/配置文件名2.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置虚拟机实例伴随宿主机自动启动</span></span><br><span class="line"><span class="attr">virsh</span> <span class="string">autostart 虚拟机名</span></span><br></pre></td></tr></table></figure><div class="note info"><p>上述命令将创建/etc/libvirt/qemu/autostart/目录, 目录内容为开机自动启动的系统.</p></div><p>虚拟机的删除与添加</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh <span class="keyword">shutdown</span> test01</span><br><span class="line">virsh undefine test01</span><br><span class="line"><span class="keyword">ls</span> <span class="string">/etc/libvirt/qemu/</span></span><br><span class="line">virsh list <span class="params">--all</span></span><br></pre></td></tr></table></figure><div class="note info"><p>配置文件会被删除, 但是磁盘文件不会被删除.</p></div><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/libvirt/qemu</span><br><span class="line">mv 虚拟机名.<span class="keyword">xml</span> <span class="title">虚拟机名.xml</span></span><br><span class="line">virsh define 虚拟机名.xml</span><br><span class="line">virsh list --all</span><br></pre></td></tr></table></figure><h2 id="KVM文件管理"><a href="#KVM文件管理" class="headerlink" title="KVM文件管理"></a>KVM文件管理</h2><h3 id="磁盘格式转换"><a href="#磁盘格式转换" class="headerlink" title="磁盘格式转换"></a>磁盘格式转换</h3><p>1.转换格式</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qemu-img <span class="builtin-name">info</span> /路径/虚拟机名.img</span><br><span class="line">virsh shutdown 虚拟机名</span><br><span class="line"></span><br><span class="line">qemu-img convert -f<span class="built_in"> raw </span>/路径/虚拟机名.img -O qcow2 /路径/虚拟机名.qcow2</span><br></pre></td></tr></table></figure><pre>image: /data/centos7/CentOS7_10_kvm.imgfile format: <font color="red">raw</font>virtual size: 20G (21474836480 bytes)disk size: 20G</pre><p>2.编辑配置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh <span class="builtin-name">edit</span> 虚拟机名</span><br></pre></td></tr></table></figure><pre>  &lt;disk type='file' device='disk'>      &lt;driver name='qemu' type='<font color="red">qcow2</font>'/>      &lt;source file='/data/centos7/CentOS7_10_kvm.<font color="red">qcow2</font>'/>      &lt;target dev='vda' bus='virtio'/>      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/>  &lt;/disk></pre><h3 id="虚拟机克隆"><a href="#虚拟机克隆" class="headerlink" title="虚拟机克隆"></a>虚拟机克隆</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virsh list --all</span><br><span class="line">virt-<span class="keyword">clone</span> <span class="title">-o</span> 虚拟机名 -n 克隆虚拟机名 -f /data/Centos7/虚拟机名.qcow2</span><br><span class="line">virsh <span class="literal">start</span> 虚拟机名</span><br></pre></td></tr></table></figure><h3 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建快照</span></span><br><span class="line">virsh snapshot-<span class="keyword">create</span> 虚拟机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看虚拟机快照版本信息</span></span><br><span class="line">virsh <span class="keyword">snapshot</span>-<span class="keyword">current</span> 虚拟机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看快照信息</span></span><br><span class="line">virsh <span class="keyword">snapshot</span>-<span class="keyword">list</span> 虚拟机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复虚拟机状态至指定快照</span></span><br><span class="line">virsh <span class="keyword">snapshot</span>-revert 虚拟机名 快照名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除快照</span></span><br><span class="line">virsh <span class="keyword">snapshot</span>-<span class="keyword">delete</span> 虚拟机名 快照名</span><br></pre></td></tr></table></figure></talbe>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;KVM概述&quot;&gt;&lt;a href=&quot;#KVM概述&quot; class=&quot;headerlink&quot; title=&quot;KVM概述&quot;&gt;&lt;/a&gt;KVM概述&lt;/h1&gt;&lt;h2 id=&quot;什么是虚拟化&quot;&gt;&lt;a href=&quot;#什么是虚拟化&quot; class=&quot;headerlink&quot; title=&quot;什么是虚拟化&quot;&gt;&lt;/a&gt;什么是虚拟化&lt;/h2&gt;&lt;p&gt;虚拟化就是把硬件资源从物理方式转变为逻辑方式, 打破原有物理结构, 使用户可以灵活管理这些资源, 并且允许1台物理机上同时运行多个操作系统, 以实现资源利用率最大化和灵活管理的一项技术.&lt;/p&gt;
&lt;h2 id=&quot;虚拟化的优势&quot;&gt;&lt;a href=&quot;#虚拟化的优势&quot; class=&quot;headerlink&quot; title=&quot;虚拟化的优势&quot;&gt;&lt;/a&gt;虚拟化的优势&lt;/h2&gt;&lt;p&gt;1.减少服务器数量, 降低硬件采购成本.&lt;br&gt;2.资源利用率最大化&lt;br&gt;3.降低机房空间、散热、用电消耗的成本&lt;br&gt;4.硬件资源可动态调整, 提高企业IT业务灵活性.&lt;br&gt;5.高可用性&lt;br&gt;6.在不中断服务的情况下进行物理硬件调整&lt;br&gt;7.降低管理成本&lt;br&gt;8.具备更高效的灾备能力&lt;/p&gt;
&lt;h2 id=&quot;KVM虚拟化&quot;&gt;&lt;a href=&quot;#KVM虚拟化&quot; class=&quot;headerlink&quot; title=&quot;KVM虚拟化&quot;&gt;&lt;/a&gt;KVM虚拟化&lt;/h2&gt;&lt;p&gt;KVM自Linux2.6.20版本后就直接整合到Linux内核中, 它依托CPU虚拟化指令集(如Inter-VT、AMD-V)实现高性能的虚拟化支持. 由于与Linux内核高度整合, 因此在性能、安全性、兼容性、稳定性上都有很好的表现.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/fbec7778/KVM虚拟化架构.png&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="KVM" scheme="http://www.mengyun.club/tags/KVM/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库基础</title>
    <link href="http://www.mengyun.club/post/2c642c75/"/>
    <id>http://www.mengyun.club/post/2c642c75/</id>
    <published>2020-08-13T07:02:47.000Z</published>
    <updated>2020-09-18T01:16:38.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="数据库简介"><a href="#数据库简介" class="headerlink" title="数据库简介"></a>数据库简介</h1><h2 id="使用数据库的必要性"><a href="#使用数据库的必要性" class="headerlink" title="使用数据库的必要性"></a>使用数据库的必要性</h2><p>可以结构化存储大量的数据信息, 方便用户进行有效的检索和访问.<br>可以有效地保持数据信息的一致性、完整性, 降低数据冗余.<br>可以满足应用的共享和安全方面的要求</p><h2 id="经典数据模型"><a href="#经典数据模型" class="headerlink" title="经典数据模型"></a>经典数据模型</h2><p>网状模型<br>层次模型<br>关系模型</p><h2 id="当今主流数据库"><a href="#当今主流数据库" class="headerlink" title="当今主流数据库"></a>当今主流数据库</h2><table style="text-align:center;"><tr><td colspan="2">关系数据库</td></tr><tr><td colspan="2">SQL Servel、Oracle、IBM DB2、MySQL</td></tr><tr><td colspan="2">非关系数据库</td></tr><tr><td colspan="2">Memcached、Redis、MongoDB、HBase</td></tr><tr><td>优点</td><td>数据库高并发读写的需求对海量数据高效率存储与访问数据库的高扩展性与高可用性的需求</td></tr></table><a id="more"></a><h1 id="MySQL服务基础"><a href="#MySQL服务基础" class="headerlink" title="MySQL服务基础"></a>MySQL服务基础</h1><h2 id="使用二进制安装MySQL-5-7-30"><a href="#使用二进制安装MySQL-5-7-30" class="headerlink" title="使用二进制安装MySQL-5.7.30"></a>使用二进制安装MySQL-5.7.30</h2><p>1.下载安装包<br><a href="https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz" target="_blank" rel="noopener">mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz</a></p><p>2.通过WinSCP上传安装包</p><table><tr><td><img src="/post/2c642c75/WinSCP连接.png"></td></tr><tr><td><img src="/post/2c642c75/WinSCP连接2.png"></td></tr></table><p>3.解压安装包并重命名</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">tar zxf mysql<span class="number">-5.7</span><span class="number">.30</span>-linux-glibc2<span class="number">.12</span>-x86_64.tar.gz</span><br><span class="line">mv mysql<span class="number">-5.7</span><span class="number">.30</span>-linux-glibc2<span class="number">.12</span>-x86_64 ../mysql</span><br></pre></td></tr></table></figure><p>4.创建运行用户和数据目录, 赋予权限.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -M -s <span class="regexp">/sbin/</span>nologin mysql -g mysql</span><br><span class="line">mkdir -p <span class="regexp">/data/</span>mysql  </span><br><span class="line">chown -R mysql <span class="regexp">/data/</span>mysql/</span><br><span class="line">chown -R <span class="string">mysql:</span>mysql <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span></span><br></pre></td></tr></table></figure><p>5.建立配置文件<br><code>vim /etc/my.cnf</code></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[client]    </span><br><span class="line"><span class="attr">port</span>        = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span>      = /data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]    </span><br><span class="line"><span class="attr">port</span>        = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span>      = /data/mysql/mysql.sock</span><br><span class="line"><span class="attr">user</span> = mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">basedir</span> = /usr/local/mysql</span><br><span class="line"><span class="attr">datadir</span> = /data/mysql</span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"><span class="attr">key_buffer_size</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">1024</span>M</span><br><span class="line"><span class="attr">table_open_cache</span> = <span class="number">128</span></span><br><span class="line"><span class="attr">sort_buffer_size</span> = <span class="number">768</span>K</span><br><span class="line"><span class="attr">net_buffer_length</span> = <span class="number">8</span>K</span><br><span class="line"><span class="attr">read_buffer_size</span> = <span class="number">768</span>K</span><br><span class="line"><span class="attr">read_rnd_buffer_size</span> = <span class="number">512</span>K</span><br><span class="line"><span class="attr">myisam_sort_buffer_size</span> = <span class="number">8</span>M</span><br><span class="line"><span class="attr">query_cache_size</span> = <span class="number">16</span>M</span><br><span class="line"><span class="attr">tmp_table_size</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">performance_schema_max_table_instances</span> = <span class="number">1000</span></span><br><span class="line"><span class="attr">explicit_defaults_for_timestamp</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment">#skip-networking</span></span><br><span class="line"><span class="attr">max_connect_errors</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">open_files_limit</span> = <span class="number">65535</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log_bin=mysql-bin</span></span><br><span class="line"><span class="attr">binlog_format=mixed</span></span><br><span class="line"><span class="attr">server_id</span>   = <span class="number">232</span></span><br><span class="line"><span class="attr">expire_logs_days</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">early-plugin-load</span> = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default_storage_engine</span> = InnoDB</span><br><span class="line"><span class="attr">character_set_server=utf8</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span> = <span class="number">128</span>M</span><br><span class="line"><span class="attr">innodb_log_file_size</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">innodb_log_buffer_size</span> = <span class="number">8</span>M</span><br><span class="line"><span class="attr">innodb_flush_log_at_trx_commit</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">innodb_lock_wait_timeout</span> = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">16</span>M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line"><span class="attr">key_buffer_size</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">sort_buffer_size</span> = <span class="number">768</span>K</span><br><span class="line"><span class="attr">read_buffer</span> = <span class="number">2</span>M</span><br><span class="line"><span class="attr">write_buffer</span> = <span class="number">2</span>M</span><br></pre></td></tr></table></figure><p>6.初始化数据库</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqld --initialize <span class="attribute">--user</span>=mysql <span class="attribute">--basedir</span>=/usr/local/mysql <span class="attribute">--datadir</span>=/data/mysql</span><br></pre></td></tr></table></figure><p>7.添加mysql到环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"export PATH=<span class="variable">$PATH</span>:/usr/local/mysql/bin"</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>8.添加mysqld到系统服务</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span></span><br><span class="line">cp support-files<span class="regexp">/mysql.server /</span>etc<span class="regexp">/rc.d/</span>init.d/mysqld                               </span><br><span class="line">chmod +x <span class="regexp">/etc/</span>rc.d<span class="regexp">/init.d/</span>mysqld</span><br></pre></td></tr></table></figure><p>9.将mysql添加为systemd标准服务<br><code>vim /lib/systemd/system/mysqld.service</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=mysqld</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/etc/rc.d/init.d/mysqld start</span><br><span class="line"><span class="attr">ExecReload</span>=/etc/rc.d/init.d/mysqld restart</span><br><span class="line"><span class="attr">ExecStop</span>=/etc/rc.d/init.d/mysqld stop</span><br><span class="line"></span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload </span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable mysqld</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start mysqld</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-lnt | grep 3306</span></span><br></pre></td></tr></table></figure><h2 id="Linux访问MySQL数据库"><a href="#Linux访问MySQL数据库" class="headerlink" title="Linux访问MySQL数据库"></a>Linux访问MySQL数据库</h2><p>1.登录MySQL</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -u root -p</span><br><span class="line">Enter password: <span class="comment">#输入初始化数据库时设置root用户的密码</span></span><br><span class="line">set password=<span class="string">'root密码'</span>; <span class="comment">#重设root密码</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">mysqladmin</span> -u root -p password <span class="string">'更改root密码'</span></span><br><span class="line">Enter password: <span class="comment">#原root用户的密码</span></span><br></pre></td></tr></table></figure><p>2.远端登录MySQL</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">tcp</span>/<span class="selector-tag">ip</span>登录(本机, 远端)</span><br><span class="line"><span class="selector-tag">mysql</span> <span class="selector-tag">-u</span> <span class="selector-tag">root</span> <span class="selector-tag">-p</span><span class="selector-attr">[root密码]</span> <span class="selector-tag">-P</span> 端口号 <span class="selector-tag">-h</span> <span class="selector-tag">IP</span>地址</span><br><span class="line"></span><br><span class="line"># <span class="selector-tag">socket</span>登录(本机)</span><br><span class="line"><span class="selector-tag">mysql</span> <span class="selector-tag">-u</span> <span class="selector-tag">root</span> <span class="selector-tag">-p</span><span class="selector-attr">[root密码]</span> <span class="selector-tag">-S</span> <span class="selector-tag">sock</span>文件目录</span><br></pre></td></tr></table></figure><p>3.使用Navicat连接数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加用户权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> 数据库名.数据表名 <span class="keyword">to</span> <span class="string">'用户名'</span>@<span class="string">'ip地址'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>; </span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销用户权限</span></span><br><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库名.数据表名 <span class="keyword">from</span> <span class="string">'用户名'</span>@<span class="string">'ip地址'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户权限</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">'用户名'</span>@<span class="string">'ip地址'</span>;</span><br><span class="line"></span><br><span class="line">quit;/exit;</span><br></pre></td></tr></table></figure><h1 id="基本操作命令"><a href="#基本操作命令" class="headerlink" title="基本操作命令"></a>基本操作命令</h1><h2 id="DDL-Data-Definition-Language"><a href="#DDL-Data-Definition-Language" class="headerlink" title="DDL(Data Definition Language)"></a>DDL(Data Definition Language)</h2><p>数据定义语言:CREATE、DROP、ALTER.</p><h2 id="DML-Data-Manipulation-Language"><a href="#DML-Data-Manipulation-Language" class="headerlink" title="DML(Data Manipulation Language)"></a>DML(Data Manipulation Language)</h2><p>数据操纵语言:INSERT、UPDATE、DELETE.</p><h2 id="DQL-Data-Query-Language"><a href="#DQL-Data-Query-Language" class="headerlink" title="DQL(Data Query Language)"></a>DQL(Data Query Language)</h2><p>数据查询语言:SELECT … FROM … WHERE</p><h2 id="DCL-Data-Control-Language"><a href="#DCL-Data-Control-Language" class="headerlink" title="DCL(Data Control Language)"></a>DCL(Data Control Language)</h2><p>数据控制语言:GRANT、REVOKE.</p><h2 id="TCL-Thing-Control-Language"><a href="#TCL-Thing-Control-Language" class="headerlink" title="TCL(Thing Control Language)"></a>TCL(Thing Control Language)</h2><p>事务控制语言:COMMIT、ROLLBACK、SAVEPOINT.</p><h1 id="使用MySQL数据库"><a href="#使用MySQL数据库" class="headerlink" title="使用MySQL数据库"></a>使用MySQL数据库</h1><h2 id="查看数据库结构"><a href="#查看数据库结构" class="headerlink" title="查看数据库结构"></a>查看数据库结构</h2><p>1.查看当前服务器下所包含的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p>2.查看当前使用的库下所包含的数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>3.查看数据表的结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">describe</span> <span class="string">`user`</span>;</span><br></pre></td></tr></table></figure><h2 id="查看字符编码格式"><a href="#查看字符编码格式" class="headerlink" title="查看字符编码格式"></a>查看字符编码格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据库中所有的默认字符编码格式</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'character%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据库的默认字符编码格式</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据表的默认字符编码格式</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 数据库名.数据表名;</span><br></pre></td></tr></table></figure><h2 id="指定字符编码格式"><a href="#指定字符编码格式" class="headerlink" title="指定字符编码格式"></a>指定字符编码格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置字符编码格式, 下次登录MySQL时失效.</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库指定</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名 <span class="built_in">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改数据库结构</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名 <span class="keyword">charset</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表指定</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    ...</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表结构</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据库名.数据表名 <span class="keyword">convert</span> <span class="keyword">to</span> <span class="keyword">charset</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改MySQL配置文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">  <span class="comment"># ---version: 5.6---</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  default-character-<span class="keyword">set</span>=utf8</span><br><span class="line"></span><br><span class="line">  <span class="comment"># ---version: 5.7---</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  character_set_server=utf8</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h2 id="查看存储引擎"><a href="#查看存储引擎" class="headerlink" title="查看存储引擎"></a>查看存储引擎</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看字段</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名 <span class="keyword">where</span> <span class="string">`name`</span>=<span class="string">'数据表名'</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看信息</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br></pre></td></tr></table></figure><h2 id="指定存储引擎"><a href="#指定存储引擎" class="headerlink" title="指定存储引擎"></a>指定存储引擎</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建表指定</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    ...</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表结构</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据库名.数据表名 <span class="keyword">engine</span>=<span class="keyword">InnoDB</span>;</span><br></pre></td></tr></table></figure><h2 id="创建及删除库和表"><a href="#创建及删除库和表" class="headerlink" title="创建及删除库和表"></a>创建及删除库和表</h2><table style="text-align:center;"><tr><td>建库规范:</td><td>建表规范:</td></tr><tr><td>1.库名不能有大写字母</td><td>1.表名小写</td></tr><tr><td>2.建库要加字符集</td><td>2.注意字符集和存储引擎</td></tr><tr><td>3.库名不能是数字开头</td><td>3.表名不能是数字开头</td></tr><tr><td>4.库名要和业务相关</td><td>4.表名和业务有关</td></tr><tr><td></td><td>5.选择合适的数据类型</td></tr><tr><td></td><td>6.每个列都要有注释</td></tr><tr><td></td><td>7.每个列设置为非空, 无法保证非空, 用0来填充.</td></tr></table><p>1.创建新的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br></pre></td></tr></table></figure><p>2.创建新的数据表<br><a href>数据类型:官方资料</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span> <span class="keyword">COMMENT</span> <span class="string">'字段注释'</span>,</span><br><span class="line">    列名 类型 PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    列名 类型 <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>3.删除数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 数据库名.数据表;</span><br></pre></td></tr></table></figure><p>4.删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;</span><br></pre></td></tr></table></figure><h2 id="查询、修改、添加、删除数据"><a href="#查询、修改、添加、删除数据" class="headerlink" title="查询、修改、添加、删除数据"></a>查询、修改、添加、删除数据</h2><p>1.插入数据记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单条插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 数据库名.数据表名 <span class="keyword">values</span>(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 数据库名.数据表名(列名<span class="number">1</span>, 列名<span class="number">2</span>, 列名<span class="number">3</span>,...) <span class="keyword">values</span>(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多条插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 数据库名.数据表名(列名<span class="number">1</span>, 列名<span class="number">2</span>, 列名<span class="number">3</span>,...)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...),</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...)</span><br><span class="line">    ...;</span><br></pre></td></tr></table></figure><p>2.查询数据记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 数据库名.数据表名;</span><br></pre></td></tr></table></figure><p>3.修改数据记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 数据表名 <span class="keyword">set</span> 列名<span class="number">1</span>=值<span class="number">1</span>, 列名<span class="number">2</span>=值<span class="number">2</span>,... <span class="keyword">where</span> 条件表达式;</span><br></pre></td></tr></table></figure><p>4.删除数据记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 数据表名 <span class="keyword">where</span> 条件表达式;</span><br></pre></td></tr></table></figure><h1 id="MySQL索引与事务"><a href="#MySQL索引与事务" class="headerlink" title="MySQL索引与事务"></a>MySQL索引与事务</h1><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>索引是一种特殊的文件, 包含着对数据表中所有记录的引用指针.就是为了提高表的搜索效率而对某些字段中的值建立的目录.</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>1.设置了合适的索引之后, 数据库利用各种快速的定位技术, 可以大大加快数据的查询速度, 这也是创建索引最主要的原因.<br>2.当表很大时, 或者查询涉及多个表时, 使用索引可使查询速度加快成干倍.<br>3.可以降低数据库的IO成本, 并且索引还可以降低数据库的排序成本.<br>4.通过创建唯一性索引, 可以保证数据库表中每一行数据的唯一性.<br>5.可以加快表和表之间的连接<br>6.在使用分组和排序进行数据查询时, 可以显著减少查询中分组和排序的时间.</p><p>建立索引的目的是加快对表中记录的查找或排序. 为表设置索引要付出代价:<br>一: 增加了数据库的存储空间<br>二: 在插入和修改数据时要花费较多的时间(以为索引也要随之变动)</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.普通索引<br>2.唯一性索引<br>3.主键索引<br>4.全文索引<br>5.单列索引与多列索引</p><h2 id="创建原则依据"><a href="#创建原则依据" class="headerlink" title="创建原则依据"></a>创建原则依据</h2><p>1.表的主键、外键必须有索引.<br>2.数据量超过300行的表应该有索引<br>4.唯一性太差的字段不适合建立索引<br>5.更新太频繁的字段不适合创建索引<br>6.经常出现在Where中的字段, 特别是大表的字段, 应该建立索引.<br>7.索引应该建在选择性的字段上. 如果很少的字段拥有相同值, 即有很多独特值, 则选择性很高.<br>8.索引应该建在小字段上, 对于大的文本字段甚至超长字段, 不要建索引.</p><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看该表上的索引</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> 数据表名</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">keys</span> <span class="keyword">from</span> 数据表名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解释当前查询的SQL语句</span></span><br><span class="line"><span class="keyword">explain</span> 查询<span class="keyword">SQL</span>语句 <span class="keyword">limit</span> 从多少条后开始查询,查询条数</span><br></pre></td></tr></table></figure><table><tr><td><img src="/post/2c642c75/解释语句.png"></td></tr></table><p>1.普通索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 数据表名 (列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据表名 <span class="keyword">add</span> <span class="keyword">index</span> 索引名(列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><p>2.创建唯一性索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 数据表名 (列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><p>3.创建主键索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    ...,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(列名<span class="number">1</span>, 列名<span class="number">2</span>,...)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><p>4.全文索引<br>只有使用MyISAM类型表的时候有效(MyISAM是默认的表类型)<br>全文索引可以建立在TEXT、CHAR或者VARCHAR类型的字段或者字段组合上.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="keyword">document</span> <span class="built_in">TEXT</span>,</span><br><span class="line">    ...,</span><br><span class="line">    FULLTEXT(列名<span class="number">1</span>, 列名<span class="number">2</span>,...)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据表名 <span class="keyword">add</span> fulltext(列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><p>5.多列索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 数据表名 (列名<span class="number">1</span>, 列名<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap <span class="attribute">--defaults-file</span>=/etc/my.cnf <span class="attribute">--concurrency</span>=10 <span class="attribute">--iterations</span>=1 <span class="attribute">--create-schema</span>=<span class="string">'数据库名'</span> <span class="attribute">--query</span>=<span class="string">"select * from salaries where emp_no='54329'"</span> <span class="attribute">engine</span>=innodb <span class="attribute">--number-of-queries</span>=查询数量 -u[用户名] -p[密码] -verbose</span><br></pre></td></tr></table></figure><h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 数据表名;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据表名 <span class="keyword">drop</span> <span class="keyword">index</span> 索引名;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>事务是一种机制\一个操作序列, 包含了一组数据库操作命令, 并且把所有的命令作为一个整体一起向系统提交或撤销操作请求, 即这一组数据库命令要么都执行, 要么都不执行. </p><p>事务是一个不可分割的工作逻辑单元, 在数据库系统上执行并发操作时, 事务是最小的控制单元. </p><h3 id="ACID特性"><a href="#ACID特性" class="headerlink" title="ACID特性"></a>ACID特性</h3><p>事务具体有四个特性:<br>原子性: 事务是一个完整的操作, 各元素是不可分的, 即原子的. 事务中的所有元素必须作为一个整体提交或回滚, 如果事务中的任何元素失败, 则整个事务将失败.</p><p>一致性: 当事务完成时, 数据必须处于一致状态; 在事务开始之前, 数据库中存储的数据处于一致状态; 在正在进行的事务中, 数据可能处于不一致的状态; 当事务成功完成时, 数据必须再次回到已知的一致状态.</p><p>隔离性: 对数据进行修改的所有并发事务是彼此隔离的, 这表明事务必须是独立的, 它不应以任何方式依赖于或影响其他事务. 修改数据的事务可以在另一个使用相同数据的事务开始之前访问这些数据, 或者在另一个使用相同数据的事务结束之后访问这些数据.</p><p>持久性: 指不管系统是否发生了故障, 事务处理的结果都是永久的. 一旦事务被提交, 事务的效果会被永久地保留在数据库中.</p><h2 id="事务命令"><a href="#事务命令" class="headerlink" title="事务命令"></a>事务命令</h2><p><code>begin</code>: 表示开始一个事务, 后面会有多条数据库操作语句执行.<br><code>commit</code>: 表示提交一个事务, 对应前面的begin操作, 它们之间的数据库操作语句一起完成.<br><code>rollback</code>: 表示回滚一个事务, 在begin和commit之间, 如果某一个数据库操作语句出现错误, 执行rollack回滚, 数据库回到begin之前的状态, 也就是操作语句都没执行.<br><code>savepoint</code>: 定义回滚点, <code>rollback to savepoint 回滚点名</code>决定回滚到的位置.</p><h2 id="设置set控制事务"><a href="#设置set控制事务" class="headerlink" title="设置set控制事务"></a>设置set控制事务</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit = <span class="number">0</span>; <span class="comment"># 禁止自动提交, 即手动commit.</span></span><br><span class="line"><span class="keyword">set</span> autocommit = <span class="number">1</span>; <span class="comment"># 允许自动提交</span></span><br></pre></td></tr></table></figure><h1 id="MYSQL数据库管理"><a href="#MYSQL数据库管理" class="headerlink" title="MYSQL数据库管理"></a>MYSQL数据库管理</h1><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>1.新建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'明文密码'</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="keyword">password</span> <span class="string">'密文密码'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看user表中新建的用户</span></span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>2.删除用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span>;</span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>3.重命名用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span> <span class="keyword">to</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span>;</span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>4.给用户设置密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---version: 5.6---</span></span><br><span class="line"><span class="comment"># 修改当前登录密码</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">'密码'</span>);</span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改其他用户密码</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> <span class="string">'用户名'</span>@<span class="string">'%/localhost/ip地址'</span> = <span class="keyword">password</span>(<span class="string">'密码'</span>);</span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>5.重设root密码<br>(1)停止mysqld服务进程</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop mysqld</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-utpln | grep 3306</span></span><br></pre></td></tr></table></figure><p>(2)使用mysqld_safe结合skip-grant-tables启动数据库, 作用是用户登录时不使用授权表.</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --skip-grant-tables<span class="meta">&amp;</span></span><br><span class="line">netstat -utpln <span class="string">| grep 3306</span></span><br></pre></td></tr></table></figure><p>(3)使用update修改root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---version: 5.6---</span></span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">"密码"</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---version: 5.7---</span></span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> authentication_string=<span class="keyword">password</span>(<span class="string">'密码'</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">User</span>,authentication_string,Host <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>(4)刷新数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>(5)登录测试</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mysql</span> <span class="selector-tag">-u</span><span class="selector-attr">[用户名]</span> <span class="selector-tag">-p</span><span class="selector-attr">[密码]</span></span><br></pre></td></tr></table></figure><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>1.授予权限<br>权限控制主要是出于安全因素, 因此需要遵循以下几个经验原则:<br>(1).只授予能满足需要的最小权限<br>(2).创建用户的时候限制用户的登录主机, 一般是限制成指定IP或者内网IP段.<br>(3).初始化数据库时删除没有密码的用户. 安装完数据库时会自动创建一些用户, 这些用户默认没有密码.<br>(4).为每个用户设置满足密码复杂度的密码<br>(5).定期清理不需要的用户. 回收权限或者删除用户.</p><p>授予权限使用GRANT命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库名.数据表名 <span class="keyword">to</span> <span class="string">'用户名'</span>@<span class="string">'主机地址'</span> [<span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>];</span><br></pre></td></tr></table></figure><p>2.查看权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">'用户名'</span>@<span class="string">'主机地址'</span>;</span><br></pre></td></tr></table></figure><p>3.撤销权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库名.数据表名 <span class="keyword">from</span> <span class="string">'用户名'</span>@<span class="string">'主机地址'</span>;</span><br></pre></td></tr></table></figure><table>4.权限列表说明<tr><td>权限</td><td>说明</td></tr><tr><td>ALL</td><td>设置GRANT OPTION之外的所有权限</td></tr><tr><td>ALTER</td><td>允许使用ALTER TABLE</td></tr><tr><td>CREATE</td><td>允许使用CREATE TABLE</td></tr><tr><td>CRFATE USER</td><td>允许使用CREATE USER</td></tr><tr><td>DELETE</td><td>允许使用DELETE</td></tr><tr><td>INDEX</td><td>允许使用INDEX</td></tr><tr><td>INSERT</td><td>允许使用INSERT</td></tr><tr><td>SELECT</td><td>允许使用SELECT</td></tr><tr><td>UPDATE</td><td>允许使用UPDATE</td></tr><tr><td>DROP</td><td>允许使用DROP TABLE</td></tr><tr><td>REPLICATION SLAVE</td><td>允许从主服务器中读取二进制日志文件</td></tr><tr><td>SHOW DATABASES</td><td>允许显示所有数据库</td></tr></table><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><p>MySQL的日志类型有错误日志、通用查询日志、二进制日志、慢查询日志.</p><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><p>1.错误日志主要记录当MySQL启动和停止时, 以及在运行过程中发生任何错误时的相关信息. 错误日志默认保存在MySQL的安装路径data文件夹下, 后缀名是.err.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> <span class="string">/usr/local/mysql/data</span></span><br><span class="line">  主机名<span class="string">.err</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><p>2.在MySQL的配置文件中, 可以指定日志文件的保存位置和日志的文件名. log-error=file_ name选项来指定保存错误日志的位置, file_name指定日志文件名, 如果没有指定文件名, 使用host_name.err作为文件名.</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">  <span class="built_in">log</span>-<span class="keyword">error</span>=/usr/<span class="keyword">local</span>/mysql/data/mysql_error.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>重启MySQL后, mysql_error.log文件生成.</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br><span class="line">ls /usr/<span class="built_in">local</span>/mysql/<span class="built_in">data</span></span><br><span class="line">  mysql_error.<span class="keyword">log</span></span><br><span class="line">  <span class="params">...</span></span><br></pre></td></tr></table></figure><p>注: MySQL必须对指定的文件夹有读写的权限, 否则无法操作文件.</p><h3 id="通用查询日志"><a href="#通用查询日志" class="headerlink" title="通用查询日志"></a>通用查询日志</h3><p>1.通用查询日志用来记录MySQL的所有连接和语句, 默认是关闭的. 使用SHOW语句可以查询出日志的信息.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables lik<span class="string">e'general%'</span>;</span><br></pre></td></tr></table></figure><pre>+------------------+-------------------------------------+| Variable_name    | Value                               |+------------------+-------------------------------------+| general_log      | OFF                                 || general_log_file | /usr/local/mysql/data/localhost.log |+------------------+-------------------------------------+2 rows in set (0.00 sec)</pre><p>2.修改MySQL配置文件的general_log=ON选项, 可以打开通用查询日志,<br>general_log_file=file_name 定义通用查询日志的位置, 如果没有指定file_name的值, 默认名是host_name.log.</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">  general_log=<span class="keyword">ON</span></span><br><span class="line">  general_log_file=/usr/<span class="built_in">local</span>/mysql/<span class="built_in">data</span>/mysql_general.<span class="keyword">log</span></span><br></pre></td></tr></table></figure><p>3.重启MySQL后, mysql_error.log文件生成.</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br><span class="line">ls /usr/<span class="built_in">local</span>/mysql/<span class="built_in">data</span></span><br><span class="line">  mysql_general.<span class="keyword">log</span></span><br><span class="line">  <span class="params">...</span></span><br></pre></td></tr></table></figure><h3 id="二进制日志"><a href="#二进制日志" class="headerlink" title="二进制日志"></a>二进制日志</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%log_bin%'</span>;</span><br></pre></td></tr></table></figure><pre>+---------------------------------+-----------------------------+| Variable_name                   | Value                       |+---------------------------------+-----------------------------+| log_bin                         | ON                          || log_bin_basename                | /data/mysql/mysql-bin       || log_bin_index                   | /data/mysql/mysql-bin.index || log_bin_trust_function_creators | OFF                         || log_bin_use_v1_row_events       | OFF                         || sql_log_bin                     | ON                          |+---------------------------------+-----------------------------+</pre><p>1.二进制日志用来记录所有更新了数据或者已经潜在更新了数据的语句, 记录了数据的更改, 主要目的是在恢复数据时能够最大程度地恢复数据库.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ---version: 5.6---</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  log-bin=mysql_bin</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br><span class="line">ls /usr/local/mysql/data</span><br><span class="line">  mysql_bin.000001</span><br><span class="line">  mysql_bin.000002</span><br><span class="line">  mysql_bin.000003</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---version: 5.7---</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  server-id = 1</span><br><span class="line">  log_bin = mysql-bin</span><br><span class="line">  log-bin-index = mysql-bin.index</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br><span class="line">ls /usr/local/mysql/data</span><br><span class="line"></span><br><span class="line">mysql -u 用户名 -p [密码]</span><br><span class="line">show variables like 'log_bin';</span><br></pre></td></tr></table></figure><p>2.二进制日志可以使用MySQL的工具mysqlbinlog查看二进制文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog mysql-bin<span class="number">.000001</span></span><br></pre></td></tr></table></figure><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录所有执行时间超过long_query_time秒的SQL语句, 用于找到哪些查询语句执行时间长, 以便对其进行优化.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow%'</span>;</span><br></pre></td></tr></table></figure><pre>+---------------------------+------------------------------------------+| Variable_name             | Value                                    |+---------------------------+------------------------------------------+| log_slow_admin_statements | OFF                                      || log_slow_slave_statements | OFF                                      || slow_launch_time          | 2                                        || slow_query_log            | OFF                                      || slow_query_log_file       | /usr/local/mysql/data/localhost-slow.log |+---------------------------+------------------------------------------+5 rows in set (0.00 sec)</pre><p>1.可以使用SQL语句开启慢查询功能, 文件名为hostname-slow.log.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log=<span class="keyword">ON</span>;</span><br></pre></td></tr></table></figure><p>慢查询时间设置默认为10秒, 记录10秒内的查询, 可以通过global long_query_<br>time选项进行修改.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'long_query_time'</span>;</span><br><span class="line"><span class="keyword">set</span> long_query_time=<span class="number">8</span>; <span class="comment">#立即生效, 下次登录MySQL时失效.</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> long_query_time=<span class="number">5</span>; <span class="comment">#需重新登录MySQL</span></span><br></pre></td></tr></table></figure><p>2.在MySQL配置文件中进行设置开启慢查询功能</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">  slow_query_log=<span class="keyword">ON</span> </span><br><span class="line">  slow_query_log_file=mysql_slow_query.<span class="keyword">log</span> </span><br><span class="line">  long_query_time = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br><span class="line">ls /usr/<span class="built_in">local</span>/mysql/<span class="built_in">data</span></span><br><span class="line">  mysql_slow_query.<span class="keyword">log</span> </span><br><span class="line">  <span class="params">...</span></span><br></pre></td></tr></table></figure><p>3.测试慢查询日志</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sleep</span>(<span class="number">6</span>)<span class="comment">;</span></span><br><span class="line">quit<span class="comment">;</span></span><br><span class="line">cat /usr/<span class="keyword">local</span>/mysql/data/mysql_slow_query.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><h1 id="MySQL数据库备份与恢复"><a href="#MySQL数据库备份与恢复" class="headerlink" title="MySQL数据库备份与恢复"></a>MySQL数据库备份与恢复</h1><h2 id="备份重要性与数据丢失原因"><a href="#备份重要性与数据丢失原因" class="headerlink" title="备份重要性与数据丢失原因"></a>备份重要性与数据丢失原因</h2><p>数据库备份的重要性主要体现在:<br>(1)提高系统的高可用性和灾难可恢复性, 在数据库系统崩溃时, 没有数据库备份就没法找到数据.<br>(2)使用数据库备份还原数据库, 是数据库崩溃时提供数据恢复最小代价的最优方案, 如果让用户重新添加数据, 代价未免太大.<br>(3)没有数据就没有一切, 数据库备份是一种防范灾难的强力手段.</p><p>使用数据库的过程中, 有多种原因造成数据的丢失:<br>(1)程序错误<br>(2)人为错误<br>(3)计算机失败<br>(4)磁盘失败<br>(5)灾难和偷窃</p><h2 id="备份分类"><a href="#备份分类" class="headerlink" title="备份分类"></a>备份分类</h2><p>从物理与逻辑的角度:<br>1.物理备份<br>&nbsp;&nbsp;|_脱机备份(冷备份)<br>&nbsp;&nbsp;|_联机备份(热备份)</p><p>2.逻辑备份<br>完全备份<br>差异备份<br>增量备份</p><table style="text-align:center;">备份方式比较<tr><td>备份方式</td><td>完全备份</td><td>差异备份</td><td>增量备份</td></tr><tr><td>完全备份时的状态</td><td>表1、表2</td><td>表1、表2</td><td>表1、表2</td></tr><tr><td>第1次添加内容</td><td>创建表3</td><td>创建表3</td><td>创建表3</td></tr><tr><td>备份内容</td><td>表1、表2、表3</td><td>表3</td><td>表3</td></tr><tr><td>第2次添加内容</td><td>创建表4</td><td>创建表4</td><td>创建表4</td></tr><tr><td>备份内容</td><td>表1、表2、表3、表4</td><td>表3、表4</td><td>表4</td></tr></table><h2 id="完全备份"><a href="#完全备份" class="headerlink" title="完全备份"></a>完全备份</h2><p>MySQL的备份方式主要有完全备份与增量备份. 完全备份是对整个数据库的备份、数据库结构和文件结构的备份, 保存的是备份完成时刻的数据库, 是增量备份的基础.</p><p>完全备份优点是备份与恢复操作简单方便, 缺点是数据存在大量重复, 占朋大量的备份空间, 备的时间长.</p><p>在生产环境中, 这两种备份方式都会使用, 需要制定合理高效的方案达到备份数据的目的, 避免数据丢失造成严重的后果.</p><h3 id="使用tar打包文件夹备份"><a href="#使用tar打包文件夹备份" class="headerlink" title="使用tar打包文件夹备份"></a>使用tar打包文件夹备份</h3><p>MySQL的数据库文件默认都是保存在安装目录的data文件夹下面, 可以直接保存data文件夹, 但是占用的空间较大, 可以使用tar打包压缩进行保存.</p><p>(1)数据库文件很大, 可以使用压缩率较大的xz格式压缩, 首先需要安装xz压缩格式工具.</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> xz</span><br></pre></td></tr></table></figure><p>(2)对数据库文件夹/usr/local/mysq/data/进行打包操作</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar Jcvf <span class="string">/opt/mysql-</span>$<span class="params">(date +%F)</span><span class="string">.tar.xz</span> <span class="string">/usr/local/mysql/data/</span></span><br><span class="line"><span class="keyword">ls</span> <span class="string">/opt</span></span><br></pre></td></tr></table></figure><p>(3)对比打包前后的文件大小, 可以看到压缩的备份文件占用空间很小.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">du -sh <span class="regexp">/opt/my</span>sql-<span class="number">20</span>*</span><br><span class="line">du -sh <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data</span><br></pre></td></tr></table></figure><p>(4)如果数据库文件损坏数据丢失, 可以解压缩备份文件, 相当于做了数据恢复的工作.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar Jxvf <span class="regexp">/opt/</span> mysql-<span class="number">20</span>* <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h3 id="使用mysqldump工具备份"><a href="#使用mysqldump工具备份" class="headerlink" title="使用mysqldump工具备份"></a>使用mysqldump工具备份</h3><p>使用mysqldump可以更加灵活地控制备份的内容, 比如某几个表或库都可以单独备份.</p><p>(1)使用mysqldump命令对某些表进行完全备份</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> <span class="comment">[数据表名]</span> <span class="comment">[数据表名]</span>... &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>(2)使用mysqldump命令对单个库进行完全备份</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>(3)使用mysqldump命令对多个库进行完全备份</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> <span class="comment">[数据库名]</span>... &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>(4)使用mysqldump命令对所有库进行完全备份</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> --all-databases &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>(5)使用mysqldump命令也可以直接备份表结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p [密码] -d 数据库名 数据表名 &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><h2 id="完全恢复"><a href="#完全恢复" class="headerlink" title="完全恢复"></a>完全恢复</h2><p>1.source命令库、表恢复</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mysql</span> <span class="string">-u 用户名 -p [密码]</span></span><br><span class="line"><span class="comment">#数据库恢复</span></span><br><span class="line"><span class="attr">source</span> <span class="string">备份脚本路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据表恢复</span></span><br><span class="line"><span class="attr">use</span> <span class="string">数据库名</span></span><br><span class="line"><span class="attr">source</span> <span class="string">备份脚本路径</span></span><br></pre></td></tr></table></figure><p>2.MySQL命令整库恢复</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p [密码] 数据库名 &lt; <span class="regexp">/备份路径/</span>备份文件名</span><br></pre></td></tr></table></figure><p>3.MySQL命令整表恢复</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u 用户名 -p [密码] 数据库名 &lt; <span class="regexp">/备份路径/</span>备份文件名</span><br></pre></td></tr></table></figure><h2 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h2><p>备份自上一次备份之后增加或改变的文件或者内容</p><p>增量备份的优点是没有重复数据, 备份量不大, 时间短. 缺点也很明显, 需要上次完全备份及完全备份之后所有的增量备份才能恢复, 而且对所有增量备份进行逐个反推恢复, 操作较为繁锁.</p><p>MySQL没有提供直接的增量备份方法, 但是可以通过MySQL的二进制日志(binary logs)间接实现增量备份. </p><p>二进制日志对备份的意义如下:<br>(1)二进制日志保存了所有更新或者可能更新数据库的操作<br>(2)二进制日志在启动MySQL服务器后开始记录, 并在文件达到max_binlog_size所设置的大小或者接收到fush logs命令后重新创建新的日志文件.<br>(3)只需要定时执行fush logs方法重新创建新的日志, 生成二进制文件序列,<br> 并及时把这些日志保存到安全的地方就完成了一个时间段的增量备份.</p><h3 id="实现备份"><a href="#实现备份" class="headerlink" title="实现备份"></a>实现备份</h3><p>1.开启二进制日志功能<br>(1)在MySQL配置文件的[mysqld]项中加入log-bin=filepath项, 然后重启mysqld服务.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">  [mysqld]</span><br><span class="line">  <span class="built_in">log</span>-bin=mysql-bin</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>(2)使用mysqld –log-bin=filepath重新启动MySQL服务</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/etc/init.d/mysqld</span> restart <span class="params">--log-bin=mysql-bin</span></span><br></pre></td></tr></table></figure><p>2.确定字符集使用的是utf-8的形式, 避免出现乱码问题.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%char%'</span>;</span><br></pre></td></tr></table></figure><p>3.创建备份文件保存的文件夹/opt/bak_sgl, 备份文件都保存在这个文件夹中.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /<span class="keyword">opt</span>/bak_sgl</span><br></pre></td></tr></table></figure><p>4.每周选择服务器负载较轻的时间段, 或者用户访问较少的时间段进行备份.<br>使用mysqldump命令, 可以对数据库或表进行备份.<br>(1)使用mysqldump备份数据库、数据表</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> <span class="comment">[数据表名]</span> &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>(2)使用fush-logs生成新的二进制文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u 用户名 -p [密码] <span class="keyword">flush</span>-<span class="keyword">logs</span></span><br><span class="line">ls /usr/<span class="keyword">local</span>/mysql/<span class="keyword">data</span>/</span><br></pre></td></tr></table></figure><p>(3)插入新的数据, 以模拟数据的增加或者变更.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert <span class="built_in">int</span>o 数据库名.数据表名(列名<span class="number">1</span>, 列名<span class="number">2</span>, 列名<span class="number">3</span>,...)</span><br><span class="line">values</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...),</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...);</span><br></pre></td></tr></table></figure><p>(4)使用mysqlbinlog命令查看二进制文件内容</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqlbinlog</span> 二进制日志文件名</span><br></pre></td></tr></table></figure><p>(5)复制二进制文件至保存备份文件的目录, 完成增量备份.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> 二进制日志文件名 /<span class="keyword">opt</span>/bak_sql/</span><br><span class="line"><span class="keyword">ls</span> /<span class="keyword">opt</span>/bak_sql</span><br></pre></td></tr></table></figure><h3 id="实现恢复"><a href="#实现恢复" class="headerlink" title="实现恢复"></a>实现恢复</h3><p>恢复场景<br>(1)人为的SQL语句破坏了数据库<br>(2)在进行下一次全备之前发生系统故障导致数据库数据丢失<br>(3)在主从架构中, 主库数据发生了故障.</p><p>根据数据丢失的情况可以分为两类:<br>(1)只丢失了完全备份之后更改的数据<br>(2)完全备份之后丢失所有数据</p><h4 id="丢失完全备份之后更改的数据恢复步骤"><a href="#丢失完全备份之后更改的数据恢复步骤" class="headerlink" title="丢失完全备份之后更改的数据恢复步骤"></a>丢失完全备份之后更改的数据恢复步骤</h4><p>1.进行一次完全备份, 确保生成了完全备份的sql文件.</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> <span class="comment">[数据表名]</span> &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>2.使用flush-logs生成新的二进制日志文件, 用于保存之后的数据库操作语句.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u 用户名 -p [密码] <span class="keyword">flush</span>-<span class="keyword">logs</span></span><br><span class="line">ls /usr/<span class="keyword">local</span>/mysql/<span class="keyword">data</span>/</span><br></pre></td></tr></table></figure><p>3.插入数据并执行flush-logs生成新的二进制日志文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert <span class="built_in">int</span>o 数据库名.数据表名(列名<span class="number">1</span>, 列名<span class="number">2</span>, 列名<span class="number">3</span>,...)</span><br><span class="line">values</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...),</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...);</span><br><span class="line"></span><br><span class="line">mysqladmin -u 用户名 -p [密码] flush-logs</span><br><span class="line">ls /usr/local/mysql/data/</span><br></pre></td></tr></table></figure><p>4.删除插入的数据进行增量恢复</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data<span class="regexp">/二进制日志文件-序号 | mysql -u 用户名 -p [密码]</span></span><br></pre></td></tr></table></figure><h4 id="完全备份之后丢失所有数据的恢复步骤"><a href="#完全备份之后丢失所有数据的恢复步骤" class="headerlink" title="完全备份之后丢失所有数据的恢复步骤"></a>完全备份之后丢失所有数据的恢复步骤</h4><p>1.进行一次完全备份, 确保生成了完全备份的sql文件.</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p <span class="comment">[密码]</span> <span class="comment">[选项]</span> <span class="comment">[数据库名]</span> <span class="comment">[数据表名]</span> &gt; /备份路径/备份文件名</span><br></pre></td></tr></table></figure><p>2.使用flush-logs生成新的二进制日志文件, 用于保存之后的数据库操作语句.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u 用户名 -p [密码] <span class="keyword">flush</span>-<span class="keyword">logs</span></span><br><span class="line">ls /usr/<span class="keyword">local</span>/mysql/<span class="keyword">data</span>/</span><br></pre></td></tr></table></figure><p>3.插入数据并执行flush-logs生成新的二进制日志文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert <span class="built_in">int</span>o 数据库名.数据表名(列名<span class="number">1</span>, 列名<span class="number">2</span>, 列名<span class="number">3</span>,...)</span><br><span class="line">values</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...),</span><br><span class="line">(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>,...);</span><br><span class="line"></span><br><span class="line">mysqladmin -u 用户名 -p [密码] flush-logs</span><br><span class="line">ls /usr/local/mysql/data/</span><br></pre></td></tr></table></figure><p>4.删除完全备份的数据表, 即完全备份数据和完全备份之后的数据丢失.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 数据库名.数据表;</span><br></pre></td></tr></table></figure><p>5.使用mysql命令进行完全备份的恢复</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u 用户名 -p [密码] 数据库名 &lt; <span class="regexp">/备份路径/</span>备份文件名</span><br></pre></td></tr></table></figure><p>6.完全备份之后的数据进行增量恢复</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data<span class="regexp">/二进制日志文件-序号 | mysql -u 用户名 -p [密码]</span></span><br></pre></td></tr></table></figure><h4 id="基于时间点与位置的恢复"><a href="#基于时间点与位置的恢复" class="headerlink" title="基于时间点与位置的恢复"></a>基于时间点与位置的恢复</h4><p>1.基于时间点的恢复<br>将某个起始时间的二进制日志导入数据库中, 从而跳过某个发生错误的时间点实现数据的恢复. </p><p>使用mysqlbinlog加上<br>–stop-datetime选项表示在哪个时间点停止执行, 后面误操作的语句不执行,<br>–start-datetime选项表示在哪个时间点开始执行后面的语句,<br>注意的是二进制文件中保存的日期格式需要调整为用”-“分割:<code>00-00-00 0:00:00</code>.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog --stop-datetime=<span class="string">'00-00-00 0:00:00'</span> <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data/二进制日志文件 mysql -u 用户名 -p [密码]</span><br><span class="line">mysqlbinlog --start-datetime=<span class="string">'00-00-00 0:00:00'</span> <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data/二进制日志文件 mysql -u 用户名 -p [密码]</span><br></pre></td></tr></table></figure><p>2.基于位置的恢复<br>基于位置的恢复, 就是使用基于时间点的恢复.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog --stop-datetime=<span class="string">'at序号'</span> <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data/二进制日志文件 mysql -u 用户名 -p [密码]</span><br><span class="line">mysqlbinlog --start-datetime=<span class="string">'at序号'</span> <span class="regexp">/usr/</span>local<span class="regexp">/mysql/</span>data/二进制日志文件 mysql -u 用户名 -p [密码]</span><br></pre></td></tr></table></figure><h2 id="MySQL存储过程"><a href="#MySQL存储过程" class="headerlink" title="MySQL存储过程"></a>MySQL存储过程</h2><table>MySQL的体系架构<tr><td><img src="/post/2c642c75/MySQL的体系架构.png"></td></tr></table><p><code>Connectors</code>:连接组件<br><code>Management Service</code> &amp; <code>Utilities</code>:管理服务和控制组件<br><code>Connection Pool</code>:连接池组件<br><code>SQL Interface</code>:SQL接口组件<br><code>Parser</code>:查询分析器组件<br><code>Optimizer</code>:优化器组件<br><code>Caches</code> &amp; <code>Buffers</code>:缓存组件<br><code>Pluggable Storage Engines</code>:插件式存储引擎<br><code>File System</code>:文件系统<br><code>FIle</code> &amp; <code>Logs</code>:存储文件和日志</p><p>MySOL支持插件式的表存储引擎,这种独有的插件式体系架构,让存储引擎直了依赖于应用的多样性. 存储引擎处于文件系统之上, 在数据保存到数据文件之前会先传输到存储引擎, 然后按照各个存储引擎的存储格式进行数据存储.</p><p>使用这种存储引擎的主要优点在于, 仅仅需要提供特殊应用所需的特性即可; 数据库中的系统开销较小; 具有更有效和更高效的数据库性能.</p><h3 id="MyISAM存储引擎"><a href="#MyISAM存储引擎" class="headerlink" title="MyISAM存储引擎"></a>MyISAM存储引擎</h3><p>MyISAM存储引擎是MySQL关系数据库系统5.5版本之前默认的存储引擎, 它的前身是ISAM, ISAM是一个定义明确且历经时间考验的数据表格管理方法, 它在设计之时就考虑到数据库被查询的次数要远大于更新的次数. 因此ISAM读取操作的速度很快, 而且不占用大量的内存和存储资源.</p><p>ISAM的两个主要不足之处在于, 它不支持事务处理也不能够容错. 如果硬盘崩溃, 那么数据文件就无法恢复了.</p><p>MyISAM管理非事务表, 是MySQL的ISAM扩展格式. 除了提供ISAM里所没有的索引和字段管理的大量功能, MyISAM还使用一种表格锁定的机制, 来优化多个并发的读写操作. MyISAM提供高速存储和检索, 以及全文搜索能力.</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>1.不支持事务, 需要事务支持的系统不能使用MyISAM作为存储引擎.<br>2.表级锁定形式, 数据在更新时锁定整个表.<br>3.数据库在读写过程中相互阻塞:<br>(1)在数据写入的过程中阻塞用户对数据的读取<br>(2)在数据读取的过程中阻塞用户写入数据</p><p>4.可以通过key_buffer_size来设置缓存索引, 提高访问的性能, 减少磁盘IO的压力.<br>5.采用MyISAM存储引擎进行数据单独写入或读取, 速度较快且占用资源相对要少.<br>6.MyISAM存储引擎不支持外键约束, 只支持全文索引.<br>7.每个MyISAM在磁盘上存储成三个文件. 每一个文件的名字均以表的名字开始, 扩展名指出文件类型:<br>(1).frm文件存储表定义<br>(2)数据文件的扩展名为: .MYD(MYData)<br>(3)索引文件的扩展名为: .MYI(MYIndex)</p><h3 id="InnoDB存储引擎"><a href="#InnoDB存储引擎" class="headerlink" title="InnoDB存储引擎"></a>InnoDB存储引擎</h3><p>InnoDB存储引擎不同于MyISAM存储引擎, 能够支持事务安全表(ACID兼容), 具有提交、回滚和崩溃恢复的能力.</p><p>InnoDB支持行级锁定, 并且可以在SELECT语句中提供一个与Oracle风格类似的非锁定读, 也支持FOREIGN KEY强制.</p><p>种种特性使得InnoDB存储引擎的多用户部署和性能得以提升.</p><p>InnoDB存储引擎还支持SQL查询中将InnoDB类型的表与其他MySQL的表类型混合使用, 甚至在同一个查询中也可以混合使用.</p><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><p>1.支持事务, 支持四个事务隔离级别.<br>2.行级锁定, 但是全表扫描仍然会是表级锁定.<br>3.读写阻塞与事务隔级别相关<br>4.具有非常高效的缓存特性, 能缓存索引, 也能缓存数据.<br>5.表与主键以簇的方式存储<br>6.支持分区、表空间, 类似Oracle数据库.<br>7.支持外键约束, MySQL 5.5以前不支持全文索引, 5.5版本以后支持.<br>8.适合对硬件资源要求比较高的场合</p><h3 id="配置存储引擎"><a href="#配置存储引擎" class="headerlink" title="配置存储引擎"></a>配置存储引擎</h3><h4 id="查看数据库可配置的存储引擎类型"><a href="#查看数据库可配置的存储引擎类型" class="headerlink" title="查看数据库可配置的存储引擎类型"></a>查看数据库可配置的存储引擎类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">engines</span>;</span><br></pre></td></tr></table></figure><pre>+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        || CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         || MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         || BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         || PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         || MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         || ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         || MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         || FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+9 rows in set (0.00 sec)</pre><p><code>Engine</code>列表示当前版本的MySQL所支持的引擎类型;<br><code>Support</code>列表示对应引擎是否能使用;<br><code>Transactions</code>列表示对应引擎是否支持事务;<br><code>DEFAULT</code>表示该引擎为当前默认存储引擎.</p><h4 id="查看数据表正在使用的存储引擎"><a href="#查看数据表正在使用的存储引擎" class="headerlink" title="查看数据表正在使用的存储引擎"></a>查看数据表正在使用的存储引擎</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看创建数据表的SQL语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 数据表名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'数据表名'</span>;</span><br></pre></td></tr></table></figure><pre>+----------+--------+---------+------------+---------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| Name     | Engine | Version | Row_format | Rows    | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time | Check_time | Collation       | Checksum | Create_options | Comment |+----------+--------+---------+------------+---------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| salaries | InnoDB |      10 | Dynamic    | 2752484 |             41 |   114966528 |               0 |     43597824 |   3145728 |           NULL | 2020-08-19 21:27:34 | NULL        | NULL       | utf8_general_ci |     NULL |                |         |+----------+--------+---------+------------+---------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+1 row in set (0.01 sec)</pre><h4 id="配置存储引擎为所选择的类型"><a href="#配置存储引擎为所选择的类型" class="headerlink" title="配置存储引擎为所选择的类型"></a>配置存储引擎为所选择的类型</h4><p>1.修改数据表结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 数据表名 <span class="keyword">engine</span> = 存储引擎;</span><br></pre></td></tr></table></figure><p>2.修改MySQL的配置文件my.cnf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">  [mysqld]</span><br><span class="line">  default-storage-engine&#x3D;MyISAM</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>3.创建数据表指定</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 数据表名</span><br><span class="line">(</span><br><span class="line">    ...</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span>;</span><br></pre></td></tr></table></figure><p>4.批量转换存储引擎</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum -y install <span class="attribute">prel</span>=DBI prel-DBD-MySQL</span><br><span class="line"></span><br><span class="line">vim /usr/local/mysql/bin/mysql_convert_table_format</span><br><span class="line">  <span class="string">"<span class="variable">$opt_engine</span>"</span>   =&gt; \<span class="variable">$opt_engine</span>, # 32行</span><br><span class="line">  <span class="built_in">..</span>.</span><br><span class="line"></span><br><span class="line">mysql_convert_table_format <span class="attribute">--user</span>=root <span class="attribute">--password</span>=密码 <span class="attribute">--socket</span>=/temp/mysql.sock --engine = 存储引擎 数据库名 数据表名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;数据库简介&quot;&gt;&lt;a href=&quot;#数据库简介&quot; class=&quot;headerlink&quot; title=&quot;数据库简介&quot;&gt;&lt;/a&gt;数据库简介&lt;/h1&gt;&lt;h2 id=&quot;使用数据库的必要性&quot;&gt;&lt;a href=&quot;#使用数据库的必要性&quot; class=&quot;headerlink&quot; title=&quot;使用数据库的必要性&quot;&gt;&lt;/a&gt;使用数据库的必要性&lt;/h2&gt;&lt;p&gt;可以结构化存储大量的数据信息, 方便用户进行有效的检索和访问.&lt;br&gt;可以有效地保持数据信息的一致性、完整性, 降低数据冗余.&lt;br&gt;可以满足应用的共享和安全方面的要求&lt;/p&gt;
&lt;h2 id=&quot;经典数据模型&quot;&gt;&lt;a href=&quot;#经典数据模型&quot; class=&quot;headerlink&quot; title=&quot;经典数据模型&quot;&gt;&lt;/a&gt;经典数据模型&lt;/h2&gt;&lt;p&gt;网状模型&lt;br&gt;层次模型&lt;br&gt;关系模型&lt;/p&gt;
&lt;h2 id=&quot;当今主流数据库&quot;&gt;&lt;a href=&quot;#当今主流数据库&quot; class=&quot;headerlink&quot; title=&quot;当今主流数据库&quot;&gt;&lt;/a&gt;当今主流数据库&lt;/h2&gt;&lt;table style=&quot;text-align:center;&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;关系数据库&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;SQL Servel、Oracle、IBM DB2、MySQL&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;非关系数据库&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;Memcached、Redis、MongoDB、HBase&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;优点&lt;/td&gt;
&lt;td&gt;数据库高并发读写的需求
对海量数据高效率存储与访问
数据库的高扩展性与高可用性的需求&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="MySQL" scheme="http://www.mengyun.club/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>LVS-Keepalived 高可用群集</title>
    <link href="http://www.mengyun.club/post/a09398aa/"/>
    <id>http://www.mengyun.club/post/a09398aa/</id>
    <published>2020-08-12T03:39:10.000Z</published>
    <updated>2020-09-18T01:27:54.509Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>Keepalived起初是专门针对LVS设计的一款强大的辅助工具, 主要用来提供故障切换(Failover)和健康检查(Health Checking)功能–判断LVS负载调度器、节点服务器的可用性, 及时隔离并替换为新的服务器, 当故障主机恢复后将其重新加入群集.</p><h1 id="Keepalived概述及安装"><a href="#Keepalived概述及安装" class="headerlink" title="Keepalived概述及安装"></a>Keepalived概述及安装</h1><p><a href="http://www.keepalived.org/" target="_blank" rel="noopener">Keepalived的官方网站</a></p><h2 id="Keepalived的热备方式"><a href="#Keepalived的热备方式" class="headerlink" title="Keepalived的热备方式"></a>Keepalived的热备方式</h2><p>Keepalived采用VRRP(Virtual Router Redundancy Protocol, 虚拟路由冗余协议)热备份协议, 以软件的方式实现Linux服务器的多机热备功能.</p><p>VRRP是针对路由器的一种备份解决方案：由多台路由器组成一个热备组, 通过共用的虚拟IP地址对外提供服务;<br>每个热备组内同一时刻只有一台主路由器提供服务, 其他路由器处于冗余状态, 若当前在线的路由器失效, 则其他路由器会自动接替(优先级决定接替顺序)虚拟IP地址, 以继续提供服务.</p><p>热备组内的每台路由器都可能成为主路由器, 虚拟路由器的IP地址(VIP)可以在热备组内的路由器之间进行转移, 所以也称为漂移IP地址, 使用Keepalived时, 漂移地址的实现不需要手动建立虚接口配置文件, 而是由Keepalived根据配置文件自动管理.</p><table><tr><td><img src="/post/a09398aa/Keepalived的VRRP热备机制.jpg"></td></tr></table><a id="more"></a><h2 id="Keepalived的安装与服务控制"><a href="#Keepalived的安装与服务控制" class="headerlink" title="Keepalived的安装与服务控制"></a>Keepalived的安装与服务控制</h2><p>安装支持软件</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> gcc</span><br><span class="line">yum -y <span class="keyword">install</span> kernel-devel openssl-devel popt-devel</span><br><span class="line">yum -y <span class="keyword">install</span> ipvsadm</span><br></pre></td></tr></table></figure><p>安装Keepalived</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxf keepalived<span class="number">-2.0</span><span class="number">.16</span>.tar.gz</span><br><span class="line">cd keepalived<span class="number">-2.0</span><span class="number">.16</span></span><br><span class="line">./configure --prefix=/</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>使用Keepalived服务</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig -<span class="built_in">add</span> keepalived</span><br><span class="line">chkconfig keepalived <span class="keyword">on</span></span><br></pre></td></tr></table></figure><h1 id="使用Keepalived实现双机热备"><a href="#使用Keepalived实现双机热备" class="headerlink" title="使用Keepalived实现双机热备"></a>使用Keepalived实现双机热备</h1><h2 id="主服务器的配置"><a href="#主服务器的配置" class="headerlink" title="主服务器的配置"></a>主服务器的配置</h2><p>Keepalived服务的配置目录位于/etc/keepalived, 其中keepalived.conf是主配置文件.<br>另外包括一个子目录samples/, 提供了许多配置样例作为参考.</p><p>在Keepalived的配置文件中:</p><table><tr><td>global_defs {...}</td><td>指定全局参数</td></tr><tr><td colspan="2"><table><tr><td>router_id</td><td>本路由器(服务器)的名称</td></tr></table></td></tr><tr><td>vrrp_instance 实例名称 {...}</td><td>指定VRRP热备参数, 注释文字以"!"符号开头.</td></tr><tr><td colspan="2"><table><tr><td>state</td><td>热备状态</td></tr><tr><td>interface</td><td>承载VIP地址的物理接口</td></tr><tr><td>virtual_router_id</td><td>虚拟路由器的ID号, 每个热备组保持一致.</td></tr><tr><td>priority</td><td>优先级, 数值越大优先级越高.</td></tr><tr><td>advert_int</td><td>通告间隔秒数(心跳频率)</td></tr></table></td></tr><tr><td>authentication {...}</td><td>认证信息, 每个热备组保持一致.</td></tr><tr><td colspan="2"><table><tr><td>auth_type</td><td>认证类型</td></tr><tr><td>auth_pass</td><td>密码字串</td></tr></table></td></tr><tr><td>virtual_ipaddress {...}</td><td>指定漂移地址(VIP), 可以有多个.</td></tr></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/keepalived/</span><br><span class="line">cp keepalived.conf keepalived.conf.bak </span><br><span class="line">vim keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id HA_TEST_R1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">   <span class="built_in"> interface </span>ens33</span><br><span class="line">    virtual_router_id 1</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl start keepalived</span><br><span class="line">ip addr show dev ens33</span><br></pre></td></tr></table></figure><pre>2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000    link/ether 00:0c:29:3a:8a:72 brd ff:ff:ff:ff:ff:ff    inet 192.168.100.10/24 brd 192.168.100.255 scope global noprefixroute ens33       valid_lft forever preferred_lft forever    <font color="red">inet 192.168.100.24/32 scope global ens33       valid_lft forever preferred_lft forever</font>    inet6 fe80::d294:3d50:4d71:df7f/64 scope link noprefixroute        valid_lft forever preferred_lft forever</BROADCAST,MULTICAST,UP,LOWER_UP></pre><h2 id="备用服务器的配置"><a href="#备用服务器的配置" class="headerlink" title="备用服务器的配置"></a>备用服务器的配置</h2><p>在同一个Keepalived热备组内, 所有服务器的Keepalived配置文件基本相同, 包括路由器名称、虚拟路由器的ID号、认证信息、漂移地址、心跳频率等.</p><table>不同之处主要在于路由器名称、热备状态、优先级.<tr><td>路由器名称</td><td>建议为每个参与热备的服务器指定不同的名称</td></tr><tr><td>热备状态</td><td>主服务器将状态设为MASTER, 备用服务器将状态设为BACKUP.</td></tr><tr><td>优先级</td><td>数值越大则取得VIP控制权的优先级越高, 主服务器优先级应设为最高, 其他备用服务器的优先级可依次递减, 但不要相同, 以免在争夺VIP控制权时发生冲突.</td></tr></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/keepalived/</span><br><span class="line">cp keepalived.conf keepalived.conf.bak </span><br><span class="line">vim keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id HA_TEST_R2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">   <span class="built_in"> interface </span>ens33</span><br><span class="line">    virtual_router_id 1</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl start keepalived</span><br><span class="line">ip addr show dev ens33</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="测试双机热备功能"><a href="#测试双机热备功能" class="headerlink" title="测试双机热备功能"></a>测试双机热备功能</h2><p>Keepalived的日志消息保存在/var/log/messages文件中, 在测试主、备故障自动切换功能时, 可以跟踪此日志文件来观察执备状态的变化.</p><h3 id="连通性测试"><a href="#连通性测试" class="headerlink" title="连通性测试"></a>连通性测试</h3><p>在客户机中执行”ping -t 漂移IP地址”, 能够正常、持续ping通<br>①禁用主服务器的ens33网卡, 发现ping测试只中断了1或2个包即恢复正常, 说明已有其他服务器接替VIP地址, 并及时响应客户机请求.</p><p>②重新启用主服务器的ens33网卡, 发现ping测试再次中断1或2个包即恢复正常, 说明主服务器已恢复正常，并夺回VIP地址的控制权.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ping -t 漂移IP地址</span><br><span class="line">ifconfig ens33 down</span><br><span class="line">ifconfig ens33 up</span><br><span class="line">ip addr show dev ens33</span><br></pre></td></tr></table></figure><h3 id="查看日志记录"><a href="#查看日志记录" class="headerlink" title="查看日志记录"></a>查看日志记录</h3><p>在执行主、备故障切换的过程中, 分别观察各自的/var/log/messages日志文件, 可以看到MASTER、SLAVE状态的迁移记录.<br>①主服务器中, 状态先变为失效、放弃控制权, 恢复后重新变为MASTER.</p><p>②备用服务器中, 状态先切换为MASTER, 待主服务器恢复后再交回控制权.</p><pre><font color="green">获取控制权</font>Aug 12 19:22:54 localhost Keepalived_vrrp[29229]: (VI_1) Receive advertisement timeoutAug 12 19:22:54 localhost Keepalived_vrrp[29229]: (VI_1) Entering MASTER STATEAug 12 19:22:54 localhost Keepalived_vrrp[29229]: (VI_1) setting VIPs.Aug 12 19:22:54 localhost Keepalived_vrrp[29229]: Sending gratuitous ARP on ens33 for 192.168.100.24Aug 12 19:22:54 localhost Keepalived_vrrp[29229]: (VI_1) Sending/queueing gratuitous ARPs on ens33 for 192.168.100.24Aug 12 19:22:54 localhost Keepalived_vrrp[29229]: Sending gratuitous ARP on ens33 for 192.168.100.24Aug 12 19:22:54 localhost avahi-daemon[723]: Registering new address record for 192.168.100.24 on ens33.IPv4.Aug 12 19:22:59 localhost Keepalived_vrrp[29229]: Sending gratuitous ARP on ens33 for 192.168.100.24Aug 12 19:22:59 localhost Keepalived_vrrp[29229]: (VI_1) Sending/queueing gratuitous ARPs on ens33 for 192.168.100.24Aug 12 19:22:59 localhost Keepalived_vrrp[29229]: Sending gratuitous ARP on ens33 for 192.168.100.24</pre><pre><font color="green">交回控制权</font>Aug 12 19:21:40 localhost Keepalived_vrrp[29229]: (VI_1) Master received advert from 192.168.100.10 with higher priority 100, ours 99Aug 12 19:21:40 localhost Keepalived_vrrp[29229]: (VI_1) Entering BACKUP STATEAug 12 19:21:40 localhost Keepalived_vrrp[29229]: (VI_1) removing VIPs.Aug 12 19:21:40 localhost avahi-daemon[723]: Withdrawing address record for 192.168.100.24 on ens33.</pre><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less /<span class="built_in">var</span>/<span class="built_in">log</span>/messages</span><br></pre></td></tr></table></figure><h2 id="LVS-DR-Keepalived高可用群集"><a href="#LVS-DR-Keepalived高可用群集" class="headerlink" title="LVS-DR+Keepalived高可用群集"></a>LVS-DR+Keepalived高可用群集</h2><table>准备搭建环境:<tr><td>服务主机</td><td>内网(仅主机模式)</td><td>外网(NAT模式)</td><td>网关</td></tr><tr><td>LVS</td><td></td><td>ens33:192.168.100.252/24<br>ens33:0:192.168.100.253/24<br></td><td>ens33:(VM8)192.168.100.1</td></tr><tr><td>LVS2</td><td></td><td>ens33:192.168.100.254/24<br>ens33:0:192.168.100.253/24<br></td><td>ens33:(VM8)192.168.100.1</td></tr><tr><td>RS</td><td>ens33:192.168.10.10/24</td><td>ens37:192.168.100.10/24</td><td>ens33:(VM1)192.168.10.1</td></tr><tr><td>RS2</td><td>ens33:192.168.10.11/24</td><td>ens37:192.168.100.11/24</td><td>ens33:(VM1)192.168.10.1</td></tr><tr><td>NFS</td><td>ens33:192.168.10.20/24</td><td></td><td>ens33:(VM1)192.168.10.1</td></tr></table><h3 id="配置主调度器"><a href="#配置主调度器" class="headerlink" title="配置主调度器"></a>配置主调度器</h3><p>漂移地址使用LVS群集的VIP地址.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line">#全局配置、热备配置</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_HA_R1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    <span class="keyword">interface</span> <span class="symbol">ens33</span></span><br><span class="line">    <span class="symbol">virtual_router_id</span> <span class="symbol">1</span></span><br><span class="line">    <span class="symbol">priority</span> <span class="symbol">100</span></span><br><span class="line">    <span class="symbol">advert_int</span> <span class="symbol">1</span></span><br><span class="line">    <span class="symbol">authentication</span> &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">123456</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Web服务器池配置</span><br><span class="line">virtual_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span> <span class="number">80</span> &#123;</span><br><span class="line">    delay_loop <span class="number">6</span></span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    persistence_timeout <span class="number">30</span></span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.30</span> <span class="number">80</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_port <span class="number">80</span></span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            nb_get_retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.40</span> <span class="number">80</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_port <span class="number">80</span></span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            nb_get_retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">systemctl start keepalived</span><br></pre></td></tr></table></figure><h3 id="配置从调度器"><a href="#配置从调度器" class="headerlink" title="配置从调度器"></a>配置从调度器</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line">#全局配置、热备配置</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_HA_R2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    <span class="keyword">interface</span> <span class="symbol">ens33</span></span><br><span class="line">    <span class="symbol">virtual_router_id</span> <span class="symbol">1</span></span><br><span class="line">    <span class="symbol">priority</span> <span class="symbol">90</span></span><br><span class="line">    <span class="symbol">advert_int</span> <span class="symbol">1</span></span><br><span class="line">    <span class="symbol">authentication</span> &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">123456</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Web服务器池配置</span><br><span class="line">virtual_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span> <span class="number">80</span> &#123;</span><br><span class="line">    delay_loop <span class="number">6</span></span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    persistence_timeout <span class="number">30</span></span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.30</span> <span class="number">80</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_port <span class="number">80</span></span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            nb_get_retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server <span class="number">192.168</span><span class="number">.100</span><span class="number">.40</span> <span class="number">80</span> &#123;</span><br><span class="line">        weight <span class="number">1</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_port <span class="number">80</span></span><br><span class="line">            connect_timeout <span class="number">3</span></span><br><span class="line">            nb_get_retry <span class="number">3</span></span><br><span class="line">            delay_before_retry <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">systemctl start keepalived</span><br></pre></td></tr></table></figure><h3 id="NFS和节点服务器配置"><a href="#NFS和节点服务器配置" class="headerlink" title="NFS和节点服务器配置"></a>NFS和节点服务器配置</h3><p><a href="http://www.mengyun.ink/2020/08/11/LVS%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%BE%A4%E9%9B%86/#%E9%85%8D%E7%BD%AENFS%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">后续配置 -&gt; LVS负载均衡群集</a></p><h3 id="测试高可用群集"><a href="#测试高可用群集" class="headerlink" title="测试高可用群集"></a>测试高可用群集</h3><p>客户端进行访问</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">curl</span> <span class="string">http://漂移IP地址:80</span></span><br><span class="line"><span class="attr">ifconfig</span> <span class="string">ens33 down</span></span><br><span class="line"><span class="attr">ifconfig</span> <span class="string">ens33 up</span></span><br><span class="line"><span class="attr">ip</span> <span class="string">addr show dev ens33</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;Keepalived起初是专门针对LVS设计的一款强大的辅助工具, 主要用来提供故障切换(Failover)和健康检查(Health Checking)功能–判断LVS负载调度器、节点服务器的可用性, 及时隔离并替换为新的服务器, 当故障主机恢复后将其重新加入群集.&lt;/p&gt;
&lt;h1 id=&quot;Keepalived概述及安装&quot;&gt;&lt;a href=&quot;#Keepalived概述及安装&quot; class=&quot;headerlink&quot; title=&quot;Keepalived概述及安装&quot;&gt;&lt;/a&gt;Keepalived概述及安装&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.keepalived.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Keepalived的官方网站&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Keepalived的热备方式&quot;&gt;&lt;a href=&quot;#Keepalived的热备方式&quot; class=&quot;headerlink&quot; title=&quot;Keepalived的热备方式&quot;&gt;&lt;/a&gt;Keepalived的热备方式&lt;/h2&gt;&lt;p&gt;Keepalived采用VRRP(Virtual Router Redundancy Protocol, 虚拟路由冗余协议)热备份协议, 以软件的方式实现Linux服务器的多机热备功能.&lt;/p&gt;
&lt;p&gt;VRRP是针对路由器的一种备份解决方案：由多台路由器组成一个热备组, 通过共用的虚拟IP地址对外提供服务;&lt;br&gt;每个热备组内同一时刻只有一台主路由器提供服务, 其他路由器处于冗余状态, 若当前在线的路由器失效, 则其他路由器会自动接替(优先级决定接替顺序)虚拟IP地址, 以继续提供服务.&lt;/p&gt;
&lt;p&gt;热备组内的每台路由器都可能成为主路由器, 虚拟路由器的IP地址(VIP)可以在热备组内的路由器之间进行转移, 所以也称为漂移IP地址, 使用Keepalived时, 漂移地址的实现不需要手动建立虚接口配置文件, 而是由Keepalived根据配置文件自动管理.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/a09398aa/Keepalived的VRRP热备机制.jpg&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Keepalived" scheme="http://www.mengyun.club/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>LVS负载均衡群集</title>
    <link href="http://www.mengyun.club/post/9e53707d/"/>
    <id>http://www.mengyun.club/post/9e53707d/</id>
    <published>2020-08-11T06:12:14.000Z</published>
    <updated>2020-09-18T01:28:42.231Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="群集技术概述"><a href="#群集技术概述" class="headerlink" title="群集技术概述"></a>群集技术概述</h1><h2 id="群集类型"><a href="#群集类型" class="headerlink" title="群集类型"></a>群集类型</h2><p>负载均衡群集(Load Balance Cluster)<br>高可用群集(High Availability Cluster)<br>高性能运算群集(High Performance Computer Cluster)</p><h2 id="负载均衡的分层结构"><a href="#负载均衡的分层结构" class="headerlink" title="负载均衡的分层结构"></a>负载均衡的分层结构</h2><table><tr><td><img src="/post/9e53707d/分层结构图.jpg"></td></tr></table><table><tr><td>第一层</td><td>负载调度器:访问整个群集系统的唯一入口, 对外使用群集IP地址.所有服务器共有的VIP(Virtual IP)虚拟IP地址</td></tr><tr><td>第二层</td><td>服务器池:群集所提供的应用服务由服务器池承担, 其中的每个节点具有独立的RIP(Real IP, 真实IP)地址, 只处理调度器分发过来的客户机请求.当某个节点暂时失效时, 负载调度器的容错机制会将其隔离, 等待错误排除以后再重新纳入服务器池.</td></tr><tr><td>第三层</td><td>共享存储:为服务器池中的所有节点提供稳定、一致的文件存取服务, 确保整个群集的统一性.</td></tr></table><a id="more"></a><h2 id="负载均衡的工作模式"><a href="#负载均衡的工作模式" class="headerlink" title="负载均衡的工作模式"></a>负载均衡的工作模式</h2><p>地址转换(Network Address Translation):简称NAT模式</p><table><tr><td><img src="/post/9e53707d/LVS-NAT.png" width="593"></td></tr></table><p>IP隧道(IP Tunnel):简称TUN模式</p><table><tr><td><img src="/post/9e53707d/LVS-TUN.png" width="593"></td></tr></table><p>直接路由(Direct Routing):简称DR模式</p><table><tr><td><img src="/post/9e53707d/LVS-DR.png" width="593"></td></tr></table><h1 id="LVS虚拟服务器"><a href="#LVS虚拟服务器" class="headerlink" title="LVS虚拟服务器"></a>LVS虚拟服务器</h1><p>Linux Virtual Server(LVS)是针对Linux内核开发的一个负载均衡项目, LVS现在已成为Linux内核的一部分, , 默认编译为ip-vs模块, 必要时能够自动调用.<br>手动加载ip-vs模块和查看ipvs版本信息</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">modprobe</span> <span class="string">ip_vs</span></span><br><span class="line"><span class="attr">cat</span> <span class="string">/proc/net/ip_vs</span></span><br></pre></td></tr></table></figure><h2 id="LVS的负载调度算法"><a href="#LVS的负载调度算法" class="headerlink" title="LVS的负载调度算法"></a>LVS的负载调度算法</h2><p>最常用的四种算法包括轮询、加权轮询、最少连接和加权最少连接</p><p>轮询(Round Robin):将收到的访问请求按照顺序轮流分配给群集中的各节点(真实服务器), 均等地对待每一台服务器, 而不管服务器实际的连接数和系统负载.</p><p>加权轮询(Weighted Round Robin):根据真实服务器的处理能力轮流分配收到的访问请求, 调度器可以自动查询各节点的负载情况, 并动态调整其权重.<br>这样可以保证处理能力强的服务器承担更多的访问流量.</p><p>最少连接(Least Connections):根据真实服务器已建立的连接数进行分配, 将收到的访问请求优先分配给连接数最少的节点.如果所有的服务器节点性能相近, 采用这种方式可以更好地均衡负载.</p><p>加权最少连接(Weighted Least Connections):在服务器节点的性能差异较大的情况下, 可以为真实服务器自动调整权重, 权重较高的节点将承担更大比例的活动连接负载</p><h2 id="使用ipvsadm管理工具"><a href="#使用ipvsadm管理工具" class="headerlink" title="使用ipvsadm管理工具"></a>使用ipvsadm管理工具</h2><p>ipvsadm是在负载调度器上使用的LVS群集管理工具, 通过调用ip-vs模块来添加、删除服务器节点, 以及查看群集的运行状态.</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">-y install ipvsadm</span></span><br><span class="line"><span class="attr">ipvsadm</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><p>LVS群集的管理工作主要包括创建虚拟服务器、添加服务器节点、查看群集节点状态删除服务器节点和保存负载分配策略</p><h3 id="创建虚拟服务器"><a href="#创建虚拟服务器" class="headerlink" title="创建虚拟服务器"></a>创建虚拟服务器</h3><pre>ipvsadm -A -t vip地址:80 -s rr |__ -A 添加虚拟服务器 |__ -t 指定VIP地址及TCP端口， |__ -s 指定负载调度算法    |__ 轮询(rr)    |__ 加权轮询(wrr)    |__ 最少连接(1c)    |__ 加权最少连接(wlc)</pre><h3 id="添加服务器节点"><a href="#添加服务器节点" class="headerlink" title="添加服务器节点"></a>添加服务器节点</h3><pre>ipvsadm -a -t vip地址:80 -r rip地址:80 -m -w 1ipvsadm -a -t vip地址:80 -r rip2地址:80 -m -w 1... |__ -a 表示添加真实服务器 |__ -t 用来指定VIP地址及TCP端口 |__ -r 用来指定RIP地址及TCP端口 |__ -m 使用NAT模式 |__ -g DR模式 |__ -i TUN模式 |__ -w 用来设置权重(权重为0时表示暂停节点)</pre><h3 id="查看群集节点状态"><a href="#查看群集节点状态" class="headerlink" title="查看群集节点状态"></a>查看群集节点状态</h3><pre>ipvsadm -ln |__ -l 列表查看LVS虚拟服务器 |__ -n 以数字形式显示地址、端口等信息 </pre><p>Forward列下的Masq对应Masquerade(地址伪装), 表示采用为群集模式为NAT.<br>对应Route, 则表示采用的群集模式为DR.</p><h3 id="删除服务器节点"><a href="#删除服务器节点" class="headerlink" title="删除服务器节点"></a>删除服务器节点</h3><pre>ipvsadm -d -r rip地址:80 -t vip地址:80 |__ -d 从服务器池中删除某一个节点ipvsadm -D -t 172.16.16.172：80 |__ -D 删除整个虚拟服务器</pre><h3 id="保存负载分配策略"><a href="#保存负载分配策略" class="headerlink" title="保存负载分配策略"></a>保存负载分配策略</h3><pre>ipvsadm-save > /etc/sysconfig/ipvsadm保存LVS策略cat /etc/sysconfig/ipvsadmservice ipvsadm stopservice ipvsadm start</pre><h1 id="构建LVS负载均衡群集"><a href="#构建LVS负载均衡群集" class="headerlink" title="构建LVS负载均衡群集"></a>构建LVS负载均衡群集</h1><h2 id="LVS-NAT"><a href="#LVS-NAT" class="headerlink" title="LVS-NAT"></a>LVS-NAT</h2><p>准备搭建环境:</p><table><tr><td>服务主机</td><td>内网(仅主机模式)</td><td>外网(NAT模式)</td><td>网关</td></tr><tr><td>LVS</td><td>ens33:192.168.10.254/24</td><td>ens37:192.168.100.254/24</td><td></td></tr><tr><td>RS</td><td>ens33:192.168.10.10/24</td><td></td><td>192.168.10.254</td></tr><tr><td>RS2</td><td>ens33:192.168.10.11/24</td><td></td><td>192.168.10.254</td></tr><tr><td>NFS</td><td>ens33:192.168.10.20/24</td><td></td><td>192.168.10.254</td></tr></table><h3 id="配置负载调度器"><a href="#配置负载调度器" class="headerlink" title="配置负载调度器"></a>配置负载调度器</h3><p>1.手动开启ip_vs模块并安装ipvsadm管理工具</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">modprobe</span> <span class="string">ip_vs</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">-y install ipvsadm</span></span><br></pre></td></tr></table></figure><p>2.配置SNAT转发规则</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_vs</span><br><span class="line">yum -y install ipvsadm</span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line">    net.ipv4.ip_forward = 1</span><br><span class="line">sysctl -p</span><br><span class="line">iptables -t<span class="built_in"> nat </span>-A POSTROUTING -s 192.168.10.254/24 -o ens37 -j SNAT --to-source 192.168.100.254</span><br></pre></td></tr></table></figure><p>3.配置负载分配策略</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service ipvsadm stop</span><br><span class="line">ipvsadm -A -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.254</span>:<span class="number">80</span> -s rr </span><br><span class="line">ipvsadm -a -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.254</span>:<span class="number">80</span> -r <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>:<span class="number">80</span> -m -w <span class="number">1</span></span><br><span class="line">ipvsadm -a -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.254</span>:<span class="number">80</span> -r <span class="number">192.168</span><span class="number">.10</span><span class="number">.11</span>:<span class="number">80</span> -m -w <span class="number">1</span></span><br><span class="line">service ipvsadm save</span><br><span class="line">chkconfig ipvsadm on</span><br><span class="line">ipvsadm -ln</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="配置NSF服务器"><a href="#配置NSF服务器" class="headerlink" title="配置NSF服务器"></a>配置NSF服务器</h3><p>1.安装rpcbind和nfs</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> rpcbind nfs-utils</span><br></pre></td></tr></table></figure><p>2.创建共享目录和访问控制</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">cat &gt; /etc/exports &lt;&lt;-EOF</span><br><span class="line">/data1 <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span>(rw)</span><br><span class="line">/data2 <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span>(rw)</span><br><span class="line">EOF</span><br><span class="line">echo “This <span class="keyword">is</span> apache1” &gt; /data1/index.html</span><br><span class="line">echo “This <span class="keyword">is</span> apache2” &gt; /data2/index.html</span><br></pre></td></tr></table></figure><p>3.开启共享</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop firewalld</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start rpcbind nfs</span></span><br><span class="line"><span class="attr">showmount</span> <span class="string">-e</span></span><br></pre></td></tr></table></figure><h3 id="配置节点服务器"><a href="#配置节点服务器" class="headerlink" title="配置节点服务器"></a>配置节点服务器</h3><p>1.安装httpd,创建测试网页.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd</span><br><span class="line">mount <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span>:/data1 /var/www/html</span><br><span class="line">mount <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span>:/data2 /var/www/html</span><br><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure><p>2.启用httpd服务程序</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">start</span> httpd</span><br><span class="line">systemctl <span class="built_in">stop</span> firewalld</span><br><span class="line">chkconfig httpd <span class="keyword">on</span></span><br></pre></td></tr></table></figure><p>3.客户端进行访问, 测试LVS群集.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">http:</span><span class="comment">//192.168.100.254:80</span></span><br></pre></td></tr></table></figure><h2 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS-DR"></a>LVS-DR</h2><p>准备搭建环境:</p><table><tr><td>服务主机</td><td>内网(仅主机模式)</td><td>外网(NAT模式)</td><td>网关</td></tr><tr><td>LVS</td><td></td><td>ens33:192.168.100.254/24<br>ens33:0:192.168.100.253/24<br></td><td></td></tr><tr><td>RS</td><td>ens33:192.168.10.10/24</td><td>ens37:192.168.100.10/24</td><td>ens33:(VM1)192.168.10.1</td></tr><tr><td>RS2</td><td>ens33:192.168.10.11/24</td><td>ens37:192.168.100.11/24</td><td>ens33:(VM1)192.168.10.1</td></tr><tr><td>NFS</td><td>ens33:192.168.10.20/24</td><td></td><td>ens33:(VM1)192.168.10.1</td></tr></table><h3 id="配置负载调动器"><a href="#配置负载调动器" class="headerlink" title="配置负载调动器"></a>配置负载调动器</h3><p>1.手动开启ip_vs模块并安装ipvsadm管理工具</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">modprobe</span> <span class="string">ip_vs</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">-y install ipvsadm</span></span><br></pre></td></tr></table></figure><p>2.配置虚拟IP地址(VIP)</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig ens33:<span class="number">0</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span>/<span class="number">24</span> up</span><br></pre></td></tr></table></figure><p>3.配置</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -C</span><br><span class="line">ipvsadm -A -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span>:<span class="number">80</span> -s rr</span><br><span class="line">ipvsadm -a -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span>:<span class="number">80</span> -r <span class="number">192.168</span><span class="number">.100</span><span class="number">.10</span>:<span class="number">80</span> -g</span><br><span class="line">ipvsadm -a -t <span class="number">192.168</span><span class="number">.100</span><span class="number">.253</span>:<span class="number">80</span> -r <span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span>:<span class="number">80</span> -g</span><br><span class="line">ipvsadm-save</span><br><span class="line">chkconfig ipvsadm on</span><br><span class="line">ipvsadm -ln</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="配置NFS服务器"><a href="#配置NFS服务器" class="headerlink" title="配置NFS服务器"></a>配置NFS服务器</h3><p>1.安装rpcbind和nfs</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> rpcbind nfs-utils</span><br></pre></td></tr></table></figure><p>2.创建共享目录和访问控制</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">cat &gt; /etc/exports &lt;&lt;-EOF</span><br><span class="line">/data1 <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span>(rw)</span><br><span class="line">/data2 <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span>(rw)</span><br><span class="line">EOF</span><br><span class="line">echo “This <span class="keyword">is</span> apache1” &gt; /data1/index.html</span><br><span class="line">echo “This <span class="keyword">is</span> apache2” &gt; /data2/index.html</span><br></pre></td></tr></table></figure><p>3.开启共享</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop firewalld</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start rpcbind nfs</span></span><br><span class="line"><span class="attr">showmount</span> <span class="string">-e</span></span><br></pre></td></tr></table></figure><h3 id="配置节点服务器-1"><a href="#配置节点服务器-1" class="headerlink" title="配置节点服务器"></a>配置节点服务器</h3><p>1.配置虚拟IP地址(VIP)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig lo:0 192.168.100.253/32 up</span><br><span class="line">route <span class="builtin-name">add</span> -host 192.168.100.253 dev lo</span><br></pre></td></tr></table></figure><p>2.调整/proc响应参数</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">1</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>ipv4<span class="meta-keyword">/conf/</span>ens37/arp_ignore</span><br><span class="line">echo <span class="number">2</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>ipv4<span class="meta-keyword">/conf/</span>ens37/arp_announce</span><br><span class="line">echo <span class="number">1</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>ipv4<span class="meta-keyword">/conf/</span>all/arp_ignore</span><br><span class="line">echo <span class="number">2</span> &gt; <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>ipv4<span class="meta-keyword">/conf/</span>all/arp_announce</span><br></pre></td></tr></table></figure><p>3.安装httpd, 创建测试网页.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd</span><br><span class="line">mount <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span>:/data1 /var/www/html</span><br><span class="line">mount <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span>:/data2 /var/www/html</span><br><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure><p>4.启用httpd服务程序</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">start</span> httpd</span><br><span class="line">systemctl <span class="built_in">stop</span> firewalld</span><br><span class="line">chkconfig httpd <span class="keyword">on</span></span><br></pre></td></tr></table></figure><p>5.客户端进行访问, 测试LVS群集.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">http:</span><span class="comment">//192.168.100.253:80</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;群集技术概述&quot;&gt;&lt;a href=&quot;#群集技术概述&quot; class=&quot;headerlink&quot; title=&quot;群集技术概述&quot;&gt;&lt;/a&gt;群集技术概述&lt;/h1&gt;&lt;h2 id=&quot;群集类型&quot;&gt;&lt;a href=&quot;#群集类型&quot; class=&quot;headerlink&quot; title=&quot;群集类型&quot;&gt;&lt;/a&gt;群集类型&lt;/h2&gt;&lt;p&gt;负载均衡群集(Load Balance Cluster)&lt;br&gt;高可用群集(High Availability Cluster)&lt;br&gt;高性能运算群集(High Performance Computer Cluster)&lt;/p&gt;
&lt;h2 id=&quot;负载均衡的分层结构&quot;&gt;&lt;a href=&quot;#负载均衡的分层结构&quot; class=&quot;headerlink&quot; title=&quot;负载均衡的分层结构&quot;&gt;&lt;/a&gt;负载均衡的分层结构&lt;/h2&gt;&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/post/9e53707d/分层结构图.jpg&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;第一层&lt;/td&gt;&lt;td&gt;负载调度器:访问整个群集系统的唯一入口, 对外使用群集IP地址.所有服务器共有的VIP(Virtual IP)虚拟IP地址&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;第二层&lt;/td&gt;&lt;td&gt;服务器池:群集所提供的应用服务由服务器池承担, 其中的每个节点具有独立的RIP(Real IP, 真实IP)地址, 只处理调度器分发过来的客户机请求.当某个节点暂时失效时, 负载调度器的容错机制会将其隔离, 等待错误排除以后再重新纳入服务器池.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;第三层&lt;/td&gt;&lt;td&gt;共享存储:为服务器池中的所有节点提供稳定、一致的文件存取服务, 确保整个群集的统一性.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Apache" scheme="http://www.mengyun.club/tags/Apache/"/>
    
      <category term="Keepalived" scheme="http://www.mengyun.club/tags/Keepalived/"/>
    
      <category term="NFS" scheme="http://www.mengyun.club/tags/NFS/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat服务器</title>
    <link href="http://www.mengyun.club/post/36f957e6/"/>
    <id>http://www.mengyun.club/post/36f957e6/</id>
    <published>2020-08-05T14:00:33.000Z</published>
    <updated>2020-09-06T04:39:18.460Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Tomcat服务器是一个免费的开放源代码的web应用服务器, 属于轻量级应用级服务器, 在中小型系统和并发访问用户不是很多的场合下被普遍使用, 是开放和调试JSP程序的首先.</p><p>Tomcat和Nginx、Apache(httpd)、lighttpd等Web服务器一样, 具有处理HTML页面的功能, 另外它还是一个Servlet和JSP容器, 独立的Servlet容器是Tomcat的默认模式. 但Tomcat处理静态HTML的能力不如Nginx/Apache服务器.</p><p><strong>Servlet</strong>:Server Applet是Java Servlet的简称, 称为小服务程序或服务连接器, 用Java编写的服务器端程序, 具有独立于平台和协议的特性, 主要功能在于交互式地浏览和生成数据, 生成动态Web内容.<br><strong>JSP</strong>:全称Java Server Pages, 是一种动态网页开发技术, 主要用于实现Java web应用程序的用户界面部分.</p><p><a href="http://tomcat.apache.org" target="_blank" rel="noopener">Tomcat官网地址</a></p><a id="more"></a><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>JDK是Java语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的Java应用程序. JDK是整个Java开发的核心, 它包含了Java的运行环境(JVM+Java系统库)和Java工具.</p><table>JDK包含了一批用于Java开发的组件, 存放在bin目录中, 其中包括:<tr><td>apt</td><td>注释处理工具</td></tr><tr><td>appletviewer</td><td>运行和调试applet程序的工具, 不需要使用浏览器.</td></tr><tr><td>extcheck</td><td>一个检测jar包冲突的工具</td></tr><tr><td>idlj</td><td>IDL-to-Java编译器, 将IDL语言转化为java文件.</td></tr><tr><td>jar</td><td>打包工具, 将相关的类文件打包成一个文件.</td></tr><tr><td>java</td><td>运行工具, 运行.class的字节码.</td></tr><tr><td>javac</td><td>编译器, 将后缀名为.java的源代码编译成后缀名为".class"的字节码.</td></tr><tr><td>javadoc</td><td>文档生成器, 从源码注释中提取文档, 注释需匹配规范.</td></tr><tr><td>javah</td><td>从Java类生成C头文件和C源文件, 这些文件提供了连接胶合, 使Java和C代码可进行交互.</td></tr><tr><td>javap</td><td>反编译程序</td></tr><tr><td>javaws</td><td>运行JNLP程序</td></tr><tr><td>jdb</td><td>调试工具</td></tr><tr><td>jhat</td><td>java堆分析工具</td></tr><tr><td>jinfo</td><td>获取正在运行或崩溃的java程序配置信息</td></tr><tr><td>jmap</td><td>获取java进程内存映射信息</td></tr><tr><td>jps</td><td>显示当前java程序运行的进程状态</td></tr><tr><td>jrunscript</td><td>命令行脚本运行</td></tr><tr><td>jstack</td><td>栈跟踪程序</td></tr><tr><td>jstat</td><td>JVM检测统计工具</td></tr><tr><td>jstatd</td><td>jstat守护进程</td></tr><tr><td>policytool</td><td>一个GUI的策略文件创建和管理工具</td></tr></table><h2 id="安装JDK-amp-Tomcat"><a href="#安装JDK-amp-Tomcat" class="headerlink" title="安装JDK&amp;Tomcat"></a>安装JDK&amp;Tomcat</h2><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><p>查看系统版本号: <code>cat /etc/redhat-release</code><br>查看系统内核: <code>uname -a</code><br>关闭SeLinux: </p><pre> vim /etc/sysconfig/selinux   SELINUX=disabled setenforce 0</pre><p>关闭防火墙: </p><pre> systemctl stop firewalld systemctl disable firewalld</pre><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>安装包:jdk-8u251-linux-x64.tar.gz</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir /application</span><br><span class="line">tar zxf jdk-8u251-linux-x64.tar.gz -C /application/</span><br><span class="line">mv /application/jdk1.8.0_60 /application/jdk</span><br><span class="line">cat &gt;&gt; /etc<span class="built_in">/profile </span>&lt;&lt;-EOF</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/application/jdk</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$JAVA_HOME</span>/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line">EOF</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><p>安装包:apache-tomcat-8.5.42.tar.gz</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxf apache-tomcat-8.5.42.tar.gz -C /application/</span><br><span class="line">mv /application/apache-tomcat-8.5.42 /application/tomcat</span><br><span class="line">echo <span class="string">'export TOMCAT_HOME=/application/tomcat'</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line">chown -R root.root /application/jdk/ /application/tomcat/</span><br></pre></td></tr></table></figure><p>检查Tomcat是否安装成功<br><code>/application/tomcat/bin/version.sh</code></p><pre>Using CATALINA_BASE:   /application/tomcatUsing CATALINA_HOME:   /application/tomcatUsing CATALINA_TMPDIR: /application/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /application/tomcat/bin/bootstrap.jar:/application/tomcat/bin/tomcat-juli.jarServer version: Apache Tomcat/9.0.34Server built:   Apr 3 2020 12:02:52 UTCServer number:  9.0.34.0OS Name:        LinuxOS Version:     3.10.0-862.el7.x86_64Architecture:   amd64JVM Version:    1.8.0_161-b14JVM Vendor:     Oracle Corporation</pre><h2 id="Tomcat目录介绍"><a href="#Tomcat目录介绍" class="headerlink" title="Tomcat目录介绍"></a>Tomcat目录介绍</h2><h3 id="tomcat主目录介绍"><a href="#tomcat主目录介绍" class="headerlink" title="tomcat主目录介绍"></a>tomcat主目录介绍</h3><p><code>cd /application/tomcat/</code></p><pre>.├── bin <font color="green">#tomcat管理脚本存放目录</font>├── BUILDING.txt├── conf <font color="green">#tomcat配置文件存放目录</font>├── CONTRIBUTING.md├── lib <font color="green">#web应用调用的jar包存放路径</font>├── LICENSE├── logs <font color="green">#tomcat日志存放目录</font>├── NOTICE├── README.md├── RELEASE-NOTES├── RUNNING.txt├── temp <font color="green">#临时文件存放目录</font>├── webapps <font color="green">#web程序存放目录</font>└── work <font color="green">#.java和.class文件存放目录</font></pre><h3 id="webapps目录介绍"><a href="#webapps目录介绍" class="headerlink" title="webapps目录介绍"></a>webapps目录介绍</h3><p><code>cd webapps/</code></p><pre>.├── docs <font color="green">#tomcat帮助文档目录</font>├── examples <font color="green">#web应用实例目录</font>├── host-manager <font color="green">#主机管理目录</font>├── manager <font color="green">#管理目录</font>└── ROOT <font color="green">#默认站点根目录</font></pre><h3 id="conf目录介绍"><a href="#conf目录介绍" class="headerlink" title="conf目录介绍"></a>conf目录介绍</h3><p><code>cd conf/</code></p><pre>.├── Catalina├── catalina.policy <font color="green">#权限控制配置文件</font>├── catalina.properties <font color="green">#Tomcat属性配置文件</font>├── context.xml <font color="green">#上下文配置文件</font>├── jaspic-providers.xml├── jaspic-providers.xsd├── logging.properties <font color="green">#日志log相关配置文件</font>├── server.xml <font color="green">#tomcat#主配置文件</font>├── tomcat-users.xml <font color="green">#tomcat管理用户配置文件</font>├── tomcat-users.xsd└── web.xml <font color="green">#Tomcat的servlet、servlet-mapping、filter、MIME等相关配置</font></pre><h2 id="Tomcat运维"><a href="#Tomcat运维" class="headerlink" title="Tomcat运维"></a>Tomcat运维</h2><h3 id="Tomcat启动"><a href="#Tomcat启动" class="headerlink" title="Tomcat启动"></a>Tomcat启动</h3><p><code>/application/tomcat/bin/startup.sh</code></p><pre>Using CATALINA_BASE:   /application/tomcatUsing CATALINA_HOME:   /application/tomcatUsing CATALINA_TMPDIR: /application/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /application/tomcat/bin/bootstrap.jar:/application/tomcat/bin/tomcat-juli.jarTomcat started.</pre><h3 id="Tomcat停止"><a href="#Tomcat停止" class="headerlink" title="Tomcat停止"></a>Tomcat停止</h3><p><code>/application/tomcat/bin/shutdown.sh</code></p><pre>Using CATALINA_BASE:   /application/tomcatUsing CATALINA_HOME:   /application/tomcatUsing CATALINA_TMPDIR: /application/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /application/tomcat/bin/bootstrap.jar:/application/tomcat/bin/tomcat-juli.jar</pre><h3 id="Tomcat检测"><a href="#Tomcat检测" class="headerlink" title="Tomcat检测"></a>Tomcat检测</h3><p><code>netstat -lntup | grep java</code></p><pre>tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      7522/java           tcp6       0      0 :::8080                 :::*                    LISTEN      7522/java</pre><h3 id="Tomcat日志"><a href="#Tomcat日志" class="headerlink" title="Tomcat日志"></a>Tomcat日志</h3><p>实时查看: <code>tail -f /application/tomcat/logs/catalina.out</code></p><h3 id="Tomcat管理功能"><a href="#Tomcat管理功能" class="headerlink" title="Tomcat管理功能"></a>Tomcat管理功能</h3><p><font color="red">注意:测试功能, 生产环境不要用.</font></p><p>Tomcat管理功能用于对Tomcat自身以及部署在Tomcat上的应用进行管理的web应用. 在默认情况下是处于禁用状态的. 如果需要开启这个功能, 就需要配置管理用户, 即配置tomcat-users.xml文件.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /application/tomcat/conf/tomcat-users.xml</span><br><span class="line">  &lt;<span class="keyword">role</span> rolename="manager-gui"/&gt;</span><br><span class="line">  &lt;<span class="keyword">role</span> rolename="admin-gui"/&gt;</span><br><span class="line">  &lt;<span class="keyword">user</span> username="tomcat" <span class="keyword">password</span>="tomcat" roles="manager-gui,admin-gui"/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;#在此行前加入上面三行</span><br></pre></td></tr></table></figure><p>需要注释一下内容:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /application/tomcat/webapps/manager/META-INF/context.xml</span><br><span class="line">  &lt;!-- &lt;Valve className=<span class="string">"org.apache.catalina.valves.RemoteAddrValve allow="</span><span class="number">127</span>\.\d+\.\d+\.\d+<span class="number">1</span>::<span class="number">1</span>|<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span><span class="string">" /&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>验证效果:输入ip地址:8080 -&gt; Manager App -&gt; 输入用户名与密码</p><h2 id="Tomcat主配置文件详解"><a href="#Tomcat主配置文件详解" class="headerlink" title="Tomcat主配置文件详解"></a>Tomcat主配置文件详解</h2><h3 id="server-xml组件类别"><a href="#server-xml组件类别" class="headerlink" title="server.xml组件类别"></a>server.xml组件类别</h3><p>顶级组件:位于整个配置的顶层 <font color="green">#server</font><br>容器类组件:可以包含其它组件的组件 <font color="green">#service、engine、host、context</font><br>连接器组件:连接用户请求至tomcat <font color="green">#connector</font><br>被嵌套类组件:位于一个容器当中, 不能包含其他组件. <font color="green">#Valve、logger</font></p><pre>&lt;server&gt; | &lt;service&gt; |  | &lt;connector/&gt; |  | &lt;engine&gt; |  |  | &lt;host&gt; |  |  |   &lt;context&gt;&lt;/context&gt; |  |  | &lt;/host&gt; |  |  | &lt;host&gt; |  |  |   &lt;context&gt;&lt;/context&gt; |  |  | &lt;/host&gt; |  | &lt;/enginex&gt; | &lt;/service&gt;&lt;/server&gt;</pre><h3 id="组件介绍"><a href="#组件介绍" class="headerlink" title="组件介绍"></a>组件介绍</h3><table>组件名称功能介绍<tr><td>engine</td><td>核心容器组件,catalina引擎,负责通过connector接收用户请求,并处理请求,将请求转至对应的虚拟主机host.</td></tr><tr><td>host</td><td>类似于httpd中的虚拟主机,一般而言带寺基于FQDN的虚拟主机.</td></tr><tr><td>context</td><td>定义一个应用程序,是一个最内层的容器类组件(不能再嵌套).配置context的主要目的指定对应对的webapp的根目录,类似于httpd的alias,其还能为webapp指定额外的属性,如部罢方式等.</td></tr><tr><td>connector</td><td>接收用户请求,类似于httpd的listen配置监听端口的.</td></tr><tr><td>service</td><td>将connector关联至engine,因此一个service内部可以有多个connector,但只能有一个引擎engine.service内部有两个connector,一个engine.因此,一般情况下一个server内部只有一个service,一个service内部只有一个engine,但一个service内部可以有多个connector.</td></tr><tr><td>server</td><td>表示一个运行于JVM中的tomcat实例</td></tr><tr><td>Valve</td><td>阀门,拦截请求并在将其转至对应的webapp前进行某种处理操作,可以用于任何容器中,比如记录日志(access log valve)、基于IP做访问控制(remote address filter valve).</td></tr><tr><td>logger</td><td>日志记录器,用于记录组件内部的状态信息,可以用于除context外的任何容器中.</td></tr><tr><td>realm</td><td>可以用于任意容器类的组件中,关联一个用户认证库,实现认证和授权.可以关联的认证库有两种:UserDatabaseRealm、MemoryRealm和JDBCRealm.</td></tr><tr><td>UserDatabaseRealm</td><td>使用JNDI自定义的用户认证库</td></tr><tr><td>MemoryRealm</td><td>认证信息定义在tomcat-users.xml中</td></tr><tr><td>JDBCRealm</td><td>认证信息定义在数据库中,并通过JDBC连接至数据库中查找认证用户.</td></tr></table><h3 id="Connector主要参数说明"><a href="#Connector主要参数说明" class="headerlink" title="Connector主要参数说明"></a>Connector主要参数说明</h3><table><tr><td>connector</td><td>接收用户请求,类似于httpd的listen配置监听端口.</td></tr><tr><td>port</td><td>指定服务器端要创建的端口号,并在这个端口监听来自客户端的请求.</td></tr><tr><td>address</td><td>指定连接器监听的地址,默认为所有地址(即0.0.0.0).</td></tr><tr><td>protocol</td><td>连接器使用的协议,支持HTTP和AJP,AJP(Apache Jserv Protocol)专用于tomcat与apache建立通信的,在httpd反向代理用户请求至tomcat时使用(可见Nginx反向代理时不可用AJP协议).</td></tr><tr><td>minProcessors</td><td>服务器启动时创建的处理请求的线程数</td></tr><tr><td>maxProcessors</td><td>最大可以创建的处理请求的线程数</td></tr><tr><td>enableLookups</td><td>如果为true,则可以通过调用request.getRemoteHost()进行DNS查询来得到远程客户端的实际主机名,若为false则不进行DNS查询,而是返回其ip地址.</td></tr><tr><td>redirectPort</td><td>指定服务器正在处理http请求时收到了一个SSL传输请求后重定向的端口号</td></tr><tr><td>acceptCount</td><td>指定当所有可以使用的处理请求的线程数都被使用时,可以放到处理队列中的请求数,超过这个数的请求将不予处理.</td></tr><tr><td>connectionTimeout</td><td>指定超时的时间数(以毫秒为单位)</td></tr></table><h3 id="host参数说明"><a href="#host参数说明" class="headerlink" title="host参数说明"></a>host参数说明</h3><table><tr><td>host</td><td>表示一个虚拟主机</td></tr><tr><td>name</td><td>指定主机名</td></tr><tr><td>appBase</td><td>应用程序基本目录,即存放应用程序的目录.一般为appBase="webapps",相对于CATALINA_HOME而言的,也可以写绝对路径.</td></tr><tr><td>unpackWARs</td><td>如果为true,则tomcat会自动将WAR文件解压,否则不解压,直接从WAR文件中运行应用程序.</td></tr><tr><td>autoDeploy</td><td>在tomcat启动时,是否自动部罢.</td></tr><tr><td>xmlValidation</td><td>是否启动xml的校验功能,一般xmlValidation="false".</td></tr><tr><td>xmlNamespaceAware</td><td>检测名称空间,一般xmlNamespaceAware="false".</td></tr></table><h3 id="Context参数说明"><a href="#Context参数说明" class="headerlink" title="Context参数说明"></a>Context参数说明</h3><table><tr><td>Context</td><td>表示一个web应用程序,通常为WAR文件.</td></tr><tr><td>docBase</td><td>应用程序的路径或者是WAR文件存放的路径,也可以使用相对路径,起始路径为此Context所属Host中appBase定义的路径.</td></tr><tr><td>path</td><td>表示此web应用程序的url的前缀,这样请求的url为http://localhost:8080/path/.</td></tr><tr><td>reloadable</td><td>这个属性非常重要,如果为true,则tomcat会自动检测应用程序的/WEB-INF/lib和/WEB-INF/classes目录的变化,自动装载新的应用程序,可以在不重启tomcat的情况下改变应用程序.</td></tr></table><h2 id="Web站点部署"><a href="#Web站点部署" class="headerlink" title="Web站点部署"></a>Web站点部署</h2><h3 id="使用war包部署web站点"><a href="#使用war包部署web站点" class="headerlink" title="使用war包部署web站点"></a>使用war包部署web站点</h3><p>将准备的war包上传到服务中</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/application/tomcat/webapps/</span></span><br><span class="line">rm -rf ROOT/*</span><br><span class="line">cp <span class="string">/root/jpress-v2.0.8.war</span> .</span><br><span class="line"><span class="string">/app1ication/tomcat/bin/startup.sh</span></span><br><span class="line"><span class="keyword">ls</span> -l</span><br><span class="line">cp -r jpress-v2.0.8/* ROOT/</span><br></pre></td></tr></table></figure><p>浏览器访问:<code>http://ip地址:8080</code></p><h3 id="自定义默认网站目录"><a href="#自定义默认网站目录" class="headerlink" title="自定义默认网站目录"></a>自定义默认网站目录</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /application/tomcat/conf/server.xml +<span class="number">150</span></span><br><span class="line">  .....</span><br><span class="line">  &lt;Context path=<span class="string">""</span> docBase=<span class="string">"/application/tomcat/webapps/test"</span> delug=<span class="string">"0"</span></span><br><span class="line"> reloadable=<span class="string">"false"</span> crossContext=<span class="string">"true"</span> /&gt;</span><br><span class="line">  .....</span><br><span class="line">rm -rf jpress-v2<span class="number">.0</span><span class="number">.8</span>.war</span><br><span class="line">mkdir test</span><br><span class="line">mv  jpress-v2<span class="number">.0</span><span class="number">.8</span><span class="comment">/* test/</span></span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/application/</span>tomcat<span class="regexp">/bin/</span>shutdown.sh</span><br><span class="line"><span class="regexp">/application/</span>tomcat<span class="regexp">/bin/</span>startup.sh</span><br></pre></td></tr></table></figure><h2 id="Tomcat安全优化"><a href="#Tomcat安全优化" class="headerlink" title="Tomcat安全优化"></a>Tomcat安全优化</h2><h3 id="telnet管理端口保护-强制"><a href="#telnet管理端口保护-强制" class="headerlink" title="telnet管理端口保护(强制)"></a>telnet管理端口保护(强制)</h3><p>1.修改默认的8005管理端口管理为不易猜测的端口(大于1024)<br>2.修改SHUTDOWN指令为其他字符串</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Server <span class="attribute">port</span>=<span class="string">"8527"</span> <span class="attribute">shutdown</span>=<span class="string">"dangerous"</span>&gt;</span><br></pre></td></tr></table></figure><p>以上配置项的配置内容只是建议配置,可以按照服务实际情况进行合理配置,但要求端口配置在8000-8999之间.</p><h3 id="ajp连接端口保护-推荐"><a href="#ajp连接端口保护-推荐" class="headerlink" title="ajp连接端口保护(推荐)"></a>ajp连接端口保护(推荐)</h3><p>1.修改默认的ajp 8009端口为不易冲突的大于1024端口<br>2.通过iptables规则限制ajp端口访问的权限仅为线上机器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8528"</span> <span class="attribute">protocol</span>=<span class="string">"AJP/1.3"</span>/&gt;</span><br></pre></td></tr></table></figure><p>保护此端口的目的在于防止线下的测试流量被mod_jk转发至线上tomcat服务器<br>以上配置项的配置内容仅为建议配置,请按照服务实际情况进行合理配置,但要求<br>端口配置在8000-8999之间.</p><h3 id="禁用管理端-强制"><a href="#禁用管理端-强制" class="headerlink" title="禁用管理端(强制)"></a>禁用管理端(强制)</h3><p>1.删除默认的{Tomcat安装目录}/conf/tomcat-users.xml文件,重启tomcat后将会自动生<br>成新的文件.<br>2.删除{Tomcat安装目录}/webapps下默认的所有目录和文件<br>3.将tomcat应用根目录配置为tomcat安装目录以外的目录</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Host name=<span class="string">"localhost"</span> appBase=<span class="string">"/application/work/webapps"</span> ...</span><br><span class="line">mkdir -p <span class="regexp">/application/</span>work/webapps</span><br><span class="line">rm -rf <span class="regexp">/application/</span>tomcat<span class="regexp">/conf/</span>tomcat-users.xml</span><br><span class="line">rn -rf <span class="regexp">/application/</span>tomcat<span class="regexp">/webapps/</span>*</span><br></pre></td></tr></table></figure><p>对于前端web模块,Tomcat管理端属于tomcat的高危安全隐患,一旦被攻破,黑客通过上传web shell的方式将会直接取得服务器的控制权,后果极其严重.</p><h3 id="降权启动-强制"><a href="#降权启动-强制" class="headerlink" title="降权启动(强制)"></a>降权启动(强制)</h3><p>1.tomcat启动用户权限必须为非root权限,尽量降低tomcat启动用户的目录访问权限.<br>2.如需直接对外使用80端口,可通过普通账号启动后,配置iptables规则进行转发.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useradd tomcat</span><br><span class="line">mkdir <span class="regexp">/home/</span>tomcat -p</span><br><span class="line">cp -a <span class="regexp">/application/</span>tomcat <span class="regexp">/home/</span>tomcat/tomcat8_1</span><br><span class="line">chown -R tomcat.tomcat <span class="regexp">/home/</span>tomcat<span class="regexp">/tomcat8_1/</span></span><br><span class="line">su -c <span class="string">'/home/tomcat/tomcat8_1/bin/startup.sh'</span> tomcat</span><br><span class="line">ps -ef | grep tomcat</span><br></pre></td></tr></table></figure><p>避免一旦tomcat服务被入侵,黑客直接获取高级用户权限危害整个server的安全.</p><h3 id="文件列表访问控制-强制"><a href="#文件列表访问控制-强制" class="headerlink" title="文件列表访问控制(强制)"></a>文件列表访问控制(强制)</h3><p>1.conf/wep.xml文件中default部分listings的配置必须为false</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;init-<span class="built_in">param</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">param</span>-name&gt;</span><br><span class="line">    listings</span><br><span class="line">  &lt;/<span class="built_in">param</span>-name&gt;</span><br><span class="line">  &lt;<span class="built_in">param</span>-<span class="built_in">value</span>&gt;</span><br><span class="line">    <span class="literal">false</span></span><br><span class="line">  &lt;/<span class="built_in">param</span>-<span class="built_in">value</span>&gt;</span><br><span class="line">&lt;/init-<span class="built_in">param</span>&gt;</span><br></pre></td></tr></table></figure><p>false为不列出目录文件,true为允许列出,默认为false.</p><h3 id="版本信息隐藏-强制"><a href="#版本信息隐藏-强制" class="headerlink" title="版本信息隐藏(强制)"></a>版本信息隐藏(强制)</h3><p>1.修改conf/Web.xml,重定向403、404以及500等错误到指定的错误页面<br>2.也可以通过修改应用程序目录下的WEB-INF/web.xml下的配置进行错误页面的重定向</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>403<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/forbidden.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/notfound.jsp<span class="tag">&lt;/<span class="name">1ocation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/systembusy.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在配置中对一些常见错误进行重定向,避免当出现错误时tomcat默认显示的错误页面暴露服务器和版本信息.<br>必须确保程序根目录下的错误页面已经存</p><h2 id="Nginx-Tomcat负载均衡集群"><a href="#Nginx-Tomcat负载均衡集群" class="headerlink" title="Nginx + Tomcat负载均衡集群"></a>Nginx + Tomcat负载均衡集群</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>Tomcat:192.168.100.40/24<br>Tomcat2:192.168.100.50/24<br>Nginx:192.168.100.60/24</p><h3 id="Tomcat服务器配置"><a href="#Tomcat服务器配置" class="headerlink" title="Tomcat服务器配置"></a>Tomcat服务器配置</h3><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">vim index.jsp</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP test page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">out.println(<span class="string">"-------------------test-------------------"</span>);</span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">vim index.jsp</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP test2 page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">out.println(<span class="string">"-------------------test2-------------------"</span>);</span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Nginx服务器配置"><a href="#Nginx服务器配置" class="headerlink" title="Nginx服务器配置"></a>Nginx服务器配置</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line">  #gzip on;</span><br><span class="line">  upstream myjava &#123;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.100</span><span class="number">.50</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.100</span><span class="number">.40</span>:<span class="number">8080</span> weight=<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location / &#123; </span><br><span class="line">    ......</span><br><span class="line">    proxy_pass http:<span class="comment">//myjava;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>测试:在浏览器中输入Nginx服务器的ip地址</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Tomcat&quot;&gt;&lt;a href=&quot;#Tomcat&quot; class=&quot;headerlink&quot; title=&quot;Tomcat&quot;&gt;&lt;/a&gt;Tomcat&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Tomcat服务器是一个免费的开放源代码的web应用服务器, 属于轻量级应用级服务器, 在中小型系统和并发访问用户不是很多的场合下被普遍使用, 是开放和调试JSP程序的首先.&lt;/p&gt;
&lt;p&gt;Tomcat和Nginx、Apache(httpd)、lighttpd等Web服务器一样, 具有处理HTML页面的功能, 另外它还是一个Servlet和JSP容器, 独立的Servlet容器是Tomcat的默认模式. 但Tomcat处理静态HTML的能力不如Nginx/Apache服务器.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Servlet&lt;/strong&gt;:Server Applet是Java Servlet的简称, 称为小服务程序或服务连接器, 用Java编写的服务器端程序, 具有独立于平台和协议的特性, 主要功能在于交互式地浏览和生成数据, 生成动态Web内容.&lt;br&gt;&lt;strong&gt;JSP&lt;/strong&gt;:全称Java Server Pages, 是一种动态网页开发技术, 主要用于实现Java web应用程序的用户界面部分.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tomcat.apache.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tomcat官网地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Tomcat" scheme="http://www.mengyun.club/tags/Tomcat/"/>
    
      <category term="Nginx" scheme="http://www.mengyun.club/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>linux系统重置root用户密码</title>
    <link href="http://www.mengyun.club/post/d8982727/"/>
    <id>http://www.mengyun.club/post/d8982727/</id>
    <published>2020-06-28T13:58:42.000Z</published>
    <updated>2020-09-18T01:29:18.737Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="重置root用户密码"><a href="#重置root用户密码" class="headerlink" title="重置root用户密码"></a>重置root用户密码</h1><p>重启Linux系统主机并出现引导界面时, 按下键盘上的e键进入内核编辑界面.<br><img src="/post/d8982727/第1步：开机后在内核上敲击“e”.png"></p><p>在linux16参数这行的最后面追加” \rd.break”参数, 然后按下Ctrl + X组合键来运行修改过的内核程序.<img src="/post/d8982727/第2步：在linux16这行的后面输入“rd.break”并敲击“ctrl-x“.png"></p><a id="more"></a><p>大约30秒过后, 进入到系统的紧急求援模式.<br><img src="/post/d8982727/第3步：进入到了系统的紧急求援模式.png"></p><p>依次输入以下命令, 等待系统重启操作完毕, 然后就可以使用新密码linuxprobe来登录Linux系统了.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw <span class="string">/sysroot</span> <span class="comment">#不输入该条命令会出现 Authentication token manipulation error 的错误提示</span></span><br><span class="line">chroot <span class="string">/sysroot</span></span><br><span class="line">passwd</span><br><span class="line">touch <span class="string">/.autorelabel</span></span><br><span class="line">exit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><img src="/post/d8982727/第4步：依次输入以下命令.png">]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;重置root用户密码&quot;&gt;&lt;a href=&quot;#重置root用户密码&quot; class=&quot;headerlink&quot; title=&quot;重置root用户密码&quot;&gt;&lt;/a&gt;重置root用户密码&lt;/h1&gt;&lt;p&gt;重启Linux系统主机并出现引导界面时, 按下键盘上的e键进入内核编辑界面.&lt;br&gt;&lt;img src=&quot;/post/d8982727/第1步：开机后在内核上敲击“e”.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在linux16参数这行的最后面追加” \rd.break”参数, 然后按下Ctrl + X组合键来运行修改过的内核程序.&lt;img src=&quot;/post/d8982727/第2步：在linux16这行的后面输入“rd.break”并敲击“ctrl-x“.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="root" scheme="http://www.mengyun.club/tags/root/"/>
    
  </entry>
  
  <entry>
    <title>使用各种服务和部署</title>
    <link href="http://www.mengyun.club/post/cea46563/"/>
    <id>http://www.mengyun.club/post/cea46563/</id>
    <published>2020-06-27T03:44:05.000Z</published>
    <updated>2020-10-23T11:29:55.545Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="使用ssh服务管理远程主机"><a href="#使用ssh服务管理远程主机" class="headerlink" title="使用ssh服务管理远程主机"></a>使用ssh服务管理远程主机</h1><h2 id="配置网卡服务"><a href="#配置网卡服务" class="headerlink" title="配置网卡服务"></a>配置网卡服务</h2><h3 id="配置网卡参数"><a href="#配置网卡参数" class="headerlink" title="配置网卡参数"></a>配置网卡参数</h3><p>使用nmtui命令来配置网络, 执行nmtui命令运行网络配置工具.<br><img src="/post/cea46563/%E7%AC%AC1%E6%AD%A5-%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E2%80%9Cnmtui%E2%80%9D.png" alt="第1步:执行命令“nmtui&quot;"></p><p>选中Edit a connection并按下回车键<br><img src="/post/cea46563/%E7%AC%AC2%E6%AD%A5-%E9%80%89%E6%8B%A9%E8%A6%81%E7%BC%96%E8%BE%91%E7%9A%84%E7%BD%91%E5%8D%A1.png" alt="第2步:选择要编辑的网卡"></p><a id="more"></a><p>选中要编辑的网卡名称, 然后按下Edit(编辑)按钮.<br><img src="/post/cea46563/%E7%AC%AC3%E6%AD%A5-%E7%BC%96%E8%BE%91%E7%BD%91%E5%8D%A1%E4%BF%A1%E6%81%AF.png" alt="第3步:编辑网卡信息"></p><p>把网络IPv4的配置方式改成Manual(手动)<br><img src="/post/cea46563/%E7%AC%AC4%E6%AD%A5-%E5%B0%86%E7%BD%91%E5%8D%A1%E7%9A%84IPv4%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%AE%BE%E7%BD%AE%E6%88%90%E6%89%8B%E5%8A%A8.png" alt="第4步:将网卡的IPv4配置项设置成手动"></p><p>按下Show(显示)按钮, 显示信息配置框.<br><img src="/post/cea46563/%E7%AC%AC5%E6%AD%A5-%E6%95%B2%E5%87%BBIpv4%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%8F%B3%E4%BE%A7%E7%9A%84Show.png" alt="第5步:敲击Ipv4配置项右侧的Show"></p><p>在服务器主机的网络配置信息中填写IP地址192.168.10.10/24<br><img src="/post/cea46563/%E7%AC%AC6%E6%AD%A5-%E5%A1%AB%E5%85%A5IP%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF.png" alt="第6步:填入IP地址信息"></p><p>单击OK按钮保存配置<br><img src="/post/cea46563/%E7%AC%AC7%E6%AD%A5-%E6%95%B2%E5%87%BB%E6%9C%80%E4%B8%8B%E9%9D%A2%E7%9A%84OK.png" alt="第7步:敲击最下面的OK"></p><p>单击Quit按钮退出<br><img src="/post/cea46563/%E7%AC%AC8%E6%AD%A5-%E7%A1%AE%E8%AE%A4%E4%BF%A1%E6%81%AF%E5%A1%AB%E5%86%99%E6%AD%A3%E7%A1%AE%E5%90%8E%E9%80%80%E5%87%BA.png" alt="第8步:确认信息填写正确后退出"></p><p>用Vim编辑器将网卡配置文件中的ONBOOT参数修改成yes, 没有激活的网卡会在系统重启后就被激活.<br><code>vim /etc/sysconfig/network-scripts/ifcfg-eno16777736</code><br><code>systemctl restart network</code></p><h3 id="创建网络会话"><a href="#创建网络会话" class="headerlink" title="创建网络会话"></a>创建网络会话</h3><p>RHEL和CentOS系统默认使用NetworkManager来提供网络服务, 这是一种动态管理网络配置的守护进程, 能够让网络设备保持连接状态. 可以使用nmcli命令来管理Network Manager服务.<br>nmcli是一款基于命令行的网络配置工具, 功能丰富, 参数众多. 它可以轻松地查看网络信息或网络状态:<br><code>nmcli connection show</code><br><code>nmcli con show eno16777736</code></p><p>RHEL7系统支持网络会话功能, 允许用户在多个配置文件中快速切换(非常类似于firewalld防火墙服务中的区域技术).<br>使用nmcli命令并按照”connection add con-name type ifname”的格式来创建网络会话.</p><p>假设将公司网络中的网络会话称之为company, 将家庭网络中的网络会话称之为house, 现在依次创建各自的网络会话:</p><pre>使用con-name参数指定公司所使用的网络会话名称company, 然后依次用ifname参数指定本机的网卡名称, 用autoconnect no参数设置该网络会话默认不被自动激活, 以及用ip4及gw4参数手动指定网络的IP地址:nmcli connection add con-name company ifname eno16777736 autoconnect no type ethernet ip4 192.168.10.10/24 gw4 192.168.10.1使用con-name参数指定家庭所使用的网络会话名称house. 因为我们想从外部DHCP服务器自动获得IP地址, 因此这里不需要进行手动指定.nmcli connection add con-name house type ethernet ifname eno16777736使用nmcli命令查看创建的所有网络会话:nmcli connection show使用nmcli命令配置过的网络会话是永久生效的, 启用house网络会话, 网卡就能自动通过DHCP获取到IP地址.nmcli connection up house</pre><p>把虚拟机系统的网卡(网络适配器)切换成桥接模式, 然后重启虚拟机系统.<br><img src="/post/cea46563/%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E5%8D%A1%E7%9A%84%E6%A8%A1%E5%BC%8F.png" alt="设置虚拟机网卡的模式"></p><h3 id="绑定两块网卡"><a href="#绑定两块网卡" class="headerlink" title="绑定两块网卡"></a>绑定两块网卡</h3><p>一般来讲, 生产环境必须提供7×24小时的网络传服务. 借助于网卡绑定技术, 不仅可以提高网络传输速度, 更重要的是, 还可以确保在其中一块网卡出现故障时, 依然可以正常提供网络服务.</p><p>第1步: 在虚拟机系统中再添加一块网卡设备, 请确保两块网卡都处在同一个网络连接中(即网卡模式相同), 处于相同模式的网卡设备才可以进行网卡绑定, 否则这两块网卡无法互相传送数据.<br><img src="/post/cea46563/%E7%BC%96%E8%BE%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE,%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A8.png" alt="编辑虚拟机设置,添加网络适配器"><br><img src="/post/cea46563/%E4%BF%9D%E8%AF%81%E4%B8%A4%E5%9D%97%E7%BD%91%E5%8D%A1%E7%9A%84%E8%BF%9E%E6%8E%A5%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%98%AF%E7%9B%B8%E5%90%8C%E7%9A%84.png" alt="保证两块网卡的连接类型都是相同的"></p><p>第2步: 使用Vim文本编辑器来配置网卡设备的绑定参数, 需要注意的是, 这些原本独立的网卡设备此时需要被配置成为一块”从属”网卡, 服务于”主”网卡, 不应该再有自己的IP地址等信息. 在进行了初始设置之后, 它们就可以支持网卡绑定.<br><code>vim /etc/sysconfig/network-scripts/ifcfg-eno</code></p><pre> TYPE=Ethernet BOOTPROTO=none ONBOOT=yes USERCTL=no DEVICE=eno MASTER=bond0 SLAVE=yes</pre><p>还需要将绑定后的设备命名为bond0并把IP地址等信息填写进去, 这样当用户访问相应服务的时候, 实际上就是由这两块网卡设备在共同提供服务.<br><code>vim /etc/sysconfig/network-scripts/ifcfg-bond0</code></p><pre> TYPE=Ethernet BOOTPROTO=none ONBOOT=yes USERCTL=no DEVICE=bond0 IPADDR=192.168.10.10 PREFIX=24 DNS=192.168.10.1 NM_CONTROLLED=no</pre><p>第3步: 让Linux内核支持网卡绑定驱动. 常见的网卡绑定驱动有三种模式—mode0、mode1和mode6.</p><pre> mode0(平衡负载模式): 平时两块网卡均工作, 且自动备援, 但需要在与服务器本地网卡相连的交换机设备上进行端口聚合来支持绑定技术. mode1(自动备援模式): 平时只有一块网卡工作, 在它故障后自动替换为另外的网卡. mode6(平衡负载模式): 平时两块网卡均工作, 且自动备援, 无须交换机设备提供辅助支持.</pre><p>使用Vim文本编辑器创建一个用于网卡绑定的驱动文件, 使得绑定后的bond0网卡设备能够支持绑定技术(bonding); 同时定义网卡以mode6模式进行绑定, 且出现故障时自动切换的时间为100毫秒.<br><code>vim /etc/modprobe.d/bond.conf</code></p><pre> alias bond0 bonding options bond0 miimon=100 mode=6 </pre><p>第4步: 重启网络服务后网卡绑定操作即可成功. 正常情况下只有bond0网卡设备才会有IP地址等信息:<br><code>systemctl restart network</code></p><p>注: 出现该信息时, 无视即可.<br><img align="left" src="/post/cea46563/重启网络服务后提示.png" title="重启网络服务后的提示" alt="重启网络服务后的提示"><br><br></p><p>可以在本地主机执行ping 192.168.10.10命令检查网络的连通性. 为了检验网卡绑定技术的自动备援功能, 在虚拟机硬件配置中随机移除一块网卡设备, 可以非常清晰地看到网卡切换的过程(一般只有1个数据丢包). 然后另外一块网卡会继续为用户提供服务.<br><code>ping -t 192.168.10.10</code></p><h2 id="远程控制服务"><a href="#远程控制服务" class="headerlink" title="远程控制服务"></a>远程控制服务</h2><h3 id="配置sshd服务"><a href="#配置sshd服务" class="headerlink" title="配置sshd服务"></a>配置sshd服务</h3><p>SSH(Secure Shell)是一种能够以安全的方式提供远程登录的协议, 也是目前远程管理Linux系统的首选方式. 想要使用SSH协议来远程管理Linux系统, 则需要部署配置sshd服务程序.<br>sshd是基于SSH协议开发的一款远程管理服务程序, 不仅使用起来方便快捷, 而且能够提供两种安全验证的方法:</p><pre> 基于口令的验证—用账户和密码来验证登录 基于密钥的验证—需要在本地生成密钥对, 然后把密钥对中的公钥上传至服务器并与服务器中的公钥进行比较. 该方式相较来说更安全.</pre><p>sshd服务的配置信息保存在/etc/ssh/sshd_config文件中. 运维人员一般会把保存着最主要配置信息的文件称为主配置文件, 而配置文件中有许多以井号开头的注释行, 要想让这些配置参数生效, 需要在修改参数后再去掉前面的井号.</p><table><tr><td>Port 22</td><td>默认的sshd服务端口</td></tr><tr><td>ListenAddress 0.0.0.0</td><td>设定sshd服务器监听的IP地址</td></tr><tr><td>Protocol 2</td><td>SSH协议的版本号</td></tr><tr><td>HostKey /tc/ssh/ssh_host_key</td><td>SSH协议版本为1时, DES私钥存放的位置.</td></tr><tr><td>HostKey /etc/ssh/ssh_host_rsa_key</td><td>SSH协议版本为2时, RSA私钥存放的位置.</td></tr><tr><td>HostKey /etc/ssh/ssh_host_dsa_key</td><td>SSH协议版本为2时, DSA私钥存放的位置.</td></tr><tr><td>PermitRootLogin yes</td><td>设定是否允许root管理员直接登录</td></tr><tr><td>StrictModes yes</td><td>当远程用户的私钥改变时直接拒绝连接</td></tr><tr><td>MaxAuthTries 6</td><td>最大密码尝试次数</td></tr><tr><td>MaxSessions 10</td><td>最大终端数</td></tr><tr><td>PasswordAuthentication yes</td><td>是否允许密码验证</td></tr><tr><td>PermitEmptyPasswords no</td><td>是否允许空密码登录(很不安全)</td></tr></table><p>使用ssh命令进行远程连接, 其格式为<code>ssh [参数] 主机IP地址</code>. 要退出登录则执行exit命令.</p><p>想让新配置文件生效, 则需要手动重启相应的服务程序. 最好也将这个服务程序加入到开机启动项中, 这样系统在下一次启动时, 该服务程序便会自动运行, 继续为用户提供服务.<br><code>systemctl restart sshd</code>&nbsp;&nbsp;<code>systemctl enable sshd</code></p><h3 id="安全密钥验证"><a href="#安全密钥验证" class="headerlink" title="安全密钥验证"></a>安全密钥验证</h3><p>加密是对信息进行编码和解码的技术, 它通过一定的算法(密钥)将原本可以直接阅读的明文信息转换成密文形式. 密钥即是密文的钥匙, 有私钥和公钥之分. 在传输数据时, 如果担心被他人监听或截获, 就可以在传输前先使用公钥对数据加密处理, 然后再行传送.</p><p>第1步: 在客户端主机中生成”密钥对”</p><pre> ssh-keygen 按回车键或设置密钥的存储路径 再次按回车键或设置密钥的密码</pre><p>第2步: 把客户端主机中生成的公钥文件传送至远程主机</p><pre> ssh-copy-id 192.168.10.10 yes 输入远程服务器密码</pre><p>第3步: 对服务器进行设置, 使其只允许密钥验证, 拒绝传统的口令验证方式. 记得在修改配置文件后保存并重启sshd服务程序.</p><pre> vim /etc/ssh/sshd_config PasswordAuthentication no systemctl restart sshd</pre><p>第4步: 在客户端尝试登录到服务器, 此时无须输入密码也可成功登录.<br><code>ssh 192.168.10.10</code></p><h3 id="远程传输命令"><a href="#远程传输命令" class="headerlink" title="远程传输命令"></a>远程传输命令</h3><p>scp(secure copy)是一个基于SSH协议在网络之间进行安全传输的命令, 其格式为<code>scp [参数] 本地文件 远程帐户@远程IP地址:远程目录</code>. 与cp命令不同, cp命令只能在本地硬盘中进行文件复制, 而scp不仅能够通过网络传送数据, 而且所有的数据都将进行加密处理.</p><table><tr><td>参数</td><td>作用</td></tr><tr><td>-v</td><td>显示详细的连接进度</td></tr><tr><td>-P</td><td>指定远程主机的sshd端口号</td></tr><tr><td>-r</td><td>用于传送文件夹</td></tr><tr><td>-6</td><td>使用IPv6协议</td></tr></table><p>使用scp命令把文件从本地复制到远程主机时, 首先需要以绝对路径的形式写清本地文件的存放位置.</p><pre> echo "Welcome to LinuxProbe.Com" > readme.txt scp /root/readme.txt 192.168.10.20:/home 输入远程服务器中root管理员的密码</pre><p>使用scp命令把远程主机上的文件下载到本地主机, 其命令格式为<code>scp [参数] 远程用户@远程IP地址:远程文件 本地目录</code>. </p><pre> scp 192.168.10.20:/etc/redhat-release /root 输入远程服务器中root管理员的密码</pre><h2 id="不间断会话服务"><a href="#不间断会话服务" class="headerlink" title="不间断会话服务"></a>不间断会话服务</h2><p>screen是一款能够实现多窗口远程控制的开源服务程序, 简单来说就是为了解决网络异常中断或为了同时控制多个远程终端窗口而设计的程序. 用户还可以使用screen服务程序同时在多个远程会话中自由切换, 能够做到实现如下功能:</p><pre> 会话恢复: 即便网络中断, 也可让会话随时恢复, 确保用户不会失去对远程会话的控制. 多窗口: 每个会话都是独立运行的, 拥有各自独立的输入输出终端窗口, 终端窗口内显示过的信息也将被分开隔离保存, 以便下次使用时依然能看到之前的操作记录. 会话共享: 当多个用户同时登录到远程服务器时, 便可以使用会话共享功能让用户之间的输入输出信息共享.</pre><p>在RHEL 7系统中, 没有默认安装screen服务程序, 因此需要配置Yum仓库来安装它. 首先将虚拟机的CD/DVD光盘选项设置为”使用ISO镜像文件”, 并选择已经下载好的系统镜像.<br><img src="/post/cea46563/%E7%A1%AE%E8%AE%A4%E5%85%89%E7%9B%98%E5%B7%B2%E8%A2%AB%E9%80%89%E4%B8%AD.png" alt="确认光盘已被选中"></p><p>然后, 把光盘设备中的系统镜像挂载到/media/cdrom目录.</p><pre> mkdir -p /media/cdrom mount /dev/cdrom /media/cdrom</pre><p>最后, 使用Vim文本编辑器创建Yum仓库的配置文件.</p><pre> vim /etc/yum.repos.d/rhel7.repo [rhel7] name=rhel7 baseurl=file:///media/cdrom enabled=1 gpgcheck=0</pre><p>使用Yum仓库来安装screen服务程序<br><code>yum install screen</code></p><h3 id="管理远程会话"><a href="#管理远程会话" class="headerlink" title="管理远程会话"></a>管理远程会话</h3><p>screen命令可以用-S参数创建会话窗口; 用-d参数将指定会话进行离线处理; 用-r参数恢复指定会话; 用-x参数一次性恢复所有的会话; 用-ls参数显示当前已有的会话; 以及用-wipe参数把目前无法使用的会话删除, 等等.</p><p>创建一个名称为backup的会话窗口<br><code>screen -S backup</code></p><p>可以查看到当前的会话正在工作中<br><code>screen -ls</code></p><p>退出一个会话<br><code>exit</code></p><p>可以直接使用screen命令执行要运行的命令, 这样在命令中的一切操作也都会被记录下来, 当命令执行结束后screen会话也会自动结束.<br><code>screen vim memo.txt</code></p><p>来创建一个名为linux的会话, 然后强行把窗口关闭掉(这与进行远程连接时突然断网具有相同的效果):</p><pre> screen -S linux tail -f /var/log/messages</pre><p>查看一下刚刚离线的会话名称, 然后尝试恢复回来就可以继续工作了:</p><pre> screen -ls screen -r linux</pre><p>可以多创建几个会话窗口放在一起使用. 如果这段时间内不再使用某个会话窗口, 可以把它设置为临时断开(detach)模式, 随后在需要时再重新连接(attach)回来即可.</p><h3 id="会话共享功能"><a href="#会话共享功能" class="headerlink" title="会话共享功能"></a>会话共享功能</h3><p>screen命令不仅可以确保用户在极端情况下也不丢失对系统的远程控制, 保证了生产环境中远程工作的不间断性, 而且它还具有会话共享、分屏切割、会话锁定等实用的功能.</p><p><img src="/post/cea46563/screen%E4%BC%9A%E8%AF%9D%E5%85%B1%E4%BA%AB.png" alt="screen会话共享"><br>首先, 使用ssh服务程序将终端A远程连接到服务器, 并创建一个会话窗口.</p><pre> ssh 192.168.10.10 screen -S linuxprobe</pre><p>然后, 使用ssh服务程序将终端B远程连接到服务器, 并执行获取远程会话的命令.</p><pre> ssh 192.168.10.10 screen -x</pre><h1 id="使用Apache服务部署静态网站"><a href="#使用Apache服务部署静态网站" class="headerlink" title="使用Apache服务部署静态网站"></a>使用Apache服务部署静态网站</h1><h2 id="网站服务程序"><a href="#网站服务程序" class="headerlink" title="网站服务程序"></a>网站服务程序</h2><p>Web网络服务是一种被动访问的服务程序, 即只有接收到互联网中其他主机发出的请求后才会响应, 最终用于提供服务程序的Web服务器会通过HTTP(超文本传输协议)或HTTPS(安全超文本传输协议)把请求的内容传送给用户.<br><img src="/post/cea46563/%E9%A1%B5%E9%9D%A2%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.png" alt="页面请求过程"></p><p>第1步: 把光盘设备中的系统镜像挂载到/media/cdrom目录</p><pre> mkdir -p /media/cdrom mount /dev/cdrom /media/cdrom</pre><p>第2步: 使用Vim文本编辑器创建Yum仓库的配置文件</p><pre> vim /etc/yum.repos.d/rhel7.repo [rhel7] name=rhel7 baseurl=file:///media/cdrom enabled=1 gpgcheck=0</pre><p>第3步: 动手安装Apache服务程序, 注意: Apache服务的软件包名称为httpd.<br><code>yum install httpd</code></p><p>第4步: 启用httpd服务程序并将其加入到开机启动项中, 使其能够随系统开机而运行, 从而持续为用户提供Web服务:</p><pre> systemctl start httpd systemctl enable httpd firefox 输入网址: 127.0.0.1</pre><h2 id="配置服务文件参数"><a href="#配置服务文件参数" class="headerlink" title="配置服务文件参数"></a>配置服务文件参数</h2><table>httpd服务程序的主要配置文件及存放位置<tr><td>服务目录</td><td>/etc/httpd</td></tr><tr><td>主配置文件</td><td>/etc/httpd/conf/httpd.conf</td></tr><tr><td>网站数据目录</td><td>/var/www/html</td></tr><tr><td>访问日志</td><td>/var/log/httpd/access_log</td></tr><tr><td>错误日志</td><td>/var/log/httpd/error_log</td></tr></table><p>httpd服务程序的主配置文件中, 存在三种类型的信息:注释行信息、全局配置、区域配置.</p><pre> 注释行信息 # ---------- 全局配置 ServerRoot "/etc/httpd" ServerName www.linuxprobe.com 区域配置 &lt;Directory /&gt; &lt;/Directory&gt;</pre><p>全局配置参数就是一种全局性的配置参数, 可作用于对所有的子站点, 既保证了子站点的正常访问, 也有效减少了频繁写入重复参数的工作量. 区域配置参数则是单独针对于每个独立的子站点进行设置的.</p><table>在httpd服务程序主配置文件中, 最为常用的参数:<tr><td>ServerRoot</td><td>服务目录</td></tr><tr><td>ServerAdmin</td><td>管理员邮箱</td></tr><tr><td>User</td><td>运行服务的用户</td></tr><tr><td>Group</td><td>运行服务的用户组</td></tr><tr><td>ServerName</td><td>网站服务器的域名</td></tr><tr><td>DocumentRoot</td><td>网站数据目录</td></tr><tr><td>Listen</td><td>监听的IP地址与端口号</td></tr><tr><td>DirectoryIndex</td><td>默认的索引页页面</td></tr><tr><td>ErrorLog</td><td>错误日志文件</td></tr><tr><td>CustomLog</td><td>访问日志文件</td></tr><tr><td>Timeout</td><td>网页超时时间, 默认为300秒.</td></tr></table><p>在默认情况下, 网站数据是保存在/var/www/html目录中, 把保存网站数据的目录修改为/home/wwwroot目录:<br>第1步: 建立网站数据的保存目录, 并创建首页文件.</p><pre> mkdir /home/wwwroot echo "The New Web Directory" > /home/wwwroot/index.html</pre><p>第2步: 打开httpd服务程序的主配置文件, 将用于定义网站数据保存路径的参数DocumentRoot修改为/home/wwwroot, 同时还需要将用于定义目录权限的参数Directory后面的路径也修改为/home/wwwroot. 配置文件修改完毕后即可保存并退出.</p><pre> vim /etc/httpd/conf/httpd.conf DocumentRoot "/home/wwwroot" &lt;Directory "/home/wwwroot"&gt;</pre><p>第3步: 重新启动httpd服务程序并验证效果</p><pre> systemctl restart httpd firefox 输入网址: 127.0.0.1</pre><p>只有在网站的首页面文件不存在或者用户权限不足时, 才显示httpd服务程序的默认首页面. 这时则要配置SELinux安全子系统:<code>setenforce 0</code>.</p><h2 id="SELinux安全子系统"><a href="#SELinux安全子系统" class="headerlink" title="SELinux安全子系统"></a>SELinux安全子系统</h2><p>SELinux(Security-Enhanced Linux)是美国国家安全局在Linux开源社区的帮助下开发的一个强制访问控制(MAC, Mandatory Access Control)的安全子系统. RHEL 7系统使用SELinux技术的目的是为了让各个服务进程都受到约束, 使其仅获取到本应获取的资源.</p><table>SELinux服务有三种配置模式:<tr><td>enforcing</td><td>强制启用安全策略模式, 将拦截服务的不合法请求.</td></tr><tr><td>permissive</td><td>遇到服务越权访问时, 只发出警告而不强制拦截.</td></tr><tr><td>disabled</td><td>对于越权的行为不警告也不拦截</td></tr></table><p>在生产环境中相当不推荐, 查看SELinux服务主配置文件中定义的默认状态. 如果是permissive或disabled, 建议赶紧修改为enforcing.</p><pre> vim /etc/selinux/config SELINUX=enforcing</pre><p>SELinux服务的主配置文件中, 定义的是SELinux的默认运行状态, 可以将其理解为系统重启后的状态, 因此它不会在更改后立即生效. 可以用setenforce [0|1]命令修改SELinux当前的运行模式(0为禁用, 1为启用), 使用getenforce命令获得当前SELinux服务的运行模式. 注意, 这种修改只是临时的, 在系统重启后就会失效. </p><pre> setenforce 0 getenforce</pre><p>把SELinux服务恢复到强制启用安全策略模式, 然后分别查看原始网站数据的保存目录与当前网站数据的保存目录是否拥有不同的SELinux安全上下文值:</p><pre> setenforce 1 ls -Zd /var/www/html ls -Zd /home/wwwroot drwxr-xr-x. root root <font color="#FF8C00">system_u</font>:<font color="#9932CC">object_r</font>:<font color="#8FBC8F">httpd_sys_content_t</font>:s0 /var/www/html drwxrwxrwx. root root unconfined_u:object_r:home_root_t:s0 /home/wwwroot</pre><p>在文件上设置的SELinux安全上下文是由用户段、角色段以及类型段等多个信息项共同组成的. 其中,<br>用户段<font color="#FF8C00">system_u</font>代表系统进程的身份,<br>角色段<font color="#9932CC">object_r</font>代表文件目录的角色,<br>类型段<font color="#8FBC8F">httpd_sys_content_t</font>代表网站服务的系统文件.</p><p>semanage命令用于管理SELinux的策略, 不仅能够像传统chcon命令那样—设置文件、目录的策略, 还可以管理网络端口、消息接口. 使用时, 经常用到的几个参数及其功能:</p><pre> semanage [选项] [文件] |__ -l --用于查询 |__ -a --用于添加 |__ -m --用于修改 |__ -d --用于删除</pre><p>例: 可以向新的网站数据目录中新添加一条SELinux安全上下文, 让这个目录以及里面的所有文件能够被httpd服务程序所访问到:</p><pre> semanage fcontext -a -t httpd_sys_content_t /home/wwwroot semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/*</pre><p>使用restorecon命令将设置好的SELinux安全上下文立即生效. 在使用restorecon命令时, 可以加上-Rv参数对指定的目录进行递归操作, 以及显示SELinux安全上下文的修改过程.<br><code>restorecon -Rv /home/wwwroot/</code></p><h2 id="个人用户主页功能"><a href="#个人用户主页功能" class="headerlink" title="个人用户主页功能"></a>个人用户主页功能</h2><p>该功能可以让系统内所有的用户在自己的家目录中管理个人的网站, 而且访问起来也非常容易.</p><p>第1步: 在httpd服务程序中, 默认没有开启个人用户主页功能. 编辑配置文件, 然后在UserDir disabled参数前面加上井号(#), 表示让httpd服务程序开启个人用户主页功能; 同时再把UserDir public_html参数前面的井号(#)去掉. 最后, 在修改完毕后保存并退出.<br>(UserDir参数表示网站数据在用户家目录中的保存目录名称, 即public_html目录)</p><pre> vim /etc/httpd/conf.d/userdir.conf # UserDir disabled UserDir public_html</pre><p>第2步: 在用户家目录中建立用于保存网站数据的目录及首页面文件. 另外, 还需要把家目录的权限修改为755, 保证其他人也有权限读取里面的内容.</p><pre> su - linuxprobe mkdir public_html echo "This is linuxprobe's website" > public_html/index.html chmod -Rf 755 /home/linuxprobe</pre><p>第3步: SELinux域确保服务程序不能执行违规的操作, 只能本本分分地为用户提供服务, 使用getsebool命令查询并过滤出所有与HTTP协议相关的安全策略. 其中, off为禁止状态, on为允许状态.</p><pre> getsebool -a | grep http httpd_enable_homedirs --> off</pre><p>使用setsebool命令来修改SELinux策略中各条规则的布尔值. 在setsebool命令后面加上-P参数, 让修改后的SELinux策略规则永久生效且立即生效.<br><code>setsebool -P httpd_enable_homedirs=on</code></p><p>第4步: 重新启动httpd服务程序, 在浏览器的地址栏中输入网址, 其格式为”网址/~用户名”(其中的波浪号是必需的, 而且网址、波浪号、用户名之间没有空格)</p><pre> systemctl restart httpd 左上角的Applications中打开firefox 输入网址: 127.0.0.1/~用户名</pre><p>在网站中添加口令功能, 使用户访客通过身份验证的方式查看网页里面的内容:</p><p>第1步: 先使用htpasswd命令生成密码数据库. -c参数表示第一次生成; 后面再分别添加密码数据库的存放文件, 以及验证要用到的用户名称(该用户不必是系统中已有的本地账户).</p><pre> htpasswd -c /etc/httpd/passwd linuxprobe 输入用于网页验证的密码 再次输入密码进行确认</pre><p>第2步: 编辑个人用户主页功能的配置文件. 把第31～35行的参数信息修改成下列内容, 随后保存并退出配置文件, 重启httpd服务程序即可生效.</p><pre> vim /etc/httpd/conf.d/userdir.conf <figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;Directory "/home/*/public_html"&gt;</span></span><br><span class="line">   AllowOverride <span class="literal">all</span></span><br><span class="line">   authuserfile <span class="string">"/etc/httpd/passwd"</span> <span class="comment">#刚刚生成出来的密码验证文件保存路径</span></span><br><span class="line">   authname <span class="string">"My privately website"</span> <span class="comment">#当用户尝试访问个人用户网站时的提示信息</span></span><br><span class="line">   authtype <span class="keyword">basic</span></span><br><span class="line">   require <span class="keyword">user</span> linuxprobe <span class="comment">#用户进行账户密码登录时需要验证的用户名称</span></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure> systemctl restart httpd</pre><h2 id="虚拟网站主机功能"><a href="#虚拟网站主机功能" class="headerlink" title="虚拟网站主机功能"></a>虚拟网站主机功能</h2><p>利用虚拟主机功能, 可以把一台处于运行状态的物理服务器分割成多个”虚拟的服务器”. 但是, 该技术无法实现目前云主机技术的硬件资源隔离, 让这些虚拟的服务器共同使用物理服务器的硬件资源, 供应商只能限制硬盘的使用空间大小. 出于各种考虑的因素(主要是价格低廉), 目前依然有很多企业或个人站长在使用虚拟主机的形式来部署网站.<br>Apache的虚拟主机功能是服务器基于用户请求的不同IP地址、主机域名或端口号, 实现提供多个网站同时为外部提供访问服务的技术.</p><h3 id="基于IP地址"><a href="#基于IP地址" class="headerlink" title="基于IP地址"></a>基于IP地址</h3><p>如果一台服务器有多个IP地址, 而且每个IP地址与服务器上部署的每个网站一一对应, 这样当用户请求访问不同的IP地址时, 会访问到不同网站的页面资源. 而且, 每个网站都有一个独立的IP地址, 对搜索引擎优化也大有裨益.</p><p>配置三个IP地址, 测试连通性.</p><pre> nmtui 192.168.10.10./24 192.168.10.20./24 192.168.10.30./24 systemctl restart network</pre><p>第1步: 分别在/home/wwwroot中创建用于保存不同网站数据的3个目录, 并向其中分别写入网站的首页文件. 每个首页文件中应有明确区分不同网站内容的信息, 方便我们稍后能更直观地检查效果.</p><pre> mkdir -p /home/wwwroot/10 mkdir -p /home/wwwroot/20 mkdir -p /home/wwwroot/30 echo "IP:192.168.10.10" > /home/wwwroot/10/index.html echo "IP:192.168.10.20" > /home/wwwroot/20/index.html echo "IP:192.168.10.30" > /home/wwwroot/30/index.html</pre><p>第2步: 在httpd服务的配置文件中大约113行处开始, 分别追加写入三个基于IP地址的虚拟主机网站参数, 然后保存并退出, 重启httpd服务. 或者将Include conf/extra/httpd-vhosts.conf的注释取消, 将以下写入该配置文件中.</p><pre> vim /etc/httpd/conf/httpd.conf <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> /home/wwwroot/10</span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> www.linuxprobe.com</span><br><span class="line">   <span class="section">&lt;Directory /home/wwwroot/10 &gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost 192.168.10.20&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> /home/wwwroot/20</span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> bbs.linuxprobe.com</span><br><span class="line">   <span class="section">&lt;Directory /home/wwwroot/20 &gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost 192.168.10.30&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> /home/wwwroot/30</span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> tech.linuxprobe.com</span><br><span class="line">   <span class="section">&lt;Directory /home/wwwroot/30 &gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure> systemctl restart httpd</pre><p>第3步:向新的网站数据目录中新添加一条SELinux安全上下文, 让这个目录以及里面的所有文件能够被httpd服务程序所访问到, 并使用restorecon命令让新设置的SELinux安全上下文立即生效.</p><pre> semanage fcontext -a -t httpd_sys_content_t /home/wwwroot semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/10 semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/10/* semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/20 semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/20/* semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/30 semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/30/* restorecon -Rv /home/wwwroot 左上角的Applications中打开firefox 分别输入ip地址进行查看</pre><h3 id="基于主机域名"><a href="#基于主机域名" class="headerlink" title="基于主机域名"></a>基于主机域名</h3><p>当服务器无法为每个网站都分配一个独立IP地址的时候, 可以尝试让Apache自动识别用户请求的域名, 从而根据不同的域名请求来传输不同的内容. 在这种情况下的配置更加简单, 只需要保证位于生产环境中的服务器上有一个可用的IP地址(这里以192.168.10.10为例)就可以了. </p><p>由于当前还没有介绍如何配置DNS解析服务, 因此需要手工定义IP地址与域名之间的对应关系. /etc/hosts是Linux系统中用于强制把某个主机域名解析到指定IP地址的配置文件.</p><p>第1步: 手工定义IP地址与域名之间对应关系的配置文件, 保存并退出后会立即生效. 可以通过分别ping这些域名来验证域名是否已经成功解析为IP地址.</p><pre> vim /etc/hosts 192.168.10.10 www.linuxprobe.com bbs.linuxprobe.com tech.linuxprobe.com ping -c 4 www.linuxprobe.com ping -c 4 bbs.linuxprobe.com ping -c 4 tech.linuxprobe.com</pre><p>第2步: 分别在/home/wwwroot中创建用于保存不同网站数据的三个目录, 并向其中分别写入网站的首页文件. 每个首页文件中应有明确区分不同网站内容的信息, 方便我们稍后能更直观地检查效果.</p><pre>mkdir -p /home/wwwroot/wwwmkdir -p /home/wwwroot/bbsmkdir -p /home/wwwroot/techecho "WWW.linuxprobe.com" > /home/wwwroot/www/index.htmlecho "BBS.linuxprobe.com" > /home/wwwroot/bbs/index.htmlecho "TECH.linuxprobe.com" > /home/wwwroot/tech/index.html</pre><p>第3步: 在httpd服务的配置文件中大约113行处开始, 分别追加写入三个基于主机名的虚拟主机网站参数, 然后保存并退出. 记得需要重启httpd服务, 这些配置才生效.</p><pre> vim /etc/httpd/conf/httpd.conf <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/home/wwwroot/www"</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> <span class="string">"www.linuxprobe.com"</span></span><br><span class="line">   <span class="section">&lt;Directory "/home/wwwroot/www"&gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/directory&gt;</span> </span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/home/wwwroot/bbs"</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> <span class="string">"bbs.linuxprobe.com"</span></span><br><span class="line">   <span class="section">&lt;Directory "/home/wwwroot/bbs"&gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/home/wwwroot/tech"</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> <span class="string">"tech.linuxprobe.com"</span></span><br><span class="line">   <span class="section">&lt;Directory "/home/wwwroot/tech"&gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure> systemctl restart httpd</pre><p>第4步:向新的网站数据目录中新添加一条SELinux安全上下文, 让这个目录以及里面的所有文件能够被httpd服务程序所访问到, 并使用restorecon命令让新设置的SELinux安全上下文立即生效.</p><pre> semanage fcontext -a -t httpd_sys_content_t /home/wwwroot semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/www semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/www/* semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/bbs semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/bbs/* semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/tech semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/tech/* restorecon -Rv /home/wwwroot 左上角的Applications中打开firefox 分别输入域名进行查看</pre><h3 id="基于端口号"><a href="#基于端口号" class="headerlink" title="基于端口号"></a>基于端口号</h3><p>基于端口号的虚拟主机功能可以让用户通过指定的端口号来访问服务器上的网站资源. 在使用Apache配置虚拟网站主机功能时, 基于端口号的配置方式是最复杂的. 因此我们不仅要考虑httpd服务程序的配置因素, 还需要考虑到SELinux服务对新开设端口的监控. </p><p>一般来说, 使用80、443、8080等端口号来提供网站访问服务是比较合理的, 如果使用其他端口号则会受到SELinux服务的限制.</p><p>第1步: 分别在/home/wwwroot中创建用于保存不同网站数据的两个目录, 并向其中分别写入网站的首页文件. 每个首页文件中应有明确区分不同网站内容的信息, 方便我们稍后能更直观地检查效果.</p><pre> mkdir -p /home/wwwroot/6111 mkdir -p /home/wwwroot/6222 echo "port:6111" > /home/wwwroot/6111/index.html echo "port:6222" > /home/wwwroot/6222/index.html</pre><p>第2步: 在httpd服务配置文件的第43行和第44行分别添加用于监听6111和6222端口的参数</p><pre> vim /etc/httpd/conf/httpd.conf Listen 80 Listen 6111 Listen 6222</pre><p>第3步: 在httpd服务的配置文件中大约113行处开始, 分别追加写入两个基于端口号的虚拟主机网站参数, 然后保存并退出. 重启httpd服务.</p><pre> vim /etc/httpd/conf/httpd.conf <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10:6111&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/home/wwwroot/6111"</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> www.linuxprobe.com</span><br><span class="line">   <span class="section">&lt;Directory "/home/wwwroot/6111"&gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span> </span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost 192.168.10.10:6222&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/home/wwwroot/6222"</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> bbs.linuxprobe.com</span><br><span class="line">   <span class="section">&lt;Directory "/home/wwwroot/6222"&gt;</span></span><br><span class="line">   <span class="attribute">AllowOverride</span> None</span><br><span class="line">   <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure></pre><p>第4步: 向新的网站数据目录中新添加一条SELinux安全上下文, 让这个目录以及里面的所有文件能够被httpd服务程序所访问到, 并使用restorecon命令让新设置的SELinux安全上下文立即生效.</p><pre> semanage fcontext -a -t httpd_sys_content_t /home/wwwroot semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6111 semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6111/* semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6222 semanage fcontext -a -t httpd_sys_content_t /home/wwwroot/6222/* restorecon -Rv /home/wwwroot/</pre><p>使用semanage命令查询并过滤出所有与HTTP协议相关且SELinux服务允许的端口列表<br><code>semanage port -l | grep http</code></p><p>第5步: SELinux允许的与HTTP协议相关的端口号中默认没有包含6111和6222, 因此需要将这两个端口号手动添加进去. 该操作会立即生效, 而且在系统重启过后依然有效. 设置好后再重启httpd服务程序.</p><pre> semanage port -a -t http_port_t -p tcp 6111 semanage port -a -t http_port_t -p tcp 6222 semanage port -l| grep http systemctl restart httpd 左上角的Applications中打开firefox 分别输入ip地址:端口号进行查看</pre><h2 id="Apache的访问控制"><a href="#Apache的访问控制" class="headerlink" title="Apache的访问控制"></a>Apache的访问控制</h2><p>Apache可以基于源主机名、源IP地址或源主机上的浏览器特征等信息对网站上的资源进行访问控制.</p><p>它通过Allow指令允许某个主机访问服务器上的网站资源, 通过Deny指令实现禁止访问.</p><p>在允许或禁止访问网站资源时, 还会用到Order指令, 这个指令用来定义Allow或Deny指令起作用的顺序, 其匹配原则是按照顺序进行匹配, 若匹配成功则执行后面的默认指令.</p><p>第1步: 先在服务器上的网站数据目录中新建一个子目录, 并在这个子目录中创建一个包含Successful单词的首页文件.</p><pre> mkdir /var/www/html/server echo "Successful" > /var/www/html/server/index.html</pre><p>第2步: 打开httpd服务的配置文件, 在第129行后面添加下述规则来限制源主机的访问. 这段规则的含义是允许使用Firefox浏览器的主机访问服务器上的首页文件, 除此之外的所有请求都将被拒绝. 然后重启httpd服务.</p><pre> vim /etc/httpd/conf/httpd.conf <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;Directory "/var/www/html/server"&gt;</span></span><br><span class="line">   <span class="attribute">SetEnvIf</span> User-Agent <span class="string">"Firefox"</span> ff=1</span><br><span class="line">   <span class="attribute"><span class="nomarkup">Order</span></span> allow,deny</span><br><span class="line">   <span class="attribute"><span class="nomarkup">Allow</span></span> from env=ff</span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure> systemctl restart httpd 左上角的Applications中打开firefox 输入ip地址/server/</pre><p>只允许IP地址为192.168.10.20的主机访问网站资源, 可以在httpd服务配置文件的第129行后面添加下述规则.<br> <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory <span class="string">"/var/www/html/server"</span>&gt;</span><br><span class="line">   Order allow,deny </span><br><span class="line">   Allow <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><h1 id="使用Vsftpd服务传输文件"><a href="#使用Vsftpd服务传输文件" class="headerlink" title="使用Vsftpd服务传输文件"></a>使用Vsftpd服务传输文件</h1><h2 id="文件传输协议"><a href="#文件传输协议" class="headerlink" title="文件传输协议"></a>文件传输协议</h2><p>FTP是一种在互联网中进行文件传输的协议, 基于客户端/服务器模式, 默认使用20、21号端口, FTP服务器普遍部署于内网中, 具有容易搭建、方便管理的特点. 而且有些FTP客户端工具还可以支持文件的多点下载以及断点续传技术.</p><p><img src="/post/cea46563/FTP%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%A8%8B.png" alt="FTP连接过程"></p><table><tr><td>数据端口:20</td><td>用于进行数据传输</td></tr><tr><td>命令端口:21</td><td>用于接受客户端发出的相关FTP命令与参数</td></tr></table><p>FTP服务器是按照FTP协议在互联网上提供文件存储和访问服务的主机, FTP客户端则是向服务器发送连接请求, 以建立数据传输链路的主机. FTP协议有下面两种工作模式:</p><pre> 主动模式: FTP服务器主动向客户端发起连接请求 被动模式: FTP服务器等待客户端发起连接请求(FTP的默认工作模式)</pre><p>vsftpd(very secure ftp daemon, 非常安全的FTP守护进程)是一款运行在Linux操作系统上的FTP服务程序, 不仅完全开源而且免费, 此外, 还具有很高的安全性、传输速度, 以及支持虚拟用户验证等其他FTP服务程序不具备的特点.</p><p>配置好Yum软件仓库后, 安装vsftpd服务程序.<br><code>yum install vsftpd</code></p><p>iptables防火墙管理工具默认禁止了FTP传输协议的端口号, 需要清空iptables防火墙的默认策略, 并把当前已经被清理的防火墙策略状态保存下来:</p><pre> iptables -F service iptables save</pre><pre>注:The service command supports only basic LSB actions (start, stop, restart, try-restart, reload, force-reload, status). For other actions, please try to use systemctl. 执行下列代码:<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">yum -y install iptables-services</span><br><span class="line">systemctl <span class="builtin-name">enable</span> iptables</span><br><span class="line">systemctl start iptables</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></pre><p>将vsftpd服务程序的主配置文件(/etc/vsftpd/vsftpd.conf)进行备份后再进行注释行信息过滤, 并重定向到原始的主配置文件中.</p><pre> mv /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf_bak grep -v "#" /etc/vsftpd/vsftpd.conf_bak > /etc/vsftpd/vsftpd.conf</pre><table>vsftpd服务程序主配置文件中常用的参数以及作用:<tr><td>listen=[YES|NO]</td><td>是否以独立运行的方式监听服务</td></tr><tr><td>listen_address=IP地址</td><td>设置要监听的IP地址</td></tr><tr><td>listen_port=21</td><td>设置FTP服务的监听端口</td></tr><tr><td>download_enable＝[YES|NO]</td><td>是否允许下载文件</td></tr><tr><td>userlist_deny=[YES|NO]<br>userlist_enable=[YES|NO]</td><td>设置用户列表为"允许"还是"禁止"操作</td></tr><tr><td>max_clients=0</td><td>最大客户端连接数, 0为不限制.</td></tr><tr><td>max_per_ip=0</td><td>同一IP地址的最大连接数, 0为不限制.</td></tr><tr><td>anonymous_enable=[YES|NO]</td><td>是否允许匿名用户访问</td></tr><tr><td>anon_upload_enable=[YES|NO]</td><td>是否允许匿名用户上传文件</td></tr><tr><td>anon_umask=022</td><td>匿名用户上传文件的umask值</td></tr><tr><td>anon_root=/var/ftp</td><td>匿名用户的FTP根目录</td></tr><tr><td>anon_mkdir_write_enable=[YES|NO]</td><td>是否允许匿名用户创建目录</td></tr><tr><td>anon_other_write_enable=[YES|NO]</td><td>是否开放匿名用户的其他写入权限(包括重命名、删除等操作权限)</td></tr><tr><td>anon_max_rate=0</td><td>匿名用户的最大传输速率(字节/秒), 0为不限制.</td></tr><tr><td>local_enable=[YES|NO]</td><td>是否允许本地用户登录FTP</td></tr><tr><td>local_umask=022</td><td>本地用户上传文件的umask值</td></tr><tr><td>local_root=/var/ftp</td><td>本地用户的FTP根目录</td></tr><tr><td>chroot_local_user=[YES|NO]</td><td>是否将用户权限禁锢在FTP目录, 以确保安全.</td></tr><tr><td>local_max_rate=0</td><td>本地用户最大传输速率(字节/秒), 0为不限制.</td></tr></table><h2 id="Vsftpd服务程序"><a href="#Vsftpd服务程序" class="headerlink" title="Vsftpd服务程序"></a>Vsftpd服务程序</h2><p>vsftpd作为更加安全的文件传输的服务程序, 允许用户以三种认证模式登录到FTP服务器上.</p><p>匿名开放模式: 是一种最不安全的认证模式, 任何人都可以无需密码验证而直接登录到FTP服务器.</p><p>本地用户模式: 是通过Linux系统本地的账户密码信息进行认证的模式, 相较于匿名开放模式更安全, 而且配置起来也很简单.但是如果被黑客破解了账户的信息, 就可以畅通无阻地登录FTP服务器, 从而完全控制整台服务器.</p><p>虚拟用户模式: 是这三种模式中最安全的一种认证模式, 它需要为FTP服务单独建立用户数据库文件, 虚拟出用来进行口令验证的账户信息, 而这些账户信息在服务器系统中实际上是不存在的, 仅供FTP服务程序进行认证使用.</p><p>ftp是Linux系统中以命令行界面的方式来管理FTP传输服务的客户端工具, 手动安装ftp客户端工具.<br><code>yum install ftp</code></p><h3 id="匿名访问模式"><a href="#匿名访问模式" class="headerlink" title="匿名访问模式"></a>匿名访问模式</h3><p>这种模式一般用来访问不重要的公开文件(在生产环境中尽量不要存放重要文件)</p><p>vsftpd服务程序默认开启了匿名开放模式, 我们需要做的就是开放匿名用户的上传、下载文件的权限, 以及让匿名用户创建、删除、更名文件的权限. 需要注意的是, 不建议在生产环境中如此行事.</p><table>可以向匿名用户开放的权限参数以及作用<tr><td>anonymous_enable=YES</td><td>允许匿名访问模式</td></tr><tr><td>anon_umask=022</td><td>匿名用户上传文件的umask值</td></tr><tr><td>anon_upload_enable=YES</td><td>允许匿名用户上传文件</td></tr><tr><td>anon_mkdir_write_enable=YES</td><td>允许匿名用户创建目录</td></tr><tr><td>anon_other_write_enable=YES</td><td>允许匿名用户修改目录名称或删除目录</td></tr></table><pre> vim /etc/vsftpd/vsftpd.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">anonymous_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">anon_umask</span>=<span class="number">022</span></span><br><span class="line"><span class="attr">anon_upload_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">anon_mkdir_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">anon_other_write_enable</span>=<span class="literal">YES</span></span><br></pre></td></tr></table></figure> systemctl restart vsftpd systemctl enable vsftpd</pre><p>在vsftpd服务程序的匿名开放认证模式下, 默认访问的是/var/ftp目录. 查看该目录的权限得知, 只有root管理员才有写入权限. 将目录的所有者身份改成系统账户ftp(该账户在系统中已经存在).</p><pre> ls -ld /var/ftp/pub chown -Rf ftp /var/ftp/pub</pre><p>使用getsebool命令查看与FTP相关的SELinux域策略</p><pre> getsebool -a | grep ftp ftpd_full_access --> off</pre><p>修改策略规则, 并且在设置时使用-P参数让修改过的策略永久生效.<br><code>setsebool -P ftpd_full_access=on</code></p><p>在客户端执行ftp命令连接到远程的FTP服务器, 在vsftpd服务程序的匿名开放认证模式下, 其账户统一为anonymous, 密码为空. 而且在连接到FTP服务器后, 默认访问的是/var/ftp目录.</p><pre> Linux: ftp ip地址 输入匿名账户名:anonymous 按回车键 Windows: Win + R ftp://ip地址</pre><h3 id="本地用户模式"><a href="#本地用户模式" class="headerlink" title="本地用户模式"></a>本地用户模式</h3><p>相较于匿名开放模式, 本地用户模式要更安全, 而且配置起来也很简单.</p><table>本地用户模式使用的权限参数以及作用<tr><td>anonymous_enable=NO</td><td>禁止匿名访问模式</td></tr><tr><td>local_enable=YES</td><td>允许本地用户模式</td></tr><tr><td>write_enable=YES</td><td>设置可写权限</td></tr><tr><td>local_umask=022</td><td>本地用户模式创建文件的umask值</td></tr><tr><td>userlist_deny=YES</td><td>启用"禁止用户名单", 名单文件为ftpusers和user_list.</td></tr><tr><td>userlist_enable=YES</td><td>开启用户作用名单文件功能</td></tr></table><pre> vim /etc/vsftpd/vsftpd.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">anonymous_enable</span>=<span class="literal">NO</span></span><br><span class="line"><span class="attr">local_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">local_umask</span>=<span class="number">022</span></span><br></pre></td></tr></table></figure> systemctl restart vsftpd systemctl enable vsftpd</pre><p>使用getsebool命令查看与FTP相关的SELinux域策略</p><pre> getsebool -a | grep ftp ftpd_full_access --> off</pre><p>修改策略规则, 并且在设置时使用-P参数让修改过的策略永久生效.<br><code>setsebool -P ftpd_full_access=on</code></p><p>选择ftpusers和user_list文件中没有的一个普通用户尝试登录FTP服务器, 在采用本地用户模式登录FTP服务器后, 默认访问的是该用户的家目录, 也就是说, 访问的是/home/当前用户名目录. 而且该目录的默认所有者、所属组都是该用户自己, 因此不存在写入权限不足的情况.</p><pre> cat /etc/vsftpd/user_list cat /etc/vsftpd/ftpusers Linux: ftp 192.168.10.10 输入用户名 输入该用户名的密码 Windons: Win + R ftp://ip地址 输入用户名 输入该用户名的密码</pre><h3 id="虚拟用户模式"><a href="#虚拟用户模式" class="headerlink" title="虚拟用户模式"></a>虚拟用户模式</h3><p>虚拟用户模式是这三种模式中最安全的一种认证模式, 因为安全性较之于前面两种模式有了提升, 所以配置流程也会稍微复杂一些.</p><p>第1步: 创建用于进行FTP认证的用户数据库文件, 其中奇数行为账户名, 偶数行为密码.<br>例: 分别创建出zhangsan和lisi两个用户, 密码均为redhat:</p><pre> cd /etc/vsftpd/ vim vuser.list <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">zhangsan</span></span><br><span class="line"><span class="attribute">redhat</span></span><br><span class="line"><span class="attribute">lisi</span></span><br><span class="line"><span class="attribute">redhat</span></span><br></pre></td></tr></table></figure></pre><p>使用db_load命令用哈希(hash)算法将原始的明文信息文件转换成数据库文件, 并且降低数据库文件的权限(避免其他人看到数据库文件的内容), 然后再把原始的明文信息文件删除.</p><pre> db_load -T -t hash -f vuser.list vuser.db file vuser.db chmod 600 vuser.db rm -f vuser.list</pre><p>第2步: 创建vsftpd服务程序用于存储文件的根目录以及虚拟用户映射的系统本地用户. FTP服务用于存储文件的根目录指的是, 当虚拟用户登录后所访问的默认位置.</p><pre> useradd -d /var/ftproot -s /sbin/nologin virtual ls -ld /var/ftproot/ chmod -Rf 755 /var/ftproot/</pre><p>PAM(可插拔认证模块)是一种认证机制, 通过一些动态链接库和统一的API把系统提供的服务与认证方式分开, 使得系统管理员可以根据需求灵活调整服务程序的不同认证方式. 通俗来讲, PAM是一组安全机制的模块, 系统管理员可以用来轻易地调整服务程序的认证方式, 而不必对应用程序进行任何修改. PAM采取了分层设计的思想:<br><img src="/post/cea46563/PAM%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E7%9A%84%E4%BD%93%E7%B3%BB%E5%9B%BE.jpg" alt="PAM认证机制的体系图"></p><p>第3步: 新建一个用于虚拟用户认证的PAM文件vsftpd.vu, 其中PAM文件内的”db=”参数为使用db_load命令生成的账户密码数据库文件的路径, 但不用写数据库文件的后缀:</p><pre> vim /etc/pam.d/vsftpd.vu <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth       required     pam_userdb.so <span class="attribute">db</span>=/etc/vsftpd/vuser</span><br><span class="line">account    required     pam_userdb.so <span class="attribute">db</span>=/etc/vsftpd/vuser</span><br></pre></td></tr></table></figure></pre><p>第4步: 在vsftpd服务程序的主配置文件中通过pam_service_name参数将PAM认证文件的名称修改为vsftpd.vu, PAM作为应用程序层与鉴别模块层的连接纽带, 可以让应用程序根据需求灵活地在自身插入所需的鉴别功能模块. 当应用程序需要PAM认证时, 则需要在应用程序中定义负责认证的PAM配置文件, 实现所需的认证功能.</p><table>利用PAM文件进行认证时使用的参数以及作用<tr><td>anonymous_enable=NO</td><td>禁止匿名开放模式</td></tr><tr><td>local_enable=YES</td><td>允许本地用户模式</td></tr><tr><td>guest_enable=YES</td><td>开启虚拟用户模式</td></tr><tr><td>guest_username=virtual</td><td>指定虚拟用户账户</td></tr><tr><td>pam_service_name=vsftpd.vu</td><td>指定PAM文件</td></tr><tr><td>allow_writeable_chroot=YES</td><td>允许对禁锢的FTP根目录执行写入操作, 而且不拒绝用户的登录请求.</td></tr></table><pre> vim /etc/vsftpd/vsftpd.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">anonymous_enable</span>=<span class="literal">NO</span></span><br><span class="line"><span class="attr">local_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">guest_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">guest_username</span>=virtual</span><br><span class="line"><span class="attr">allow_writeable_chroot</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">pam_service_name</span>=vsftpd.vu</span><br></pre></td></tr></table></figure></pre><p>第5步: 为虚拟用户设置不同的权限</p><pre> mkdir /etc/vsftpd/vusers_dir/ cd /etc/vsftpd/vusers_dir/ touch lisi vim zhangsan <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">anon_upload_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">anon_mkdir_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">anon_other_write_enable</span>=<span class="literal">YES</span></span><br></pre></td></tr></table></figure></pre><p>然后再次修改vsftpd主配置文件, 通过添加user_config_dir参数来定义这两个虚拟用户不同权限的配置文件所存放的路径. 为了让修改后的参数立即生效, 需要重启vsftpd服务程序并将该服务添加到开机启动项中:</p><pre> vim /etc/vsftpd/vsftpd.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user_config_dir</span>=/etc/vsftpd/vusers_dir</span><br></pre></td></tr></table></figure> systemctl restart vsftpd systemctl enable vsftpd</pre><p>第6步: 设置SELinux域允许策略, 然后使用虚拟用户模式登录FTP服务器.</p><pre> getsebool -a | grep ftp ftpd_full_access --> off setsebool -P ftpd_full_access=on</pre><p>使用虚拟用户模式成功登录到FTP服务器</p><pre> Linux: ftp 192.168.10.10 输入虚拟用户名 输入该虚拟用户名的密码 Windons: Win + R ftp://ip地址 输入虚拟用户名 输入该虚拟用户名的密码</pre><h2 id="TFTP简单文件传输协议"><a href="#TFTP简单文件传输协议" class="headerlink" title="TFTP简单文件传输协议"></a>TFTP简单文件传输协议</h2><p>简单文件传输协议(Trivial File Transfer Protocol, TFTP)是一种基于UDP协议在客户端和服务器之间进行简单文件传输的协议.</p><p>TFTP在传输文件时采用的是UDP协议, 占用的端口号为69, 因此文件的传输过程也不像FTP协议那样可靠. 但是, 因为TFTP不需要客户端的权限认证, 也就减少了无谓的系统和网络带宽消耗, 因此在传输琐碎(trivial)不大的文件时, 效率更高.</p><p>安装TFTP的软件包</p><pre> yum install tftp-server tftp</pre><p>TFTP服务是使用xinetd服务程序来管理的. xinetd服务可以用来管理多种轻量级的网络服务, 而且具有强大的日志功能. 简单来说, 在安装TFTP软件包后, 还需要在xinetd服务程序中将其开启, 把默认的禁用(disable)参数修改为no.</p><pre> vim /etc/xinetd.d/tftp disable                 = no</pre><p>重启xinetd服务并将它添加到系统的开机启动项中, 以确保TFTP服务在系统重启后依然处于运行状态. 考虑到有些系统的防火墙默认没有允许UDP协议的69端口, 因此需要手动将该端口号加入到防火墙的允许策略中:</p><pre> systemctl restart xinetd systemctl enable xinetd firewall-cmd --permanent --add-port=69/udp firewall-cmd --reload </pre><p>提示: Failed to restart xinetd时, 安装xinetd包.</p><pre> yum -y install xinetd</pre><table>TFTP的根目录为/var/lib/tftpboot, tftp命令中可用的参数以及作用:<tr><td>命令</td><td>作用</td></tr><tr><td>?</td><td>帮助信息</td></tr><tr><td>put</td><td>上传文件</td></tr><tr><td>get</td><td>下载文件</td></tr><tr><td>verbose</td><td>显示详细的处理信息</td></tr><tr><td>status</td><td>显示当前的状态信息</td></tr><tr><td>binary</td><td>使用二进制进行传输</td></tr><tr><td>ascii</td><td>使用ASCII码进行传输</td></tr><tr><td>timeout</td><td>设置重传的超时时间</td></tr><tr><td>quit</td><td>退出</td></tr></table><pre> echo "i love linux" > /var/lib/tftpboot/readme.txt tftp 192.168.10.10 tftp> get readme.txt tftp> quit ls cat readme.txt </pre><h1 id="使用Samba或NFS实现文件共享"><a href="#使用Samba或NFS实现文件共享" class="headerlink" title="使用Samba或NFS实现文件共享"></a>使用Samba或NFS实现文件共享</h1><h2 id="SAMBA文件共享服务"><a href="#SAMBA文件共享服务" class="headerlink" title="SAMBA文件共享服务"></a>SAMBA文件共享服务</h2><p>SMBServer服务程序基于SMB(Server Messages Block, 服务器消息块)协议. 是一款开源的文件共享软件, 经过简单配置就能够实现Linux系统与Windows系统之间的文件共享工作, Samba服务程序现在已经成为在Linux系统与Windows系统之间共享文件的最佳选择.</p><p>首先通过Yum软件仓库来安装Samba服务程序<br><code>yum install samba</code></p><p>备份主配置文件, 然后过滤注释行重定向至原主配置文件, 最后用cat命令进行查看.</p><pre> mv /etc/samba/smb.conf /etc/samba/smb.conf.bak cat /etc/samba/smb.conf.bak | grep -v "#" | grep -v ";" | grep -v "^$" > /etc/samba/smb.conf cat /etc/samba/smb.conf</pre><table style="text-align:center;">Samba服务程序中的参数以及作用<tr><td>[global]</td><td></td><td>#全局参数</td></tr><tr><td></td><td>workgroup = MYGROUP</td><td>#工作组名称</td></tr><tr><td></td><td>server string = Samba Server Version %v</td><td>#服务器介绍信息,参数%v为显示SMB版本号</td></tr><tr><td></td><td>log file = /var/log/samba/log.%m</td><td>#定义日志文件的存放位置与名称, 参数%m为来访的主机名</td></tr><tr><td></td><td>max log size = 50</td><td>#定义日志文件的最大容量为50KB</td></tr><tr><td></td><td>security = user</td><td>#安全验证的方式, 总共有4种.</td></tr><tr><td></td><td>#share:</td><td>来访主机无需验证口令; 比较方便, 但安全性很差.</td></tr><tr><td></td><td>#user:</td><td>需验证来访主机提供的口令后才可以访问; 提升了安全性.</td></tr><tr><td></td><td>#server:</td><td>使用独立的远程主机验证来访主机提供的口令(集中管理账户)</td></tr><tr><td></td><td>#domain:</td><td>使用域控制器进行身份验证</td></tr><tr><td></td><td>passdb backend = tdbsam</td><td>#定义用户后台的类型, 共有3种.</td></tr><tr><td></td><td>#smbpasswd:</td><td>使用smbpasswd命令为系统用户设置Samba服务程序的密码</td></tr><tr><td></td><td>#tdbsam:</td><td>创建数据库文件并使用pdbedit命令建立Samba服务程序的用户</td></tr><tr><td></td><td>#ldapsam:</td><td>基于LDAP服务进行账户验证</td></tr><tr><td></td><td>load printers = yes</td><td>#设置在Samba服务启动时是否共享打印机设备</td></tr><tr><td></td><td>cups options = raw</td><td>#打印机的选项</td></tr><tr><td>[homes]</td><td></td>#共享参数</tr><tr><td></td><td>comment = Home Directories</td><td>#描述信息</td></tr><tr><td></td><td>browseable = no</td><td>#指定共享信息是否在"网上邻居"中可见</td></tr><tr><td></td><td>writable = yes</td><td>#定义是否可以执行写入操作, 与"read only"相反.</td></tr><tr><td>[printers]</td><td></td>#打印机共享参数</tr><tr><td></td><td>comment = All Printers</td><td></td></tr><tr><td></td><td>path = /var/spool/samba</td><td>#共享文件的实际路径(重要)</td></tr><tr><td></td><td>browseable = no</td><td></td></tr><tr><td></td><td>guest ok = no</td><td>#是否所有人可见, 等同于"public"参数.</td></tr><tr><td></td><td>writable = no</td><td></td></tr><tr><td></td><td>printable = yes</td><td></td></tr></table><h3 id="配置共享资源"><a href="#配置共享资源" class="headerlink" title="配置共享资源"></a>配置共享资源</h3><p>Samba服务程序的主配置文件包括全局配置参数和区域配置参数.<br>全局配置参数用于设置整体的资源共享环境, 对里面的每一个独立的共享资源都有效.<br>区域配置参数则用于设置单独的共享资源, 且仅对该资源有效.<br>创建共享资源指定的参数写入到Samba服务程序的主配置文件中, 然后重启该服务即可.</p><table>用于设置Samba服务程序的参数以及作用<tr><td>[database]</td><td>共享名称为database</td></tr><tr><td>comment = Do not arbitrarily modify the database file</td><td>警告用户不要随意修改数据库</td></tr><tr><td>path = /home/database</td><td>共享目录为/home/database</td></tr><tr><td>public = no</td><td>关闭"所有人可见"</td></tr><tr><td>writable = yes</td><td>允许写入操作</td></tr></table><p>第1步:创建用于访问共享资源的账户信息</p><pre> id linuxprobe pdbedit -a -u linuxprobe 输入该账户在Samba服务数据库中的密码 再次输入密码进行确认</pre><p>用户口令认证模式(user). 这种认证模式可以确保仅让有密码且受信任的用户访问共享资源, 而且验证过程也十分简单. 不过, 只有建立账户信息数据库之后, 才能使用用户口令认证模式.</p><p>另外, Samba服务程序的数据库要求账户必须在当前系统中已经存在, 否则日后创建文件时将导致文件的权限属性混乱不堪, 由此引发错误.</p><p>pdbedit命令用于管理SMB服务程序的账户信息数据库, 格式为<code>pdbedit [选项] 账户</code>. 在第一次把账户信息写入到数据库时需要使用-a参数.</p><table>用于pdbedit命令的参数以及作用<tr><td>-a 用户名</td><td>建立Samba用户</td></tr><tr><td>-x 用户名</td><td>删除Samba用户</td></tr><tr><td>-L</td><td>列出用户列表</td></tr><tr><td>-Lv</td><td>列出用户详细信息的列表</td></tr></table><p>第2步:创建用于共享资源的文件目录在创建时, 不仅要考虑到文件读写权限的问题, 而且由于/home目录是系统中普通用户的家目录, 因此还需要考虑应用于该目录的SELinux安全上下文所带来的限制.</p><pre> mkdir /home/database chown -Rf linuxprobe:linuxprobe /home/database semanage fcontext -a -t samba_share_t /home/database restorecon -Rv /home/database</pre><p>第3步:设置SELinux服务与策略, 使其允许通过Samba服务程序访问普通用户家目录. 执行getsebool命令, 筛选出所有与Samba服务程序相关的SELinux域策略, 根据策略的名称选择出正确的策略条目进行开启即可.</p><pre> getsebool -a | grep samba samba_enable_home_dirs --> off setsebool -P samba_enable_home_dirs on</pre><p>第4步:在Samba服务程序的主配置文件中, 根据指定格式写入共享信息. 在原始的配置文件中, [homes]参数为来访用户的家目录共享信息, [printers]参数为共享的打印机设备. 这两项如果不需要可以删除.</p><pre> vim /etc/samba/smb.conf  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">  workgroup = MYGROUP</span><br><span class="line"> <span class="built_in"> server </span>string = Samba<span class="built_in"> Server </span>Version %v</span><br><span class="line">  log file = /var/log/samba/log.%m</span><br><span class="line">  max log size = 50</span><br><span class="line">  security = user</span><br><span class="line">  passdb backend = tdbsam</span><br><span class="line">  load printers = <span class="literal">yes</span></span><br><span class="line">  cups options = raw</span><br><span class="line">[database]</span><br><span class="line">  comment = <span class="keyword">Do</span> <span class="keyword">not</span> arbitrarily modify the database file</span><br><span class="line">  path = /home/database</span><br><span class="line">  public = <span class="literal">no</span></span><br><span class="line">  writable = <span class="literal">yes</span></span><br></pre></td></tr></table></figure></pre><p>第5步:重启smb服务(Samba服务程序在Linux系统中的名字为smb)并清空iptables防火墙, 然后就检验配置效果.</p><pre> systemctl restart smb systemctl enable smb iptables -F service iptables save</pre><table>Samba服务器和Windows客户端使用的操作系统以及IP地址<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>Samba共享服务器</td><td>RHEL 7</td><td>192.168.10.10</td></tr><tr><td>Linux客户端</td><td>RHEL 7</td><td>192.168.10.20</td></tr><tr><td>Windows客户端</td><td>Windows 7</td><td>192.168.10.30</td></tr></table><h3 id="Windows挂载共享"><a href="#Windows挂载共享" class="headerlink" title="Windows挂载共享"></a>Windows挂载共享</h3><p>在Windons系统中, 按<code>Win + R</code>后输入ip地址回车后输入用户名和密码进行访问.</p><pre> Win + R \\ip地址 输入用户名 输入密码</pre><h3 id="Linux挂载共享"><a href="#Linux挂载共享" class="headerlink" title="Linux挂载共享"></a>Linux挂载共享</h3><p>Samba服务程序还可以实现Linux系统之间的文件共享, 在客户端安装支持文件共享服务的软件包(cifs-utils).<br><code>yum install cifs-utils</code></p><p>在Linux客户端, 按照Samba服务的用户名、密码、共享域的顺序将相关信息写入到一个认证文件中. 为了保证不被其他人随意看到, 最后把这个认证文件的权限修改为仅root管理员才能够读写:</p><pre> vim auth.smb <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=linuxprobe</span><br><span class="line"><span class="attr">password</span>=redhat</span><br><span class="line"><span class="attr">domain</span>=MYGROUP</span><br></pre></td></tr></table></figure> chmod -Rf 600 auth.smb</pre><p>在Linux客户端上创建一个用于挂载Samba服务共享资源的目录, 并把挂载信息写入到/etc/fstab文件中, 以确保共享挂载信息在服务器重启后依然生效:</p><pre> mkdir /database echo "//ip地址/database /database cifs credentials=/root/auth.smb 0 0" >> /etc/fstab mount -a CentOS挂载: mount -t cifs -o username=linuxprobe,password=linux,sec=ntlmssp //ip地址/database /database</pre><p>访问共享资源<br><code>ls /database/</code></p><h2 id="NFS网络文件系统"><a href="#NFS网络文件系统" class="headerlink" title="NFS网络文件系统"></a>NFS网络文件系统</h2><p>需要共享文件的主机都是Linux系统的话可以在客户端部署NFS服务来共享文件. NFS(网络文件系统)服务可以将远程Linux系统上的文件共享资源挂载到本地主机的目录上, 从而使得本地主机(Linux客户端)基于TCP/IP协议, 像使用本地主机上的资源那样读写远程Linux系统上的共享文件.</p><p>使用Yum软件仓库安装NFS软件包<br><code>yum install nfs-utils</code></p><p>第1步:为了检验NFS服务配置的效果, 我们需要使用两台Linux主机(一台充当NFS服务器, 一台充当NFS客户端).</p><table> 两台Linux主机所使用的操作系统以及IP地址<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>NFS服务端</td><td>RHEL 7</td><td>192.168.10.10</td></tr><tr><td>NFS客户端</td><td>RHEL 7</td><td>192.168.10.20</td></tr></table><p>第2步:在NFS服务器上建立用于NFS文件共享的目录, 并设置足够的权限确保其他人也有写入权限.</p><pre> mkdir /nfsfile chmod -Rf 777 /nfsfile echo "welcome to linuxprobe.com" > /nfsfile/readme</pre><p>第3步:NFS服务程序的配置文件为/etc/exports, 默认情况下里面没有任何内容. 我们可以按照”共享目录的路径 允许访问的NFS客户端(共享权限参数)”的格式, 定义要共享的目录与相应的权限.</p><p>如果想要把/nfsfile目录共享给192.168.10.0/24网段内的所有主机, 让这些主机都拥有读写权限, 在将数据写入到NFS服务器的硬盘中后才会结束操作, 最大限度保证数据不丢失, 以及把来访客户端root管理员映射为本地的匿名用户等, 则可以按照下面命令中的格式:</p><pre> vim /etc/exports <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/nfsfile <span class="number">192.168</span><span class="number">.10</span>.*(rw,sync,root_squash)</span><br></pre></td></tr></table></figure></pre><table>用于配置NFS服务程序配置文件的参数<tr><td>参数</td><td>作用</td></tr><tr><td>ro</td><td>只读</td></tr><tr><td>rw</td><td>读写</td></tr><tr><td>root_squash</td><td>当NFS客户端以root管理员访问时, 映射为NFS服务器的匿名用户.</td></tr><tr><td>no_root_squash</td><td>当NFS客户端以root管理员访问时, 映射为NFS服务器的root管理员.</td></tr><tr><td>all_squash</td><td>无论NFS客户端使用什么账户访问, 均映射为NFS服务器的匿名用户.</td></tr><tr><td>sync</td><td>同时将数据写入到内存与硬盘中, 保证不丢失数据.</td></tr><tr><td>async</td><td>优先将数据保存到内存, 然后再写入硬盘; 这样效率更高, 但可能会丢失数据.</td></tr></table><p>第4步:启动和启用NFS服务程序. 由于在使用NFS服务进行文件共享之前, 需要使用RPC(Remote Procedure Call, 远程过程调用)服务将NFS服务器的IP地址和端口号等信息发送给客户端. 因此, 在启动NFS服务之前, 还需要顺带重启并启用rpcbind服务程序, 并将这两个服务一并加入开机启动项中.</p><pre> systemctl restart rpcbind systemctl enable rpcbind systemctl start nfs-server systemctl enable nfs-server</pre><p>使用showmount命令查询NFS服务器的远程共享信息, 其输出格式为”共享的目录名称 允许使用客户端地址”.</p><pre> showmount -e 192.168.10.10 Export list for 192.168.10.10: /nfsfile 192.168.10.*</pre><table>showmount命令中可用的参数以及作用<tr><td>参数</td><td>作用</td></tr><tr><td>-e</td><td>显示NFS服务器的共享列表</td></tr><tr><td>-a</td><td>显示本机挂载的文件资源的情况NFS资源的情况</td></tr><tr><td>-v</td><td>显示版本号</td></tr></table><p>在NFS客户端创建一个挂载目录, 永久挂载写入fstab文件中.</p><pre> mkdir /nfsfile mount -t nfs 192.168.10.10:/nfsfile /nfsfile echo "192.168.10.10:/nfsfile /nfsfile nfs defaults 0 0" >> /etc/fstab cat /nfsfile/readme</pre><h2 id="AutoFs自动挂载服务"><a href="#AutoFs自动挂载服务" class="headerlink" title="AutoFs自动挂载服务"></a>AutoFs自动挂载服务</h2><p>autofs服务程序是一种Linux系统守护进程, 当检测到用户试图访问一个尚未挂载的文件系统时, 将自动挂载该文件系统.</p><p>使用Yum软件仓库安装autofs服务程序<br><code>yum install autofs</code></p><p>在autofs服务程序的主配置文件中需要按照”挂载目录 子配置文件”的格式进行填写, 挂载目录是设备挂载位置的上一级目录. 对应的子配置文件则是对这个挂载目录内的挂载设备信息作进一步的说明. 子配置文件需要用户自行定义, 文件名字没有严格要求, 但后缀建议以.misc结束.<br>例: 光盘设备一般挂载到/media/cdrom目录中, 那么挂载目录写成/media即可.</p><pre> vim /etc/auto.master <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/media</span>  <span class="string">/etc/iso.misc</span></span><br></pre></td></tr></table></figure></pre><p>在子配置文件中, 应按照”挂载目录 挂载文件类型及权限 :设备名称”的格式进行填写. 配置完成后再顺手将autofs服务程序启动并加入到系统启动项中:</p><pre> vim /etc/iso.misc <figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iso   -fstype=iso9660,ro,nosuid,nodev <span class="symbol">:/dev/cdrom</span></span><br></pre></td></tr></table></figure> systemctl start autofs  systemctl enable autofs </pre><p>查看当前的光盘设备挂载情况, 确认光盘设备没有被挂载上. 使用cd命令切换到这个iso子目录中, 而且光盘设备会被立即自动挂载.</p><pre> df -h cd /media/iso df -h</pre><h1 id="使用Bind提供域名解析服务"><a href="#使用Bind提供域名解析服务" class="headerlink" title="使用Bind提供域名解析服务"></a>使用Bind提供域名解析服务</h1><h2 id="DNS域名解析服务"><a href="#DNS域名解析服务" class="headerlink" title="DNS域名解析服务"></a>DNS域名解析服务</h2><p>为了降低用户访问网络资源的门槛, DNS(Domain Name System, 域名系统)技术是一项用于管理和解析域名与IP地址对应关系的技术.</p><p>简单来说, 就是能够接受用户输入的域名或IP地址, 然后自动查找与之匹配(或者说具有映射关系)的IP地址或域名, 即将域名解析为IP地址(正向解析), 或将IP地址解析为域名(反向解析).</p><p>DNS域名解析技术的正向解析也是我们最常使用的一种工作模式</p><p>鉴于互联网中的域名和IP地址对应关系数据库太过庞大, DNS域名解析服务采用了类似目录树的层次结构来记录域名与IP地址之间的对应关系, 从而形成了一个分布式的数据库系统.</p><p><img src="/post/cea46563/DNS%E7%BB%93%E6%9E%84%E6%A8%A1%E5%9E%8B.jpg" alt="DNS结构模型"></p><p>域名后缀一般分为国际域名和国内域名. 原则上来讲, 域名后缀都有严格的定义, 但在实际使用时可以不必严格遵守. </p><table>目前最常见的域名后缀:<tr><td>.com(商业组织)</td></tr><tr><td>.org(非营利组织)</td></tr><tr><td>.gov(政府部门)</td></tr><tr><td>.net(网络服务商)</td></tr><tr><td>.edu(教研机构)</td></tr><tr><td>.pub(公共大众)</td></tr><tr><td>.cn(中国国家顶级域名)</td></tr></table><p>DNS技术作为互联网基础设施中重要的一环, 为了为网民提供不间断、稳定且快速的域名查询服务, 保证互联网的正常运转, 提供了下面三种类型的服务器:</p><pre> 主服务器: 在特定区域内具有唯一性, 负责维护该区域内的域名与IP地址之间的对应关系. 从服务器: 从主服务器中获得域名与IP地址的对应关系并进行维护, 以防主服务器宕机等情况. 缓存服务器: 通过向其他域名解析服务器查询获得域名与IP地址的对应关系, 并将经常查询的域名信息保存到服务器本地, 以此来提高重复查询时的效率.</pre><p>在执行用户发起的域名查询请求时, 具有递归查询和迭代查询两种方式. </p><p>递归查询是指DNS服务器在收到用户发起的请求时, 必须向用户返回一个准确的查询结果. 如果DNS服务器本地没有存储与之对应的信息, 则该服务器需要询问其他服务器, 并将返回的查询结果提交给用户. </p><p>迭代查询则是指DNS服务器在收到用户发起的请求时, 并不直接回复查询结果, 而是告诉另一台DNS服务器的地址, 用户再向这台DNS服务器提交请求, 这样依次反复, 直到返回查询结果.</p><p>向DNS服务器发起域名查询请求的流程:<br><img src="/post/cea46563/DNS%E6%9F%A5%E8%AF%A2%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="DNS查询流程图"></p><table>13台根DNS服务器的具体信息<tr><td>名称</td><td>管理单位</td><td>地理位置</td><td>IP地址</td></tr><tr><td>A</td><td>INTERNIC.NET</td><td>美国-弗吉尼亚州</td><td>198.41.0.4</td></tr><tr><td>B</td><td>美国信息科学研究所</td><td>美国-加利弗尼亚州</td><td>128.9.0.107</td></tr><tr><td>C</td><td>PSINet公司</td><td>美国-弗吉尼亚州</td><td>192.33.4.12</td></tr><tr><td>D</td><td>马里兰大学</td><td>美国-马里兰州</td><td>128.8.10.90</td></tr><tr><td>E</td><td>美国航空航天管理局</td><td>美国加利弗尼亚州</td><td>192.203.230.10</td></tr><tr><td>F</td><td>因特网软件联盟</td><td>美国加利弗尼亚州</td><td>192.5.5.241</td></tr><tr><td>G</td><td>美国国防部网络信息中心</td><td>美国弗吉尼亚州</td><td>192.112.36.4</td></tr><tr><td>H</td><td>美国陆军研究所</td><td>美国-马里兰州</td><td>128.63.2.53</td></tr><tr><td>I</td><td>Autonomica公司</td><td>瑞典-斯德哥尔摩</td><td>192.36.148.17</td></tr><tr><td>J</td><td>VeriSign公司</td><td>美国-弗吉尼亚州</td><td>192.58.128.30</td></tr><tr><td>K</td><td>RIPE NCC</td><td>英国-伦敦</td><td>193.0.14.129</td></tr><tr><td>L</td><td>IANA</td><td>美国-弗吉尼亚州</td><td>199.7.83.42</td></tr><tr><td>M</td><td>WIDE Project</td><td>日本-东京</td><td>202.12.27.33</td></tr></table><h2 id="安装Bind服务程序"><a href="#安装Bind服务程序" class="headerlink" title="安装Bind服务程序"></a>安装Bind服务程序</h2><p>BIND(Berkeley Internet Name Domain, 伯克利因特网名称域)服务是全球范围内使用最广泛、最安全可靠且高效的域名解析服务程序. DNS域名解析服务作为互联网基础设施服务, 建议在生产环境中安装部署bind服务程序时加上chroot(俗称牢笼机制)扩展包, 以便有效地限制bind服务程序仅能对自身的配置文件进行操作, 以确保整个服务器的安全.<br><code>yum install bind-chroot</code></p><p>在bind服务程序中有下面这三个比较关键的文件:</p><pre> 主配置文件(/etc/named.conf): 只有58行, 而且在去除注释信息和空行之后, 实际有效的参数仅有30行左右, 这些参数用来定义bind服务程序的运行. 区域配置文件(/etc/named.rfc1912.zones): 用来保存域名和IP地址对应关系的所在位置. 类似于图书的目录, 对应着每个域和相应IP地址所在的具体位置, 当需要查看或修改时, 可根据这个位置找到相关文件. 数据配置文件目录(/var/named): 该目录用来保存域名和IP地址真实对应关系的数据配置文件.</pre><p>在Linux系统中, bind服务程序的名称为named. 首先需要在/etc目录中找到该服务程序的主配置文件, 然后把第11行和第17行的地址均修改为any, 分别表示服务器上的所有IP地址均可提供DNS域名解析服务, 以及允许所有人对本服务器发送DNS查询请求. 这两个地方一定要修改准确.</p><pre> vim /etc/named.conf <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen-on<span class="built_in"> port </span>53 &#123; any; &#125;;</span><br><span class="line">allow-query &#123; any; &#125;;</span><br></pre></td></tr></table></figure></pre><p>bind服务程序的区域配置文件(/etc/named.rfc1912.zones)用来保存域名和IP地址对应关系的所在位置. 在这个文件中, 定义了域名与IP地址解析规则保存的文件位置以及服务类型等内容, 而没有包含具体的域名、IP地址对应关系等信息.<br>服务类型有三种: hint(根区域)、master(主区域)、slave(辅助区域).<br>常用的master和slave指的就是主服务器和从服务器.</p><p>正向解析参数:</p><pre> zone "linuxprobe.com" IN {   type master; #服务类型   file "linuxprobe.com.zone"; #域名与IP地址解析规则保存的文件位置   allow-update { none; }; #允许那些客户机动态更新解析信息 };</pre><p>反向解析参数</p><pre> zone "10.168.192.in-addr.arpa" IN { #表示为192.168.10.0/24网段的反向解析区域   type master;   file "192.168.10.arpa"; };</pre><h2 id="正向解析实验"><a href="#正向解析实验" class="headerlink" title="正向解析实验"></a>正向解析实验</h2><p>在DNS域名解析服务中, 正向解析是指根据域名(主机名)查找到对应的IP地址.</p><p>第1步: 编辑区域配置文件</p><pre> vim /etc/named.rfc1912.zones <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"linuxprobe.com"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line"> <span class="built_in"> type </span>master;</span><br><span class="line">  file <span class="string">"linuxprobe.com.zone"</span>;</span><br><span class="line">  allow-update &#123;none;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></pre><p>第2步: 编辑数据配置文件<br>从/var/named目录中复制一份正向解析的模板文件(named.localhost), 然后把域名和IP地址的对应数据填写数据配置文件中并保存.<br>复制时加-a参数, 可以保留原始文件的所有者、所属组、权限属性等信息.</p><pre> cd /var/named/ ls -al named.localhost cp -a named.localhost linuxprobe.com.zone vim linuxprobe.com.zone <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$TTL</span> <span class="string">1D</span><span class="comment">#生存周期为1天</span></span><br><span class="line"><span class="string">@</span>    <span class="string">IN</span> <span class="string">SOA</span>           <span class="string">linuxprobe.com.</span>  <span class="string">root.linuxprobe.com.</span><span class="string">(</span></span><br><span class="line">     <span class="comment">#授权信息开始:    #DNS区域的地址  #域名管理员的邮箱(不要用@符号)</span></span><br><span class="line">                                                                 <span class="number">0</span><span class="string">;serial</span><span class="comment">#更新序列号</span></span><br><span class="line">                                                                 <span class="string">1D;refresh</span><span class="comment">#更新时间</span></span><br><span class="line">                                                                 <span class="string">1H;retry</span><span class="comment">#重试延时</span></span><br><span class="line">                                                                 <span class="string">1W;expire</span><span class="comment">#失效时间</span></span><br><span class="line">                                                                 <span class="string">3H;)minimum</span><span class="comment">#无效解析记录的缓存时间</span></span><br><span class="line">     <span class="string">NS</span>               <span class="string">ns.linuxprobe.com.</span>                 <span class="comment">#域名服务器记录</span></span><br><span class="line"><span class="string">ns</span>   <span class="string">IN</span> <span class="string">A</span>      <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>                         <span class="comment">#地址记录(ns.linuxprobe.com.)</span></span><br><span class="line">     <span class="string">IN</span> <span class="string">MX</span> <span class="number">10</span>      <span class="string">mail.linuxprobe.com.</span>                 <span class="comment">#邮箱交换记录</span></span><br><span class="line"><span class="string">mail</span> <span class="string">IN</span> <span class="string">A</span>      <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>                         <span class="comment">#地址记录(mail.linuxprobe.com.)</span></span><br><span class="line"><span class="string">www</span>  <span class="string">IN</span> <span class="string">A</span>      <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>                         <span class="comment">#地址记录(www.linuxprobe.com.)</span></span><br><span class="line"><span class="string">bbs</span>  <span class="string">IN</span> <span class="string">A</span>      <span class="number">192.168</span><span class="number">.10</span><span class="number">.20</span>                         <span class="comment">#地址记录(bbs.linuxprobe.com.)</span></span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>第3步: 检验解析结果<br>nslookup命令用于检测能否从DNS服务器中查询到域名与IP地址的解析记录, 进而更准确地检验DNS服务器是否已经能够为用户提供服务.</p><pre> systemctl restart network nslookup www.linuxprobe.com bbs.linuxprobe.com</pre><h2 id="反向解析实验"><a href="#反向解析实验" class="headerlink" title="反向解析实验"></a>反向解析实验</h2><p>在DNS域名解析服务中, 反向解析的作用是将用户提交的IP地址解析为对应的域名信息, 它一般用于对某个IP地址上绑定的所有域名进行整体屏蔽, 屏蔽由某些域名发送的垃圾邮件. 它也可以针对某个IP地址进行反向解析, 大致判断出有多少个网站运行在上面.</p><p>第1步: 编辑区域配置文件<br>反向解析是把IP地址解析成域名格式, 因此在定义zone(区域)时应该要把IP地址反写, 只需写出IP地址的网络位即可.</p><pre> vim /etc/named.rfc1912.zones <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"10.168.192.in-addr.arpa"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line"> <span class="built_in"> type </span>master;</span><br><span class="line">  file <span class="string">"192.168.10.arpa"</span>;</span><br><span class="line">  allow-update &#123;none;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></pre><p>第2步: 编辑数据配置文件<br>首先从/var/named目录中复制一份反向解析的模板文件(named.loopback), 然后把下面的参数填写到文件中. 其中, IP地址仅需要写主机位.</p><pre> cd /var/named/ cp -a named.loopback 192.168.10.arpa vim 192.168.10.arpa <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@IN SOAlinuxprobe.com.root.linuxprobe.com. (</span><br><span class="line">                                                      <span class="number">0</span>;serial</span><br><span class="line">                                                      <span class="number">1</span>D;<span class="built_in">ref</span>resh</span><br><span class="line">                                                      <span class="number">1</span>H;retry</span><br><span class="line">                                                      <span class="number">1</span>W;expire</span><br><span class="line">                                                      <span class="number">3</span>H);minimum</span><br><span class="line">        NS      ns.linuxprobe.com.</span><br><span class="line">nsA       <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br><span class="line"><span class="number">10</span>PTRns.linuxprobe.com.#PTR为指针记录, 仅用于反向解析中.</span><br><span class="line"><span class="number">10</span>PTRmail.linuxprobe.com.</span><br><span class="line"><span class="number">10</span>PTRwww.linuxprobe.com.</span><br><span class="line"><span class="number">20</span>PTRbbs.linuxprobe.com.</span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>第3步: 检验解析结果, 也要把把系统网卡中的DNS地址参数修改成了本机IP地址.</p><pre> nslookup 192.168.10.10 192.168.10.20</pre><h2 id="部署从服务器"><a href="#部署从服务器" class="headerlink" title="部署从服务器"></a>部署从服务器</h2><p>在DNS域名解析服务中, 从服务器可以从主服务器上获取指定的区域数据文件, 从而起到备份解析记录与负载均衡的作用, 因此通过部署从服务器可以减轻主服务器的负载压力, 还可以提升用户的查询效率.</p><table>主服务器与从服务器分别使用的操作系统与IP地址信息<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>主服务器</td><td>RHEL 7</td><td>192.168.10.10</td></tr><tr><td>从服务器</td><td>RHEL 7</td><td>192.168.10.20</td></tr></table><p>第1步:在主服务器的区域配置文件中允许该从服务器的更新请求, 然后重启主服务器的DNS服务程序.</p><pre> vim /etc/named.rfc1912.zones <figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow-<span class="keyword">update</span> &#123; 从服务器的ip地址; &#125;;</span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>修改从服务器的配置文件</p><pre> vim /etc/named.conf listen-on port 53 { any; }; allow-query { any; };</pre><p>第2步: 在从服务器中填写主服务器的IP地址与要抓取的区域信息, 然后重启服务.</p><pre> vim /etc/named.rfc1912.zones <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"linuxprobe.com"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">type slave;</span><br><span class="line">masters &#123; 主服务器的ip地址; &#125;;</span><br><span class="line">file <span class="string">"slaves/linuxprobe.com.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">"10.168.192.in-addr.arpa"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">type slave;</span><br><span class="line">masters &#123; 主服务器的ip地址; &#125;;</span><br><span class="line">file <span class="string">"slaves/192.168.10.arpa"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>第3步: 主服务器查看防火墙, 如果没有指定端口则开启指定端口.</p><pre> firewall-cmd --list-port firewall-cmd --zone=public --add-port=53/tcp --permanent firewall-cmd --zone=public --add-port=53/udp --permanent firewall-cmd --reload</pre><p>第4步: 检验解析结果</p><pre> cd /var/named/slaves ls nslookup www.linuxprobe.com 192.168.10.10</pre><h2 id="安全的加密传输"><a href="#安全的加密传输" class="headerlink" title="安全的加密传输"></a>安全的加密传输</h2><p>bind服务程序为了提供安全的解析服务, 已经对TSIG(RFC 2845)加密机制提供了支持. TSIG主要是利用了密码编码的方式来保护区域信息的传输(Zone Transfer), 即TSIG加密机制保证了DNS服务器之间传输域名区域信息的安全性.</p><p>删除所有获取到的数据配置文件</p><pre> rm -rf /var/named/slaves/*</pre><p>第1步: 在主服务器中生成密钥, dnssec-keygen命令用于生成安全的DNS服务密钥.</p><pre> dnssec-keygen [参数] |__ -a 指定加密算法, 包括RSAMD5(RSA)、RSASHA1、DSA、NSEC3RSASHA1、NSEC3DSA等 |__ -b 密钥长度(HMAC-MD5的密钥长度在1~512位之间) |__ -n 密钥的类型(HOST表示与主机相关)</pre><p>使用命令生成一个主机名称为master-slave的128位HMAC-MD5算法的密钥文件. 在执行该命令后默认会在当前目录中生成公钥和私钥文件, 把私钥文件中Key参数后面的值记录下来, 一会儿要将其写入传输配置文件中.</p><pre> cd ~ dnssec-keygen -a HMAC-MD5 -b 128 -n HOST master-slave ls -al Kmaster-slave.+157+46845.* cat Kmaster-slave.+157+46845.private <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Algorithm: <span class="number">157</span> (HMAC_MD5)</span><br><span class="line">Key: <span class="number">1</span>XEEL3tG5DNLOw+<span class="number">1</span>WHfE3Q==</span><br></pre></td></tr></table></figure></pre><p>第2步: 在主服务器中创建密钥验证文件. 进入bind服务程序用于保存配置文件的目录, 把刚刚生成的密钥名称、加密算法和私钥加密字符串按照下面格式写入到tansfer.key传输配置文件中. 为了安全起见, 将文件的所属组修改成named, 并将文件权限设置得要小一点, 然后把该文件做一个硬链接到/etc目录中.</p><pre> cd /var/named/chroot/etc/ vim transfer.key <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">key <span class="string">"master-slave"</span> &#123;</span><br><span class="line">  algorithm hmac-md5;</span><br><span class="line"> <span class="built_in"> secret </span><span class="string">"1XEEL3tG5DNLOw+1WHfE3Q=="</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> chown root:named transfer.key chmod 640 transfer.key ln transfer.key /etc/transfer.key</pre><p>第3步:开启并加载Bind服务的密钥验证功能. 首先需要在主服务器的主配置文件中加载密钥验证文件, 然后进行设置, 使得只允许带有master-slave密钥认证的DNS服务器同步数据配置文件:</p><pre> vim /etc/named.conf <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">include <span class="string">"/etc/transfer.key"</span>;</span><br><span class="line"><span class="class">options </span>&#123;</span><br><span class="line"></span><br><span class="line">allow-<span class="class">query </span>&#123; any; &#125;;</span><br><span class="line">allow-<span class="class">transfer </span>&#123; key master-slave; &#125;;</span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>清空DNS从服务器同步目录中所有的数据配置文件, 然后再次重启bind服务程序, 这时就已经不能像刚才那样自动获取到数据配置文件.</p><pre> rm -rf /var/named/slaves/* systemctl restart named ls  /var/named/slaves/</pre><p>第4步: 配置从服务器, 使其支持密钥验证. 配置DNS从服务器和主服务器的方法大致相同, 都需要在bind服务程序的配置文件目录中创建密钥认证文件, 并设置相应的权限, 然后把该文件做一个硬链接到/etc目录中.</p><pre> cd /var/named/chroot/etc vim transfer.key <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">key <span class="string">"master-slave"</span> &#123;</span><br><span class="line">  algorithm hmac-md5;</span><br><span class="line"> <span class="built_in"> secret </span><span class="string">"1XEEL3tG5DNLOw+1WHfE3Q=="</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> chown root:named transfer.key chmod 640 transfer.key ln transfer.key /etc/transfer.key</pre><p>第5步: 开启并加载从服务器的密钥验证功能. 这一步的操作步骤也同样是在主配置文件中加载密钥认证文件, 然后按照指定格式写上主服务器的IP地址和密钥名称. 注意, 密钥名称等参数位置不要太靠前, 大约在第43行比较合适, 否则bind服务程序会因为没有加载完预设参数而报错:</p><pre> vim /etc/named.conf <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">include <span class="string">"/etc/transfer.key"</span>;</span><br><span class="line">options &#123;</span><br><span class="line"></span><br><span class="line">allow-query &#123; any; &#125;;</span><br><span class="line">allow-transfer &#123; key master-slave; &#125;;</span><br><span class="line"></span><br><span class="line">server 192.168.10.10</span><br><span class="line">&#123;</span><br><span class="line">keys &#123; master-slave; &#125;;</span><br><span class="line">&#125;; </span><br><span class="line">logging &#123;</span><br></pre></td></tr></table></figure></pre><p>第6步: DNS从服务器同步域名区域数据</p><pre> systemctl restart named ls /var/named/slaves/</pre><h2 id="部署缓存服务器"><a href="#部署缓存服务器" class="headerlink" title="部署缓存服务器"></a>部署缓存服务器</h2><p>DNS缓存服务器(Caching DNS Server)是一种不负责域名数据维护的DNS服务器. 简单来说, 缓存服务器就是把用户经常使用到的域名与IP地址的解析记录保存在主机本地, 从而提升下次解析的效率.</p><p>DNS缓存服务器一般用于经常访问某些固定站点而且对这些网站的访问速度有较高要求的企业内网中, 但实际的应用并不广泛. 而且, 缓存服务器是否可以成功解析还与指定的上级DNS服务器的允许策略有关, 因此当前仅需了解即可.</p><p>第1步: 配置系统的双网卡参数</p><table>用于配置Linux虚拟机系统所需的参数信息<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>缓存服务器</td><td>RHEL 7</td><td>网卡(外网): 根据物理设备的网络参数进行配置(通过DHCP或手动方式指定IP地址与网关等信息)</td></tr><tr><td></td><td></td><td>网卡(内网): 192.168.10.10</td></tr><tr><td>客户端</td><td>RHEL 7</td><td>192.168.10.20</td></tr></table><p>第2步: 在bind服务程序的主配置文件中添加缓存转发参数, 上级DNS服务器地址指的是获取数据配置文件的服务器.</p><pre> systemctl restart network vim /etc/named.conf <figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow-query &#123; any<span class="comment">; &#125;;</span></span><br><span class="line">forwarders &#123; 上级DNS服务器地址<span class="comment">; &#125;;</span></span><br></pre></td></tr></table></figure> systemctl restart named</pre><p>第3步: 重启DNS服务, 把客户端主机的DNS服务器地址参数修改为DNS缓存服务器的IP地址.<br><img src="/post/cea46563/%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E7%BD%91%E5%8D%A1%E4%BF%A1%E6%81%AF.jpg" alt="配置客户端的网卡信息"></p><pre> systemctl restart network nslookup www.linuxprobe.com 8.8.8.8</pre><h2 id="分离解析技术"><a href="#分离解析技术" class="headerlink" title="分离解析技术"></a>分离解析技术</h2><p>可以购买多台服务器并分别部署在全球各地, 使用DNS服务的分离解析功能, 即可让位于不同地理范围内的读者通过访问相同的网址, 而从不同的服务器获取到相同的数据.</p><table>不同主机的操作系统与IP地址情况<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>DNS服务器</td><td>RHEL 7</td><td>北京网络:122.71.115.10</td></tr><tr><td></td><td></td><td>美国网络:106.185.25.10</td></tr><tr><td>北京用户</td><td>Windows 7</td><td>122.71.115.1</td></tr><tr><td>海外用户</td><td>Windows 7</td><td>106.185.25.1</td></tr></table><p><img src="/post/cea46563/DNS%E5%88%86%E7%A6%BB%E8%A7%A3%E6%9E%90%E6%8B%93%E6%89%91%E5%9B%BE.png" alt="DNS分离解析拓扑图"></p><p>第1步: 修改bind服务程序的主配置文件, 把第11行的监听端口与第17行的允许查询主机修改为any. 由于配置的DNS分离解析功能与DNS根服务器配置参数有冲突, 所以需要把第51~54行的根域信息删除.</p><pre> vim /etc/named.conf <s>zone "." IN {</s> <s>type hint;</s> <s>file "named.ca";</s> <s>};</s></pre><p>第2步: 编辑区域配置文件. 把区域配置文件中原有的数据清空, 然后按照以下格式写入参数. 首先使用acl参数分别定义两个变量名称(china与american), 当下面需要匹配IP地址时只需写入变量名称即可, 这样不仅容易阅读识别, 而且也利于修改维护.</p><p>view参数的作用是通过判断用户的IP地址是中国的还是美国的, 然后去分别加载不同的数据配置文件.</p><pre> vim /etc/named.rfc1912.zones  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">acl <span class="string">"china"</span> &#123; 122.71.115.0/24; &#125;;</span><br><span class="line">acl <span class="string">"american"</span> &#123; 106.185.25.0/24;&#125;; </span><br><span class="line"></span><br><span class="line">view <span class="string">"china"</span>&#123;</span><br><span class="line">match-clients &#123; <span class="string">"china"</span>; &#125;;</span><br><span class="line">zone <span class="string">"linuxprobe.com"</span> &#123;</span><br><span class="line">type master;</span><br><span class="line">file <span class="string">"linuxprobe.com.china"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">view <span class="string">"american"</span> &#123;</span><br><span class="line">match-clients &#123; <span class="string">"american"</span>; &#125;;</span><br><span class="line">zone <span class="string">"linuxprobe.com"</span> &#123;</span><br><span class="line">type master;</span><br><span class="line">file <span class="string">"linuxprobe.com.american"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></pre><p>第3步: 建立数据配置文件. 分别通过模板文件创建出两份不同名称的区域数据文件, 其名称应与上面区域配置文件中的参数相对应.</p><pre> cd /var/named cp -a named.localhost linuxprobe.com.china cp -a named.localhost linuxprobe.com.american vim linuxprobe.com.china <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$TTL</span> <span class="string">1D</span><span class="comment">#生存周期为1天</span></span><br><span class="line"><span class="string">@</span>    <span class="string">IN</span> <span class="string">SOA</span>           <span class="string">linuxprobe.com.</span>  <span class="string">root.linuxprobe.com.</span><span class="string">(</span></span><br><span class="line">     <span class="comment">#授权信息开始:    #DNS区域的地址  #域名管理员的邮箱(不要用@符号)</span></span><br><span class="line">                                                                 <span class="number">0</span><span class="string">;serial</span><span class="comment">#更新序列号</span></span><br><span class="line">                                                                 <span class="string">1D;refresh</span><span class="comment">#更新时间</span></span><br><span class="line">                                                                 <span class="string">1H;retry</span><span class="comment">#重试延时</span></span><br><span class="line">                                                                 <span class="string">1W;expire</span><span class="comment">#失效时间</span></span><br><span class="line">                                                                 <span class="string">3H;)minimum</span><span class="comment">#无效解析记录的缓存时间</span></span><br><span class="line">     <span class="string">NS</span>               <span class="string">ns.linuxprobe.com.</span>                 <span class="comment">#域名服务器记录</span></span><br><span class="line"><span class="string">ns</span>   <span class="string">IN</span> <span class="string">A</span>      <span class="number">122.71</span><span class="number">.115</span><span class="number">.10</span>                         <span class="comment">#地址记录(ns.linuxprobe.com.)</span></span><br><span class="line"><span class="string">www</span>  <span class="string">IN</span> <span class="string">A</span>      <span class="number">122.71</span><span class="number">.115</span><span class="number">.15</span>                         <span class="comment">#地址记录(www.linuxprobe.com.)</span></span><br></pre></td></tr></table></figure> vim linuxprobe.com.american <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$TTL</span> <span class="string">1D</span><span class="comment">#生存周期为1天</span></span><br><span class="line"><span class="string">@</span>    <span class="string">IN</span> <span class="string">SOA</span>           <span class="string">linuxprobe.com.</span>  <span class="string">root.linuxprobe.com.</span><span class="string">(</span></span><br><span class="line">     <span class="comment">#授权信息开始:    #DNS区域的地址  #域名管理员的邮箱(不要用@符号)</span></span><br><span class="line">                                                                 <span class="number">0</span><span class="string">;serial</span><span class="comment">#更新序列号</span></span><br><span class="line">                                                                 <span class="string">1D;refresh</span><span class="comment">#更新时间</span></span><br><span class="line">                                                                 <span class="string">1H;retry</span><span class="comment">#重试延时</span></span><br><span class="line">                                                                 <span class="string">1W;expire</span><span class="comment">#失效时间</span></span><br><span class="line">                                                                 <span class="string">3H;)minimum</span><span class="comment">#无效解析记录的缓存时间</span></span><br><span class="line">     <span class="string">NS</span>               <span class="string">ns.linuxprobe.com.</span>                 <span class="comment">#域名服务器记录</span></span><br><span class="line"><span class="string">ns</span>   <span class="string">IN</span> <span class="string">A</span>      <span class="number">106.185</span><span class="number">.25</span><span class="number">.10</span>                         <span class="comment">#地址记录(ns.linuxprobe.com.)</span></span><br><span class="line"><span class="string">www</span>  <span class="string">IN</span> <span class="string">A</span>      <span class="number">106.185</span><span class="number">.25</span><span class="number">.15</span>                         <span class="comment">#地址记录(www.linuxprobe.com.)</span></span><br></pre></td></tr></table></figure></pre><p>第4步: 重新启动named服务程序, 验证结果. 将客户端主机(Windows系统或Linux系统均可)的IP地址分别设置为122.71.115.1与106.185.25.1, 将DNS地址分别设置为服务器主机的两个IP地址.</p><pre> systemctl restart named windons7(1): ip地址:122.71.115.1 子网掩码:255.255.255.0 默认网关:122.71.115.10 DNS服务器:122.71.115.10 windons7(2): ip地址:106.185.25.1 子网掩码:255.255.255.0 默认网关:106.185.25.10 DNS服务器:106.185.25.10</pre><h1 id="使用DHCP动态管理主机地址"><a href="#使用DHCP动态管理主机地址" class="headerlink" title="使用DHCP动态管理主机地址"></a>使用DHCP动态管理主机地址</h1><h2 id="动态主机地址管理协议"><a href="#动态主机地址管理协议" class="headerlink" title="动态主机地址管理协议"></a>动态主机地址管理协议</h2><p>动态主机配置协议(DHCP)是一种基于UDP协议且仅限于在局域网内部使用的网络协议, 主要用于大型的局域网环境或者存在较多移动办公设备的局域网环境中, 其主要用途是为局域网内部的设备或网络供应商自动分配IP地址等参数.</p><p>简单来说, DHCP协议就是让局域网中的主机自动获得网络参数的服务.</p><p><img src="/post/cea46563/DHCP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="DHCP工作原理"></p><table>DHCP涉及的常见术语<tr><td>作用域</td><td>一个完整的IP地址段, DHCP协议根据作用域来管理网络的分布、分配IP地址及其他配置参数.</td></tr><tr><td>超级作用域</td><td>用于管理处于同一个物理网络中的多个逻辑子网段. 超级作用域中包含了可以统一管理的作用域列表.</td></tr><tr><td>排除范围</td><td>把作用域中的某些IP地址排除, 确保这些IP地址不会分配给DHCP客户端.</td></tr><tr><td>地址池</td><td>在定义了DHCP的作用域并应用了排除范围后, 剩余的用来动态分配给DHCP客户端的IP地址范围.</td></tr><tr><td>租约</td><td>DHCP客户端能够使用动态分配的IP地址的时间</td></tr><tr><td>预约</td><td>保证网络中的特定设备总是获取到相同的IP地址</td></tr></table><h2 id="部署dhcpd服务程序"><a href="#部署dhcpd服务程序" class="headerlink" title="部署dhcpd服务程序"></a>部署dhcpd服务程序</h2><p>dhcpd是Linux系统中用于提供DHCP协议的服务程序</p><p>在确认Yum软件仓库配置妥当之后, 安装dhcpd服务程序:<br><code>yum install dhcp</code></p><p>查看dhcpd服务程序的配置文件内容<br><code>cat /etc/dhcp/dhcpd.conf</code></p><p>一个标准的配置文件应该包括全局配置参数、子网网段声明、地址配置选项以及地址配置参数. 其中, 全局配置参数用于定义dhcpd服务程序的整体运行参数; 子网网段声明用于配置整个子网段的地址属性.<br><img src="/post/cea46563/dhcp%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="dhcp配置文件"></p><table style="text-align:center">dhcpd服务程序配置文件中使用的常见参数以及作用<tr><td>ddns-update-style 类型</td><td>定义DNS服务动态更新的类型, 类型包括:none(不支持动态更新)、interim(互动更新模式)与ad-hoc(特殊更新模式)</td></tr><tr><td>allow/ignore client-updates</td><td>允许/忽略客户端更新DNS记录</td></tr><tr><td>default-lease-time 21600</td><td>默认超时时间</td></tr><tr><td>max-lease-time 43200</td><td>最大超时时间</td></tr><tr><td>option domain-name-servers 8.8.8.8</td><td>定义DNS服务器地址</td></tr><tr><td>option domain-name "domain.org"</td><td>定义DNS域名</td></tr><tr><td>range</td><td>定义用于分配的IP地址池</td></tr><tr><td>option subnet-mask</td><td>定义客户端的子网掩码</td></tr><tr><td>option routers</td><td>定义客户端的网关地址</td></tr><tr><td>broadcast-address 广播地址</td><td>定义客户端的广播地址</td></tr><tr><td>ntp-server IP地址</td><td>定义客户端的网络时间服务器(NTP)</td></tr><tr><td>nis-servers IP地址</td><td>定义客户端的NIS域服务器的地址</td></tr><tr><td>hardware 硬件类型 MAC地址</td><td>指定网卡接口的类型与MAC地址</td></tr><tr><td>server-name 主机名</td><td>向DHCP客户端通知DHCP服务器的主机名</td></tr><tr><td>fixed-address IP地址</td><td>将某个固定的IP地址分配给指定主机</td></tr><tr><td>time-offset 偏移差</td><td>指定客户端与格林尼治时间的偏移差</td></tr></table><h2 id="自动管理IP地址"><a href="#自动管理IP地址" class="headerlink" title="自动管理IP地址"></a>自动管理IP地址</h2><p>DHCP服务器会自动把IP地址、子网掩码、网关、DNS地址等网络信息分配给有需要的客户端, 而且当客户端的租约时间到期后还可以自动回收所分配的IP地址, 以便交给新加入的客户端.</p><table>测试所用的网络地址以及参数信息<tr><td>参数名称</td><td>值</td></tr><tr><td>默认租约时间</td><td>21600秒</td></tr><tr><td>最大租约时间</td><td>43200秒</td></tr><tr><td>IP地址范围</td><td>192.168.10.50~192.168.10.150</td></tr><tr><td>子网掩码</td><td>255.255.255.0</td></tr><tr><td>网关地址</td><td>192.168.10.1</td></tr><tr><td>DNS服务器地址</td><td>192.168.10.1</td></tr><tr><td>搜索域</td><td>linuxprobe.com</td></tr></table><table>DHCP服务器以及客户端的配置信息<tr><td>主机类型</td><td>操作系统</td><td>IP地址</td></tr><tr><td>DHCP服务器</td><td>RHEL 7</td><td>192.168.10.1</td></tr><tr><td>DHCP客户机</td><td>RHEL 7</td><td>DHCP自动获取地址</td></tr></table><p>将虚拟机软件自带的DHCP功能关闭<br><img src="/post/cea46563/%E4%B8%8D%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84DHCP%E5%8A%9F%E8%83%BD.jpg" alt="不使用虚拟机的DHCP功能"></p><p>在配置dhcpd服务程序时, 配置文件中的每行参数后面都需要以分号(;)结尾:</p><pre> vim /etc/dhcp/dhcpd.conf<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ddns-update-style none;</span><br><span class="line">ignore client-updates;</span><br><span class="line">subnet <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> &#123;</span><br><span class="line">range <span class="number">192.168</span><span class="number">.10</span><span class="number">.50</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.150</span>;</span><br><span class="line">option subnet-mask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>;</span><br><span class="line">option routers <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span>;</span><br><span class="line">option domain-name <span class="string">"linuxprobe.com"</span>;</span><br><span class="line">option domain-name-servers <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span>;</span><br><span class="line"><span class="section">default</span>-lease-time <span class="number">21600</span>;</span><br><span class="line">max-lease-time <span class="number">43200</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></pre><table>dhcpd服务程序配置文件中使用的参数以及作用<tr><td>参数</td><td>作用</td></tr><tr><td>ddns-update-style none;</td><td>设置DNS服务不自动进行动态更新</td></tr><tr><td>ignore client-updates;</td><td>忽略客户端更新DNS记录</td></tr><tr><td>subnet 192.168.10.0 netmask 255.255.255.0 {</td><td>作用域为192.168.10.0/24网段</td></tr><tr><td>range 192.168.10.50 192.168.10.150;</td><td>IP地址池为192.168.10.50-150(约100个IP地址)</td></tr><tr><td>option subnet-mask 255.255.255.0;</td><td>定义客户端默认的子网掩码</td></tr><tr><td>option routers 192.168.10.1;</td><td>定义客户端的网关地址</td></tr><tr><td>option domain-name "linuxprobe.com";</td><td>定义默认的搜索域</td></tr><tr><td>option domain-name-servers 192.168.10.1;</td><td>定义客户端的DNS地址</td></tr><tr><td>default-lease-time 21600;</td><td>定义默认租约时间(单位:秒)</td></tr><tr><td>max-lease-time 43200;</td><td>定义最大预约时间(单位:秒)</td></tr><tr><td>}</td><td>结束符</td></tr></table><p>把配置过的dhcpd服务加入到开机启动项中, 以确保当服务器下次开机后dhcpd服务依然能自动启动, 并顺利地为客户端分配IP地址等信息.</p><pre> systemctl start dhcpd systemctl enable dhcpd systemctl restart network</pre><p>开启客户端来检验IP分配效果, 重启客户端的网卡服务后即可看到自动分配到的IP地址.</p><pre> systemctl restart network</pre><h2 id="分配固定IP地址"><a href="#分配固定IP地址" class="headerlink" title="分配固定IP地址"></a>分配固定IP地址</h2><p>在DHCP协议中有个术语是”预约”, 它用来确保局域网中特定的设备总是获取到固定的IP地址.</p><p>要想把某个IP地址与某台主机进行绑定, 就需要用到这台主机的MAC地址. MAC地址是网卡上面的一串独立的标识符, 具备唯一性, 因此不会存在冲突的情况.<br><img src="/post/cea46563/%E7%BD%91%E5%8D%A1MAC%E5%9C%B0%E5%9D%80.png" alt="网卡MAC地址"></p><p>在dhcpd服务程序的配置文件中, 按照如下格式将IP地址与MAC地址进行绑定:<br> <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host 主机名称 &#123;</span><br><span class="line"> <span class="built_in"> hardware </span>     <span class="built_in"> ethernet</span>   该主机的MAC地址;</span><br><span class="line">  fixed-address  欲指定的IP地址;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>另一种查看方式:先启动dhcpd服务程序, 为老板的主机分配一个IP地址, 这样就会在DHCP服务器本地的日志文件中保存这次的IP地址分配记录. 然后查看日志文件, 就可以获悉主机的MAC地址了</p><pre> tail -f /var/log/messages </pre><p>修改dhcpd服务程序配置文件后, 并重启dhcpd服务程序.</p><pre> vim /etc/dhcp/dhcpd.conf  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host linuxprobe &#123;</span><br><span class="line">hardware<span class="built_in"> ethernet </span>MAC地址;</span><br><span class="line">fixed-address 192.168.10.88;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> systemctl restart dhcpd 客户端: systemctl restart network</pre><h1 id="使用Postfix与Dovecot部署邮件系统"><a href="#使用Postfix与Dovecot部署邮件系统" class="headerlink" title="使用Postfix与Dovecot部署邮件系统"></a>使用Postfix与Dovecot部署邮件系统</h1><h2 id="电子邮件系统"><a href="#电子邮件系统" class="headerlink" title="电子邮件系统"></a>电子邮件系统</h2><table>电子邮件系统基于邮件协议来完成电子邮件的传输, 常见的邮件协议:<tr><td>简单邮件传输协议(Simple Mail Transfer Protocol, SMTP)</td><td>用于发送和中转发出的电子邮件, 占用服务器的25/TCP端口.</td></tr><tr><td>邮局协议版本3(Post Office Protocol 3)</td><td>用于将电子邮件存储到本地主机, 占用服务器的110/TCP端口.</td></tr><tr><td>Internet消息访问协议版本4(Internet Message Access Protocol 4)</td><td>用于在本地主机上访问邮件, 占用服务器的143/TCP端口.</td></tr></table><p>在电子邮件系统中, 为用户收发邮件的服务器名为邮件用户代理(Mail User Agent, MUA).<br>用于保存用户邮件的”信箱”服务器, 这个服务器的名字为邮件投递代理(Mail Delivery Agent, MDA), 其工作职责是把来自于邮件传输代理(Mail Transfer Agent, MTA)的邮件保存到本地的收件箱中.<br>MTA的工作职责是转发处理不同电子邮件服务供应商之间的邮件, 把来自于MUA的邮件转发到合适的MTA服务器.<br><br><img src="/post/cea46563/%E9%82%AE%E4%BB%B6%E6%8A%95%E9%80%92%E5%B7%A5%E7%A8%8B.png" alt="邮件投递工程"></p><p>在生产环境中部署企业级的电子邮件系统时, 有4个注意事项请留意:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">添加反垃圾与反病毒模块: 它能够很有效地阻止垃圾邮件或病毒邮件对企业信箱的干扰</span></span><br><span class="line"><span class="section">对邮件加密: 可有效保护邮件内容不被黑客盗取和篡改</span></span><br><span class="line"><span class="section">添加邮件监控审核模块: 可有效地监控企业全体员工的邮件中是否有敏感词、是否有透露企业资料等违规行为</span></span><br><span class="line"><span class="section">保障稳定性: 电子邮件系统的稳定性至关重要, 运维人员应做到保证电子邮件系统的稳定运行, 并及时做好防范分布式拒绝服务(Distributed Denial of Service, DDoS)攻击的准备.</span></span><br></pre></td></tr></table></figure><h2 id="部署基础的电子邮件系统"><a href="#部署基础的电子邮件系统" class="headerlink" title="部署基础的电子邮件系统"></a>部署基础的电子邮件系统</h2><p>一个最基础的电子邮件系统肯定要能提供发件服务和收件服务, 为此需要使用基于SMTP协议的Postfix服务程序提供发件服务功能, 并使用基于POP3协议的Dovecot服务程序提供收件服务功能.<br><br><img src="/post/cea46563/%E9%82%AE%E5%B1%80%E7%B3%BB%E7%BB%9F%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="邮局系统流程图"></p><p>第1步: 配置服务器主机名称, 需要保证服务器主机名称与发信域名保持一致:</p><pre> vim /etc/hostname <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mail</span><span class="selector-class">.linuxprobe</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure> hostname</pre><p>第2步: 清空iptables防火墙默认策略, 并保存策略状态, 避免因防火墙中默认存在的策略阻止了客户端DNS解析域名及收发邮件.</p><pre> iptables -F service iptables save <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">无法保存时安装iptables-services包</span><br><span class="line">yum <span class="keyword">install</span> iptables-services</span><br></pre></td></tr></table></figure></pre><p>第3步: 为电子邮件系统提供域名解析</p><pre> cat /etc/named.rfc1912.zones <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"linuxprobe.com"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">type master;</span><br><span class="line">file <span class="string">"linuxprobe.com.zone"</span>;</span><br><span class="line">allow-update &#123;none;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> cat /var/named/linuxprobe.com.zone <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$TTL <span class="number">1</span>D#生存周期为<span class="number">1</span>天</span><br><span class="line">@    IN SOA           linuxprobe.com.  root.linuxprobe.com.(</span><br><span class="line">                                                                 <span class="number">0</span>;serial</span><br><span class="line">                                                                 <span class="number">1</span>D;<span class="built_in">ref</span>resh</span><br><span class="line">                                                                 <span class="number">1</span>H;retry</span><br><span class="line">                                                                 <span class="number">1</span>W;expire</span><br><span class="line">                                                                 <span class="number">3</span>H;)minimum</span><br><span class="line">     NS               ns.linuxprobe.com.</span><br><span class="line">ns   IN A      <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br><span class="line">@    IN MX <span class="number">10</span>         mail.linuxprobe.com.</span><br><span class="line">www  IN A      <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br></pre></td></tr></table></figure> systemctl restart named systemctl enable named</pre><p>把服务器的DNS地址修改成本地IP地址</p><h2 id="配置Postfix服务程序"><a href="#配置Postfix服务程序" class="headerlink" title="配置Postfix服务程序"></a>配置Postfix服务程序</h2><p>Postfix是一款由IBM资助研发的免费开源电子邮件服务程序, 能够很好地兼容Sendmail服务程序, 可以方便Sendmail用户迁移到Postfix服务上.</p><p>Postfix服务程序的邮件收发能力强于Sendmail服务, 而且能自动增加、减少进程的数量来保证电子邮件系统的高性能与稳定性.</p><p>另外, Postfix服务程序由许多小模块组成, 每个小模块都可以完成特定的功能, 因此可在生产工作环境中根据需求灵活搭配它们.</p><p>第1步:安装Postfix服务程序, 禁用iptables防火墙, 否则外部用户无法访问电子邮件系统.</p><pre> yum install postfix systemctl disable iptables</pre><table>第2步:配置Postfix服务程序, Postfix服务程序主配置文件(/etc/postfix/main.cf).<br>Postfix服务程序主配置文件中的重要参数<tr><td>参数</td><td>作用</td></tr><tr><td>myhostname</td><td>邮局系统的主机名</td></tr><tr><td>mydomain</td><td>邮局系统的域名</td></tr><tr><td>myorigin</td><td>从本机发出邮件的域名名称</td></tr><tr><td>inet_interfaces</td><td>监听的网卡接口</td></tr><tr><td>mydestination</td><td>可接收邮件的主机名或域名</td></tr><tr><td>mynetworks</td><td>设置可转发哪些主机的邮件</td></tr><tr><td>relay_domains</td><td>设置可转发哪些网域的邮件</td></tr></table><p>在Postfix服务程序的主配置文件中, 总计需要修改5处:</p><pre> vim /etc/postfix/main.cf <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>在第<span class="number">76</span>行定义一个名为myhostname的变量, 用来保存服务器的主机名称.</span><br><span class="line"> myhostname = mail.linuxprobe.com</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>在第<span class="number">83</span>行定义一个名为mydomain的变量, 用来保存邮件域的名称.</span><br><span class="line"> mydomain = linuxprobe.com</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>在第<span class="number">99</span>行调用前面的mydomain变量, 用来定义发出邮件的域.</span><br><span class="line"> myorigin = $mydomain</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>在第<span class="number">116</span>行定义网卡监听地址, 可以指定要使用服务器的哪些IP地址对外提供电子邮件服务.</span><br><span class="line"> inet_interfaces = all</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>在第<span class="number">164</span>行定义可接收邮件的主机名或域名列表</span><br><span class="line"> mydestination = $myhostname , $mydomain</span><br></pre></td></tr></table></figure></pre><p>第3步:创建电子邮件系统的登录账户, 最后重启配置妥当的postfix服务程序, 并将其添加到开机启动项中.</p><pre> useradd boss echo "linuxprobe" | passwd --stdin boss systemctl restart postfix systemctl enable postfix</pre><h2 id="配置Dovecot服务程序"><a href="#配置Dovecot服务程序" class="headerlink" title="配置Dovecot服务程序"></a>配置Dovecot服务程序</h2><p>Dovecot是一款能够为Linux系统提供IMAP和POP3电子邮件服务的开源服务程序, 安全性极高, 配置简单, 执行速度快, 而且占用的服务器硬件资源也较少.</p><p>第1步:安装Dovecot服务程序软件包<br><code>yum install dovecot</code></p><p>第2步:配置部署Dovecot服务程序, 第24行, 把Dovecot服务程序支持的电子邮件协议修改为imap、pop3和lmtp. 然后在这一行下面添加一行参数, 允许用户使用明文进行密码验证.</p><p>Dovecot服务程序为了保证电子邮件系统的安全而默认强制用户使用加密方式进行登录, 而由于当前还没有加密系统, 因此需要添加该参数来允许用户的明文登录.</p><pre> vim /etc/dovecot/dovecot.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">protocols</span> = imap pop3 lmtp</span><br><span class="line"><span class="attr">disable_plaintext_auth</span> = <span class="literal">no</span></span><br></pre></td></tr></table></figure></pre><p>在主配置文件中的第48行, 设置允许登录的网段地址. 如果想允许所有人都能使用, 则不用修改本参数.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_trusted_networks = <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>第3步：配置邮件格式与存储路径. 在Dovecot服务程序单独的子配置文件中, 定义一个路径, 用于指定要将收到的邮件存放到服务器本地的哪个位置.<br>这个路径默认已经定义好了, 将该配置文件中第24行前面的井号(#)删除即可.</p><pre> vim /etc/dovecot/conf.d/10-mail.conf <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail_location = <span class="string">mbox:</span><span class="regexp">~/mail:INBOX=/</span>var<span class="regexp">/mail/</span>%u</span><br></pre></td></tr></table></figure></pre><p>然后切换到配置Postfix服务程序时创建的boss账户, 并在家目录中建立用于保存邮件的目录. 记得要重启Dovecot服务并将其添加到开机启动项中.</p><pre> su - boss mkdir -p mail/.imap/INBOX exit systemctl restart dovecot  systemctl enable dovecot </pre><h2 id="客户使用电子邮件系统"><a href="#客户使用电子邮件系统" class="headerlink" title="客户使用电子邮件系统"></a>客户使用电子邮件系统</h2><p>使用Windows操作系统中自带的Outlook软件来进行测试(也可以使用其他电子邮件客户端来测试, 比如Foxmail)</p><table>服务器与客户端的操作系统与IP地址<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>电子邮件系统及DNS服务器</td><td>RHEL 7</td><td>192.168.10.10</td></tr><tr><td>客户端主机</td><td>Windows 7</td><td>192.168.10.30</td></tr></table><p><img src="/post/cea46563/%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E6%9C%BAIP%E5%9C%B0%E5%9D%80-1.png" alt="配置客户机IP地址-1"></p><p>第1步:在Windows 7系统中运行Outlook软件程序<br><img src="/post/cea46563/%E7%AC%AC1%E6%AD%A5%EF%BC%9A%E5%BC%80%E5%90%AFOutLook%E7%A8%8B%E5%BA%8F.jpg" alt="第1步：开启OutLook程序"></p><p>第2步:配置电子邮件账户<br><img src="/post/cea46563/%E7%AC%AC2%E6%AD%A5%EF%BC%9A%E9%80%89%E6%8B%A9%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%B8%90%E6%88%B7.jpg" alt="第2步：选择开始配置电子邮件帐户"></p><p>第3步:选择电子邮件服务的协议类型<br><img src="/post/cea46563/%E7%AC%AC3%E6%AD%A5%EF%BC%9A%E9%80%89%E6%8B%A9%E9%BB%98%E8%AE%A4%E7%9A%84%E9%82%AE%E5%B1%80%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%B1%BB%E5%9E%8B.png" alt="第3步：选择默认的邮局服务器类型"></p><p>第4步:填写电子邮件账户信息<br><img src="/post/cea46563/%E7%AC%AC4%E6%AD%A5%EF%BC%9A%E5%A1%AB%E5%86%99%E5%88%9B%E5%BB%BA%E7%9A%84%E9%82%AE%E7%AE%B1%E5%B8%90%E5%8F%B7%E5%92%8C%E5%AF%86%E7%A0%81.jpg" alt="第4步：填写创建的邮箱帐号和密码"></p><p>第5步:进行电子邮件服务登录验证, Outlook软件默认会通过SSL加密协议尝试登录电子邮件服务, 超时后系统会出现登录失败的报错信息. 此时只需再次单击”下一步”按钮, 即可让Outlook软件通过非加密的方式验证登录.<br><img src="/post/cea46563/%E7%AC%AC5%E6%AD%A5%EF%BC%9A%E7%AD%89%E5%BE%85%E8%BF%9E%E6%8E%A5%E9%82%AE%E5%B1%80%E6%9C%8D%E5%8A%A1%E5%99%A8.jpg" alt="第5步：等待连接邮局服务器"><br><img src="/post/cea46563/%E7%AC%AC6%E6%AD%A5%EF%BC%9A%E9%80%89%E6%8B%A9%E9%9D%9E%E5%8A%A0%E5%AF%86%E7%9A%84%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F.jpg" alt="第6步：选择非加密的链接方式"></p><p>第6步:向其他信箱发送邮件<br><img src="/post/cea46563/%E7%AC%AC7%E6%AD%A5%EF%BC%9A%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E9%82%AE%E4%BB%B6%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9C%E6%96%B0%E9%82%AE%E4%BB%B6%E2%80%9D%E3%80%82.png" alt="第7步：在页面上邮件, 选择“新邮件”"><br><img src="/post/cea46563/%E7%AC%AC8%E6%AD%A5%EF%BC%9A%E5%A1%AB%E5%86%99%E6%94%B6%E4%BB%B6%E4%BA%BA%E4%B8%8E%E9%82%AE%E4%BB%B6%E5%86%85%E5%AE%B9%E5%90%8E%E5%8F%91%E9%80%81%E3%80%82.png" alt="第8步：填写收件人与邮件内容后发送"></p><p>当使用Outlook软件成功发送邮件后, 便可以在电子邮件服务器上使用mail命令查看到新邮件提醒了. 如果想查看邮件的完整内容, 只需输入收件人姓名前面的编号即可.</p><pre> mail <figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&amp;&gt; 编号</span></span><br><span class="line">&gt; quit</span><br></pre></td></tr></table></figure></pre><h2 id="设置用户别名邮箱"><a href="#设置用户别名邮箱" class="headerlink" title="设置用户别名邮箱"></a>设置用户别名邮箱</h2><p>用户别名功能是一项简单实用的邮件账户伪装技术, 可以用来设置多个虚拟信箱的账户以接受发送的邮件, 从而保证自身的邮件地址不被泄露, 还可以用来接收自己的多个信箱中的邮件.<br><img src="/post/cea46563/%E5%90%91%E7%94%A8%E6%88%B7bin%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6.png" alt="向用户bin发送邮件"></p><p>在aliases邮件别名服务的配置文件中可以看到, 里面定义了大量的用户别名, 这些用户别名大多数是Linux系统本地的系统账户, 而在冒号(:)间隔符后面的root账户则是用来接收这些账户邮件的人. 用户别名可以是Linux系统内的本地用户, 也可以是完全虚构的用户名字.<br><code>cat /etc/aliases</code></p><p>自行定义一些别名来接收邮件. 例如, 创建一个名为xxoo的账户, 而真正接收该账户邮件的应该是root账户.</p><pre> vim /etc/aliases <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">xxoo:</span> root</span><br></pre></td></tr></table></figure></pre><p><img src="/post/cea46563/%E5%90%91%E7%94%A8%E6%88%B7xxoo%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6.png" alt="向用户xxoo发送邮件"></p><p>使用root账户在服务器上执行mail命令后, 就能看到这封原本要发送给xxoo账户的邮件.<br><code>mail</code></p><h1 id="使用PXE-Kickstart无人值守安装服务"><a href="#使用PXE-Kickstart无人值守安装服务" class="headerlink" title="使用PXE+Kickstart无人值守安装服务"></a>使用PXE+Kickstart无人值守安装服务</h1><h2 id="无人值守系统"><a href="#无人值守系统" class="headerlink" title="无人值守系统"></a>无人值守系统</h2><p>使用PXE + TFTP + FTP + DHCP + Kickstart服务搭建出一个无人值守安装系统. 这种无人值守安装系统可以自动地为数十台服务器安装系统.<br><br><img src="/post/cea46563/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B-1.png" alt="无人值守安装流程-1"></p><p>PXE(Preboot eXecute Environment, 预启动执行环境)是由Intel公司开发的技术, 可以让计算机通过网络来启动操作系统(前提是计算机上安装的网卡支持PXE技术), 主要用于在无人值守安装系统中引导客户端主机安装Linux操作系统.</p><p>Kickstart是一种无人值守的安装方式, 其工作原理是预先把原本需要运维人员手工填写的参数保存成一个ks.cfg文件, 当安装过程中需要填写参数时则自动匹配Kickstart生成的文件. 所以只要Kickstart文件包含了安装过程中需要人工填写的所有参数, 那么从理论上来讲完全不需要运维人员的干预, 就可以自动完成安装工作.</p><p>由于当前的客户端主机并没有完整的操作系统, 也就不能完成FTP协议的验证了, 所以需要使用TFTP协议帮助客户端获取引导及驱动文件. vsftpd服务程序用于将完整的系统安装镜像通过网络传输给客户端. 当然, 只要能将系统安装镜像成功传输给客户端即可, 因此也可以使用httpd来替代vsftpd服务程序.</p><h2 id="部署相关服务程序"><a href="#部署相关服务程序" class="headerlink" title="部署相关服务程序"></a>部署相关服务程序</h2><h3 id="配置DHCP服务程序"><a href="#配置DHCP服务程序" class="headerlink" title="配置DHCP服务程序"></a>配置DHCP服务程序</h3><p>DHCP服务程序用于为客户端主机分配可用的IP地址, 而且这是服务器与客户端主机进行文件传输的基础. 在虚拟机的虚拟网络编辑器中关闭自身的DHCP服务.</p><table>无人值守系统与客户端的设置<tr><td>主机名称</td><td>操作系统</td><td>IP地址</td></tr><tr><td>无人值守系统</td><td>RHEL 7</td><td>192.168.10.10</td></tr><tr><td>客户端</td><td>未安装操作系统</td><td></td></tr></table><p>挂载好光盘镜像并把Yum仓库文件配置妥当后, 开始安装DHCP服务程序软件包.<br><code>yum install dhcp</code></p><p>允许BOOTP引导程序协议, 旨在让局域网内暂时没有操作系统的主机也能获取静态IP地址; 在配置文件的最下面加载了引导驱动文件pxelinux.0(这个文件会在下面的步骤中创建), 其目的是让客户端主机获取到IP地址后主动获取引导驱动文件, 自行进入下一步的安装过程.</p><pre> vim /etc/dhcp/dhcpd.conf <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">allow booting;</span><br><span class="line">allow bootp;</span><br><span class="line">ddns-update-style interim;</span><br><span class="line">ignore client-updates;</span><br><span class="line">subnet <span class="number">192.168</span><span class="number">.10</span><span class="number">.0</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> &#123;</span><br><span class="line">       option subnet-mask      <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>;</span><br><span class="line">       option domain-name-servers  <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>;</span><br><span class="line">       range dynamic-bootp <span class="number">192.168</span><span class="number">.10</span><span class="number">.100</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.200</span>;</span><br><span class="line">       <span class="section">default</span>-lease-time      <span class="number">21600</span>;</span><br><span class="line">       max-lease-time          <span class="number">43200</span>;</span><br><span class="line">       next-server             <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span>;</span><br><span class="line">       filename                <span class="string">"pxelinux.0"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></pre><p>重新启动该服务程序, 并将其添加到开机启动项中.</p><pre> systemctl restart dhcpd systemctl enable dhcpd</pre><h3 id="配置TFTP服务程序"><a href="#配置TFTP服务程序" class="headerlink" title="配置TFTP服务程序"></a>配置TFTP服务程序</h3><p>TFTP作为一种基于UDP协议的简单文件传输协议, 不需要进行用户认证即可获取到所需的文件资源. 因此接下来配置TFTP服务程序, 为客户端主机提供引导及驱动文件. 当客户端主机有了基本的驱动程序之后, 再通过vsftpd服务程序将完整的光盘镜像文件传输过去.<br><code>yum install tftp-server</code></p><p>TFTP是一种非常精简的文件传输服务程序, 它的运行和关闭是由xinetd网络守护进程服务来管理的.</p><p>xinetd服务程序会同时监听系统的多个端口, 然后根据用户请求的端口号调取相应的服务程序来响应用户的请求. </p><p>需要开启TFTP服务程序, 只需在xinetd服务程序的配置文件中把disable参数改成no就可以了. 保存配置文件并退出, 然后重启xinetd服务程序, 并将其加入到开机启动项中.</p><pre> vim /etc/xinetd.d/tftp <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disable</span>                 = <span class="literal">no</span></span><br></pre></td></tr></table></figure> yum -y install xinetd systemctl restart xinetd systemctl enable xinetd</pre><p>TFTP服务程序默认使用的是UDP协议, 占用的端口号为69, 所以在生产环境中还需要在firewalld防火墙管理工具中写入使其永久生效的允许策略, 以便让客户端主机顺利获取到引导文件.</p><pre> firewall-cmd --permanent --add-port=69/udp firewall-cmd --reload</pre><h3 id="配置SYSLinux服务程序"><a href="#配置SYSLinux服务程序" class="headerlink" title="配置SYSLinux服务程序"></a>配置SYSLinux服务程序</h3><p>SYSLinux是一个用于提供引导加载的服务程序. 与其说SYSLinux是一个服务程序, 不如说更需要里面的引导文件, 在安装好SYSLinux服务程序软件包后, /usr/share/syslinux目录中会出现很多引导文件.<br><code>yum install syslinux</code></p><p>首先需要把SYSLinux提供的引导文件复制到TFTP服务程序的默认目录中, 也就是前文提到的文件pxelinux.0, 这样客户端主机就能够顺利地获取到引导文件了.</p><p>另外在RHEL 7系统光盘镜像中也有一些需要调取的引导文件. 确认光盘镜像已经被挂载到/media/cdrom目录后, 使用复制命令将光盘镜像中自带的一些引导文件也复制到TFTP服务程序的默认目录中.</p><pre> cd /var/lib/tftpboot cp /usr/share/syslinux/pxelinux.0 . cp /media/cdrom/images/pxeboot/{vmlinuz,initrd.img} . cp /media/cdrom/isolinux/{vesamenu.c32,boot.msg} .</pre><p>然后在TFTP服务程序的目录中新建pxelinux.cfg目录, 将系统光盘中的开机选项菜单复制到该目录中, 并命名为default.</p><pre> mkdir pxelinux.cfg cp /media/cdrom/isolinux/isolinux.cfg pxelinux.cfg/default</pre><p>这个default文件就是开机时的选项菜单.<br><img src="/post/cea46563/%E7%AC%AC1%E6%AD%A5%EF%BC%9A%E5%BC%80%E6%9C%BA%E5%90%8E%E5%9C%A8%E5%86%85%E6%A0%B8%E4%B8%8A%E6%95%B2%E5%87%BB%E2%80%9Ce%E2%80%9D.png" alt="开机界面"></p><p>编辑这个default文件, 把第1行的default参数修改为linux, 这样系统在开机时就会默认执行那个名称为linux的选项了. 对应的linux选项大约在64行, 我们将默认的光盘镜像安装方式修改成FTP文件传输方式, 并指定好光盘镜像的获取网址以及Kickstart应答文件的获取路径:</p><pre> vim pxelinux.cfg/default <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">default linux</span><br><span class="line">prompt 1</span><br><span class="line">append <span class="attribute">initrd</span>=initrd.img inst.<span class="attribute">stage2</span>=ftp://ip地址 <span class="attribute">ks</span>=ftp://ip地址/pub/ks.cfg quiet # 64行</span><br></pre></td></tr></table></figure></pre><h3 id="配置VSFtpd服务程序"><a href="#配置VSFtpd服务程序" class="headerlink" title="配置VSFtpd服务程序"></a>配置VSFtpd服务程序</h3><p>在无人值守安装系统的服务中, 光盘镜像是通过FTP协议传输的, 因此势必要用到vsftpd服务程序. 当然, 也可以使用httpd服务程序来提供Web网站访问的方式, 只要能确保将光盘镜像顺利传输给客户端主机即可.<br><code>yum install vsftpd</code></p><p>在配置文件修改正确之后, 一定将相应的服务程序添加到开机启动项中.</p><pre> systemctl restart vsftpd systemctl enable vsftpd</pre><p>在确认系统光盘镜像已经正常挂载到/media/cdrom目录后, 把目录中的光盘镜像文件全部复制到vsftpd服务程序的工作目录中.<br><code>cp -r /media/cdrom/* /var/ftp</code></p><p>在firewalld防火墙管理工具中写入使FTP协议永久生效的允许策略, 然后在SELinux中放行FTP传输:</p><pre> firewall-cmd --permanent --add-service=ftp firewall-cmd --reload  setsebool -P ftpd_connect_all_unreserved=on</pre><h3 id="创建KickStart应答文件"><a href="#创建KickStart应答文件" class="headerlink" title="创建KickStart应答文件"></a>创建KickStart应答文件</h3><p>Kickstart应答文件中包含了系统安装过程中需要使用的选项和参数信息, 系统可以自动调取这个应答文件的内容, 从而彻底实现了无人值守安装系统.<br>在root管理员的家目录中有一个名为anaconda-ks.cfg的文件, 它就是应答文件. 下面将这个文件复制到vsftpd服务程序的工作目录中. 使用chmod命令设置该文件的权限, 确保所有人都有可读的权限, 以保证客户端主机可以顺利获取到应答文件及里面的内容:</p><pre> cp ~/anaconda-ks.cfg /var/ftp/pub/ks.cfg chmod +r /var/ftp/pub/ks.cfg</pre><p>首先把第6行的光盘镜像安装方式修改成FTP协议, 仔细填写好FTP服务器的IP地址, 并用本地浏览器尝试打开下检查有没有报错. 然后把第21行的时区修改成上海(Asia/Shanghai), 最后再把29行的磁盘选项设置为清空所有磁盘内容并初始化磁盘:</p><pre> vim /var/ftp/pub/ks.cfg <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url <span class="params">--url=ftp</span>:<span class="string">//ip</span>地址 <span class="comment"># 6行</span></span><br><span class="line">timezone Asia/Shanghai <span class="params">--isUtc</span> <span class="comment"># 21行</span></span><br><span class="line">clearpart <span class="params">--all</span> <span class="params">--initlabel</span> <span class="comment"># 29行</span></span><br></pre></td></tr></table></figure></pre><p>如果觉得系统默认自带的应答文件参数较少, 不能满足生产环境的需求, 则可以通过Yum软件仓库来安装system-config-kickstart软件包. 这是一款图形化的Kickstart应答文件生成工具, 可以根据自己的需求生成自定义的应答文件, 然后将生成的文件放到/var/ftp/pub目录中并将名字修改为ks.cfg即可.</p><pre> yum install system-config-kickstart</pre><p>启动工具:<br><code>system-config-kickstart</code><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%B8%80.png" alt="Kickstart配置一"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%BA%8C.png" alt="Kickstart配置二"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%BA%8C.%E4%BA%94.png" alt="Kickstart配置二.五"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%BA%8C.%E5%85%AD.png" alt="Kickstart配置二.六"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%B8%89.png" alt="Kickstart配置三"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E5%9B%9B.png" alt="Kickstart配置四"><br>注: 如果出现<code>由于下载软件包信息失败, 软件包选择被禁止</code>信息.<br>则: 修改yum源标志, 设置为development即可:</p><pre> vim /etc/yum.repos.d/---.repo [development]</pre><p><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E4%BA%94.png" alt="Kickstart配置五"><br><img src="/post/cea46563/Kickstart%E9%85%8D%E7%BD%AE%E5%85%AD.png" alt="Kickstart配置六"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rm</span> <span class="string">-r /etc/yum.repos.d/*</span></span><br><span class="line"><span class="attr">echo</span> <span class="string">'[base]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">centos7</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">ftp://192.168.10.10</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">file:///etc/pki/rpm-gpg/PRM-GPG-KEY-redhat-release' &gt; /etc/yum.repos.d/centos7.repo</span></span><br></pre></td></tr></table></figure><p>最后文件选项保存文件, 将文件放到/var/ftp/pub目录中.</p><pre> mv /ks.cfg /var/ftp/pub/ chmod +r /var/ftp/pub/ks.cfg vim /var/ftp/pub/ks.cfg <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url <span class="params">--url=ftp</span>:<span class="string">//ip</span>地址 <span class="comment"># 6行</span></span><br></pre></td></tr></table></figure></pre><h2 id="自动部署客户机"><a href="#自动部署客户机" class="headerlink" title="自动部署客户机"></a>自动部署客户机</h2><p>新建虚拟机并更改网络适配器的模式为仅主机模式<br><img src="/post/cea46563/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8A%A0%E8%BD%BD%E4%B8%AD.png" alt="自动化安装加载中"><br><img src="/post/cea46563/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8A%A0%E8%BD%BD%E4%B8%AD2.png" alt="自动化安装加载中2"></p><h1 id="使用LNMP架构部署动态网站环境"><a href="#使用LNMP架构部署动态网站环境" class="headerlink" title="使用LNMP架构部署动态网站环境"></a>使用LNMP架构部署动态网站环境</h1><h2 id="源码包程序"><a href="#源码包程序" class="headerlink" title="源码包程序"></a>源码包程序</h2><p>使用源码包来安装服务程序具有两个优势:<br>1.源码包的可移植性非常好, 几乎可以在任何Linux系统中安装使用, 而RPM软件包是针对特定系统和架构编写的指令集, 必须严格地符合执行环境才能顺利安装(即只会去”生硬地”安装服务程序).</p><p>2.使用源码包安装服务程序时会有一个编译过程, 因此可以更好地适应安装主机的系统环境, 运行效率和优化程度都会强于使用RPM软件包安装的服务程序.</p><p>源码包安装步骤:<br>第1步:下载及解压源码包文件</p><pre> tar xzvf 源码包文件名.tar.gz cd 源码包文件目录名</pre><p>第2步:编译源码包代码<br><code>./configure --prefix=/usr/local/program</code></p><p>第3步:生成二进制安装程序并运行二进制的服务程序安装包<br><code>make && make install</code></p><p>第4步:清理源码包临时文件<br><code>make clean</code></p><h2 id="LNMP动态网站架构"><a href="#LNMP动态网站架构" class="headerlink" title="LNMP动态网站架构"></a>LNMP动态网站架构</h2><p>LNMP动态网站部署架构是一套由Linux + Nginx + MySQL + PHP组成的动态网站系统解决方案, 具有免费、高效、扩展性强且资源消耗低等优良特性.</p><p>在使用源码包安装服务程序之前，首先要让安装主机具备编译程序源码的环境, 他需要具备C语言、C++语言、Perl语言的编译器, 以及各种常见的编译支持函数库程序.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y apr* autoconf automake bison bzip2 bzip2* compat* cpp curl curl-devel fontconfig fontconfig-devel freetype freetype* freetype-devel gcc gcc-c++ gd gettext gettext-devel glibc kernel kernel-headers keyutils keyutils-libs-devel krb5-devel libcom_err-devel libpng libpng-devel libjpeg* libsepol-devel libselinux-devel libstdc++-devel libtool* libgomp libxml2 libxml2-devel libXpm* libtiff libtiff* make mpfr ncurses*<span class="built_in"> ntp </span>openssl openssl-devel patch pcre-devel perl php-common php-gd policycoreutils telnet t1lib t1lib* nasm nasm* wget zlib-devel</span><br></pre></td></tr></table></figure><p>安装LNMP动态网站部署架构所需的16个软件源码包和1个用于检查效果的论坛网站系统软件包, 使用wget命令下载这些源码包文件. 根据FHS协议, 建议把要安装的软件包存放在/usr/local/src目录中:</p><pre> cd /usr/local/src <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>cmake-<span class="number">2.8</span>.<span class="number">11.2</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>Discuz_X3.<span class="number">2</span>_SC_GBK.zip</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>freetype-<span class="number">2.5</span>.<span class="number">3</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>jpegsrc.v9a.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>libgd-<span class="number">2.1</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>libmcrypt-<span class="number">2.5</span>.<span class="number">8</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>libpng-<span class="number">1.6</span>.<span class="number">12</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>libvpx-v1.<span class="number">3.0</span>.tar.bz2</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/my</span>sql-<span class="number">5.6</span>.<span class="number">19</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>nginx-<span class="number">1.6</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>openssl-<span class="number">1.0</span>.<span class="number">1</span>h.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>php-<span class="number">5.5</span>.<span class="number">14</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>pcre-<span class="number">8.35</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>tiff-<span class="number">4.0</span>.<span class="number">3</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/y</span>asm-<span class="number">1.2</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">wget https:<span class="regexp">//</span>www.linuxprobe.com<span class="regexp">/Software/</span>zlib-<span class="number">1.2</span>.<span class="number">8</span>.tar.gz</span><br></pre></td></tr></table></figure> ls</pre><p>CMake是Linux系统中一款常用的编译工具</p><pre> tar xzvf cmake-2.8.11.2.tar.gz cd cmake-2.8.11.2/ ./configure make && make install</pre><h3 id="配置Mysql服务"><a href="#配置Mysql服务" class="headerlink" title="配置Mysql服务"></a>配置Mysql服务</h3><p>在系统中创建一个名为mysql的用户, 专门用于负责运行MySQL数据库. 把这类账户的Bash终端设置成nologin解释器, 避免黑客通过该用户登录到服务器中, 从而提高系统安全性.</p><pre> cd .. useradd mysql -s /sbin/nologin</pre><p>创建一个用于保存MySQL数据库程序和数据库文件的目录, 并把该目录的所有者和所属组身份修改为mysql.<br>/usr/local/mysql是用于保存MySQL数据库服务程序的目录, /usr/local/mysql/var则是用于保存真实数据库文件的目录.</p><pre> mkdir -p /usr/local/mysql/var chown -Rf mysql:mysql /usr/local/mysql</pre><p>解压、编译、安装MySQL数据库服务程序, 在编译数据库时使用的是cmake命令<br>-DCMAKE_INSTALL_PREFIX参数用于定义数据库服务程序的保存目录<br>-DMYSQL_DATADIR参数用于定义真实数据库文件的目录<br>-DSYSCONFDIR则是定义MySQL数据库配置文件的保存目录</p><pre> tar xzvf mysql-5.6.19.tar.gz cd mysql-5.6.19/ cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/var -DSYSCONFDIR=/etc make && make install</pre><p>为了让MySQL数据库程序正常运转起来, 需要先删除/etc目录中的默认配置文件, 然后在MySQL数据库程序的保存目录scripts内找到一个名为mysql_install_db的脚本程序, 执行这个脚本程序并使用:<br>–user参数指定MySQL服务的对应账号名称(在前面步骤已经创建),<br>使用–basedir参数指定MySQL服务程序的保存目录,<br>使用–datadir参数指定MySQL真实数据库的文件保存目录,<br>这样即可生成系统数据库文件, 也会生成出新的MySQL服务配置文件.</p><pre> rm -rf /etc/my.cnf cd /usr/local/mysql ./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/var</pre><p>把系统新生成的MySQL数据库配置文件链接到/etc目录中, 然后把程序目录中的开机程序文件复制到/etc/rc.d/init.d目录中, 以便通过service命令来管理MySQL数据库服务程序. 记得把数据库脚本文件的权限修改成755以便于让用户有执行该脚本的权限:</p><pre> ln -s my.cnf /etc/my.cnf  cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld chmod 755 /etc/rc.d/init.d/mysqld</pre><p>编辑刚复制的MySQL数据库脚本文件, 把第46、47行的basedir与datadir参数分别修改为MySQL数据库程序的保存目录和真实数据库的文件内容.</p><pre> vim /etc/rc.d/init.d/mysqld <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">basedir</span>=/usr/local/mysql</span><br><span class="line"><span class="attr">datadir</span>=/usr/local/mysql/var</span><br></pre></td></tr></table></figure></pre><p>配置好脚本文件后便可以用service命令启动mysqld数据库服务了. mysqld是MySQL数据库程序的服务名称, 顺带再使用chkconfig命令把mysqld服务程序加入到开机启动项中.</p><pre> service mysqld start chkconfig mysqld on</pre><p>把命令所保存的目录永久性地定义到PATH变量中, 需要编辑/etc/profile文件并写入追加的命令目录, 这样当物理设备在下一次重启时就会永久生效了. 也可以使用source命令加载一下/ect/profile文件.</p><pre> vim /etc/profile <figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/usr/local/mysql/bin</span> <span class="comment"># 74行</span></span><br></pre></td></tr></table></figure> source /etc/profile</pre><p>MySQL数据库服务程序还会调用到一些程序文件和函数库文件. 由于当前是通过源码包方式安装MySQL数据库, 因此现在也必须以手动方式把这些文件链接过来.</p><pre> mkdir /var/lib/mysql ln -s /usr/local/mysql/lib/mysql /usr/lib/mysql ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock ln -s /usr/local/mysql/include/mysql /usr/include/mysql</pre><p>对MySQL数据库进行初始化</p><pre> mysql_secure_installation Enter current password for root (enter for none): <font color="red">此处只需按下回车键</font> OK, successfully used password, moving on... Set root password? [Y/n] y （<font color="red">要为root管理员设置数据库的密码</font>） New password: <font color="red">输入要为root管理员设置的数据库密码</font> Re-enter new password: <font color="red">再输入一次密码</font> Password updated successfully! Remove anonymous users? [Y/n] y （<font color="red">删除匿名账户</font>） ... Success! Disallow root login remotely? [Y/n] y （<font color="red">禁止root管理员从远程登录</font>） ... Success! Remove test database and access to it? [Y/n] y （<font color="red">删除test数据库并取消对其的访问权限</font>） - Dropping test database... Reload privilege tables now? [Y/n] y （<font color="red">刷新授权表，让初始化后的设定立即生效</font>） ... Success!</pre><h3 id="配置Nginx服务"><a href="#配置Nginx服务" class="headerlink" title="配置Nginx服务"></a>配置Nginx服务</h3><p>Nginx是一款相当优秀的用于部署动态网站的轻量级服务程序, 它最初是为俄罗斯门户站点而开发的, 因其稳定性、功能丰富、占用内存少且并发能力强而备受用户的信赖. 目前国内诸如新浪、网易、腾讯等门户站点均已使用了此服务。</p><p>Nginx服务程序的稳定性源自于采用了分阶段的资源分配技术, 降低了CPU与内存的占用率, 所以使用Nginx程序部署的动态网站环境不仅十分稳定、高效，而且消耗的系统资源也很少. 此外, Nginx具备的模块数量与Apache具备的模块数量几乎相同, 而且现在已经完全支持proxy、rewrite、mod_fcgi、ssl、vhosts等常用模块. 更重要的是, Nginx还支持热部署技术, 可以7×24不间断提供服务, 还可以在不暂停服务的情况下直接对Nginx服务程序进行升级.</p><p>解压、编译、生成、安装Nginx服务程序的源码文件:<br>用于提供Perl语言兼容的正则表达式库的软件包pcre</p><pre> cd /usr/local/src tar xzvf pcre-8.35.tar.gz  cd pcre-8.35 ./configure --prefix=/usr/local/pcre make && make install </pre><p>openssl软件包是用于提供网站加密证书服务的程序文件, 在安装该程序时需要自定义服务程序的安装目录, 以便于稍后调用它们的时候更可控.</p><pre> cd /usr/local/src tar xzvf openssl-1.0.1h.tar.gz cd openssl-1.0.1h ./config --prefix=/usr/local/openssl make && make install</pre><p>openssl软件包安装后默认会在/usr/local/openssl/bin目录中提供很多的可用命令, 像前面的操作那样, 将这个目录添加到PATH环境变量中, 并写入到配置文件中, 最后执行source命令以便让新的PATH环境变量内容可以立即生效.</p><pre> vim /etc/profile <figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/usr/local/mysql/bin</span><span class="symbol">:/usr/local/openssl/bin</span> <span class="comment"># 74行</span></span><br></pre></td></tr></table></figure> source /etc/profile</pre><p>zlib软件包是用于提供压缩功能的函数库文件</p><pre> cd /usr/local/src tar xzvf zlib-1.2.8.tar.gz  cd zlib-1.2.8 ./configure --prefix=/usr/local/zlib make && make install</pre><p>在安装部署好具有依赖关系的软件包之后, 创建一个用于执行Nginx服务程序的账户. 账户名称可以自定义, 后续需要调用</p><pre> cd .. useradd www -s /sbin/nologin</pre><p>在使用命令编译Nginx服务程序时, 需要设置特别多的参数, 其中,<br>–prefix参数用于定义服务程序稍后安装到的位置,<br>–user与–group参数用于指定执行Nginx服务程序的用户名和用户组.<br>在使用参数调用openssl、zlib、pcre软件包时, 请写出软件源码包的解压路径, 而不是程序的安装路径</p><pre> tar xzvf nginx-1.6.0.tar.gz cd nginx-1.6.0/ <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure <span class="attribute">--prefix</span>=/usr/local/nginx --without-http_memcached_module <span class="attribute">--user</span>=www <span class="attribute">--group</span>=www --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module <span class="attribute">--with-openssl</span>=/usr/local/src/openssl-1.0.1h <span class="attribute">--with-zlib</span>=/usr/local/src/zlib-1.2.8 <span class="attribute">--with-pcre</span>=/usr/local/src/pcre-8.35</span><br></pre></td></tr></table></figure> make && make install</pre><p>要想启动Nginx服务程序以及将其加入到开机启动项中, 也需要有脚本文件, 在/etc/rc.d/init.d目录中创建脚本文件并直接复制下面的脚本内容即可.</p><pre> vim /etc/rc.d/init.d/nginx <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment"># chkconfig: - 85 15</span></span><br><span class="line"><span class="comment"># description: Nginx is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment"># proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config: /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config: /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment"># pidfile: /usr/local/nginx/logs/nginx.pid</span></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">nginx=<span class="string">"/usr/local/nginx/sbin/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/usr/local/nginx/conf/nginx.conf"</span></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line"><span class="comment"># make required directories</span></span><br><span class="line">user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:"</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">                useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line"><span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">                value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">                <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                        <span class="comment"># echo "creating" $value</span></span><br><span class="line">                        mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">[ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">[ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">make_dirs</span><br><span class="line"><span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">retval=$?</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">[ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line"><span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">retval=$?</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">[ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line"><span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line"><span class="comment">#configtest || return $?</span></span><br><span class="line">stop</span><br><span class="line">sleep 1</span><br><span class="line">start</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line"><span class="comment">#configtest || return $?</span></span><br><span class="line"><span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">killproc <span class="variable">$nginx</span> -HUP</span><br><span class="line">RETVAL=$?</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">restart</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line"><span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">        rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">stop)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">restart|configtest)</span><br><span class="line"><span class="variable">$1</span></span><br><span class="line">;;</span><br><span class="line">reload)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">condrestart|try-restart)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span></span><br><span class="line"><span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></pre><p>保存脚本文件后记得为其赋予755权限, 以便能够执行这个脚本. 然后以绝对路径的方式执行这个脚本, 通过restart参数重启Nginx服务程序, 最后再使用chkconfig命令将Nginx服务程序添加至开机启动项中.</p><pre> chmod 755 /etc/rc.d/init.d/nginx /etc/rc.d/init.d/nginx restart chkconfig nginx on</pre><p>Nginx服务程序验证:在浏览器中输入本机的ip地址</p><h3 id="配置php服务"><a href="#配置php服务" class="headerlink" title="配置php服务"></a>配置php服务</h3><p>PHP(Hypertxt Preprocessor, 超文本预处理器)是一种通用的开源脚本语言, 发明于1995年, 它吸取了C语言、Java语言及Perl语言的很多优点, 具有开源、免费、快捷、跨平台性强、效率高等优良特性, 是目前Web开发领域最常用的语言之一.</p><p>yasm源码包是一款常见的开源汇编器</p><pre> cd .. tar zxvf yasm-1.2.0.tar.gz cd yasm-1.2.0 ./configure make && make install</pre><p>libmcrypt源码包是用于加密算法的扩展库程序</p><pre> cd .. tar zxvf libmcrypt-2.5.8.tar.gz cd libmcrypt-2.5.8 ./configure make && make install</pre><p>libvpx源码包是用于提供视频编码器的服务程序</p><pre> cd .. tar xjvf libvpx-v1.3.0.tar.bz2 cd libvpx-v1.3.0 ./configure --prefix=/usr/local/libvpx --enable-shared --enable-vp9 make && make install</pre><p>tiff源码包是用于提供标签图像文件格式的服务程序</p><pre> cd .. tar zxvf tiff-4.0.3.tar.gz cd tiff-4.0.3 ./configure --prefix=/usr/local/tiff --enable-shared make && make install</pre><p>libpng源码包是用于提供png图片格式支持函数库的服务程序</p><pre> cd .. tar zxvf libpng-1.6.12.tar.gz cd libpng-1.6.12 ./configure --prefix=/usr/local/libpng --enable-shared make && make install</pre><p>freetype源码包是用于提供字体支持引擎的服务程序</p><pre> cd .. tar zxvf freetype-2.5.3.tar.gz cd freetype-2.5.3 ./configure --prefix=/usr/local/freetype --enable-shared make && make install</pre><p>jpeg源码包是用于提供jpeg图片格式支持函数库的服务程序</p><pre> cd .. tar zxvf jpegsrc.v9a.tar.gz cd jpeg-9a ./configure --prefix=/usr/local/jpeg --enable-shared make && make install</pre><p>libgd源码包是用于提供图形处理的服务程序,<br>在编译libgd源码包时, 请记得写入jpeg、libpng、freetype、tiff、libvpx等服务程序在系统中的安装路径.</p><pre> cd .. tar zxvf libgd-2.1.0.tar.gz cd libgd-2.1.0 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure <span class="attribute">--prefix</span>=/usr/local/libgd --enable-shared <span class="attribute">--with-jpeg</span>=/usr/local/jpeg <span class="attribute">--with-png</span>=/usr/local/libpng <span class="attribute">--with-freetype</span>=/usr/local/freetype <span class="attribute">--with-fontconfig</span>=/usr/local/freetype <span class="attribute">--with-xpm</span>=/usr/ <span class="attribute">--with-tiff</span>=/usr/local/tiff <span class="attribute">--with-vpx</span>=/usr/local/libvpx</span><br></pre></td></tr></table></figure> make && make install</pre><p>先定义一个名为LD_LIBRARY_PATH的全局环境变量, 该环境变量的作用是帮助系统找到指定的动态链接库文件, 这些文件是编译php服务源码包的必须元素之一. 编译php服务源码包时, 除了定义要安装到的目录以外, 还需要依次定义配置php服务程序配置文件的保存目录、MySQL数据库服务程序所在目录、MySQL数据库服务程序配置文件所在目录，以及libpng、jpeg、freetype、libvpx、zlib等服务程序的安装目录路径, 并通过参数启动php服务程序的诸多默认功能.</p><pre> cd .. tar zvxf php-5.5.14.tar.gz cd php-5.5.14 export LD_LIBRARY_PATH=/usr/local/libgd/lib <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./configure</span> <span class="params">--prefix=/usr/local/php</span> <span class="params">--with-config-file-path=/usr/local/php/etc</span> <span class="params">--with-mysql=/usr/local/mysql</span> <span class="params">--with-mysqli=/usr/local/mysql/bin/mysql_config</span> <span class="params">--with-mysql-sock=/tmp/mysql</span>.sock <span class="params">--with-pdo-mysql=/usr/local/mysql</span> <span class="params">--with-gd</span> <span class="params">--with-png-dir=/usr/local/libpng</span> <span class="params">--with-jpeg-dir=/usr/local/jpeg</span> <span class="params">--with-freetype-dir=/usr/local/freetype</span> <span class="params">--with-xpm-dir=/usr/</span> <span class="params">--with-vpx-dir=/usr/local/libvpx/</span> <span class="params">--with-zlib-dir=/usr/local/zlib</span> <span class="params">--with-iconv</span> <span class="params">--enable-libxml</span> <span class="params">--enable-xml</span> <span class="params">--enable-bcmath</span> <span class="params">--enable-shmop</span> <span class="params">--enable-sysvsem</span> <span class="params">--enable-inline-optimization</span> <span class="params">--enable-opcache</span> <span class="params">--enable-mbregex</span> <span class="params">--enable-fpm</span> <span class="params">--enable-mbstring</span> <span class="params">--enable-ftp</span> <span class="params">--enable-gd-native-ttf</span> <span class="params">--with-openssl</span> <span class="params">--enable-pcntl</span> <span class="params">--enable-sockets</span> <span class="params">--with-xmlrpc</span> <span class="params">--enable-zip</span> <span class="params">--enable-soap</span> <span class="params">--without-pear</span> <span class="params">--with-gettext</span> <span class="params">--enable-session</span> <span class="params">--with-mcrypt</span> <span class="params">--with-curl</span> <span class="params">--enable-ctype</span></span><br></pre></td></tr></table></figure> make && make install</pre><p>在php源码包程序安装完成后, 需要删除当前默认的配置文件, 然后将php服务程序目录中相应的配置文件复制过来.</p><pre> rm -rf /etc/php.ini ln -s /usr/local/php/etc/php.ini /etc/php.ini cp php.ini-production /usr/local/php/etc/php.ini cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf ln -s /usr/local/php/etc/php-fpm.conf /etc/php-fpm.conf</pre><p>php-fpm.conf是php服务程序重要的配置文件之一, 我们需要启用该配置文件中第25行左右的pid文件保存目录, 然后分别将第148和149行的user与group参数分别修改为www账户和用户组名称.</p><pre> vim /usr/local/php/etc/php-fpm.conf <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pid = run/php-fpm.pid</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br></pre></td></tr></table></figure></pre><p>配置妥当后便可把用于管理php服务的脚本文件复制到/etc/rc.d/init.d中了. 为了能够执行脚本, 请记得为脚本赋予755权限. 最后把php-fpm服务程序加入到开机启动项中.</p><pre> cp sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm chmod 755 /etc/rc.d/init.d/php-fpm chkconfig php-fpm on</pre><p>编辑php.ini配置文件, 在305行的disable_functions参数后面追加上要禁止的功能.</p><pre> vim /usr/local/php/etc/php.ini <figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = passthru,<span class="keyword">exec</span>,<span class="keyword">system</span>,<span class="keyword">chroot</span>,scandir,chgrp,<span class="keyword">chown</span>,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restor e,dl,openlog,syslog,<span class="keyword">readlink</span>,<span class="keyword">symlink</span>,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,g etservbyname,<span class="keyword">getservbyport</span>,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd,posix_getegid,posix_geteuid,posix_getgid,po six_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,posix_getppid,posix_getpwnam,posix<span class="number">_</span> <span class="keyword">getpwuid</span>,posix_getrlimit,posix_getsid,posix_getuid,posix_isatty,posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,posix<span class="number">_</span> setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</span><br></pre></td></tr></table></figure></pre><p>编辑Nginx服务程序的主配置文件,<br>把第2行的井号(#)删除, 然后在后面写上负责运行Nginx服务程序的账户名称和用户组名称;<br>在第45行的index参数后面写上网站的首页名称.<br>最后是将第65～71行参数前的井号(#)删除来启用参数, 主要是修改第69行的脚本名称路径参数.<br>其中$document_root变量即为网站信息存储的根目录路径, 若没有设置该变量, 则Nginx服务程序无法找到网站信息, 因此会提示”404页面未找到”的报错信息,<br>重启Nginx服务与php-fpm服务.</p><pre> vim /usr/local/nginx/conf/nginx.conf <figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user www www; <span class="meta"># 2行</span></span><br><span class="line"><span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm <span class="keyword">index</span>.php; <span class="meta"># 45行</span></span><br><span class="line">$document_root$fastcgi_script_name; <span class="meta"># 69行</span></span><br></pre></td></tr></table></figure> systemctl restart nginx systemctl restart php-fpm</pre><h2 id="搭建Discuz论坛"><a href="#搭建Discuz论坛" class="headerlink" title="搭建Discuz论坛"></a>搭建Discuz论坛</h2><p>Discuz! X3.2软件包的后缀是.zip格式, 因此应当使用专用的unzip命令来进行解压. 解压后会在当前目录中出现一个名为upload的文件目录, 这里面保存的就是Discuz!论坛的系统程序. 把Nginx服务程序网站根目录的内容清空后, 把这些这个目录中的文件都复制进去了. 记得把Nginx服务程序的网站根目录的所有者和所属组修改为本地的www用户, 并为其赋予755权限以便于能够读、写、执行该论坛系统内的文件.</p><pre> cd /usr/local/src/ unzip Discuz_X3.2_SC_GBK.zip rm -rf /usr/local/nginx/html/{index.html,50x.html}* mv upload/* /usr/local/nginx/html/ chown -Rf www:www /usr/local/nginx/html chmod -Rf 755 /usr/local/nginx/html</pre><p>第1步:接受Discuz!安装向导的许可协议</p><p>第2步:检查Discuz! X3.2论坛系统的安装环境及目录权限<br><img src="/post/cea46563/Discuz%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC1.png" alt="Discuz安装向导图1"></p><p>第3步:选择”全新安装Discuz! X(含UCenter Server)<br><img src="/post/cea46563/Discuz%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC2.png" alt="Discuz安装向导图2"></p><p>第4步:填写服务器的数据库信息与论坛系统管理员信息<br><img src="/post/cea46563/Discuz%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC3.png" alt="Discuz安装向导图3"></p><p>第5步:等待Discuz! X3.2论坛系统安装完毕<br><img src="/post/cea46563/Discuz%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC4.png" alt="Discuz安装向导图4"><br><img src="/post/cea46563/Discuz%E5%AE%89%E8%A3%85%E5%90%91%E5%AF%BC5.png" alt="Discuz安装向导图5"></p><table style="text-align:center;"><tr><td>转载(原文链接):</td><td><a href="https://www.linuxprobe.com/chapter-09.html" target="_blank" rel="noopener">https://www.linuxprobe.com/chapter-09.html</a></td></tr></table>>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;使用ssh服务管理远程主机&quot;&gt;&lt;a href=&quot;#使用ssh服务管理远程主机&quot; class=&quot;headerlink&quot; title=&quot;使用ssh服务管理远程主机&quot;&gt;&lt;/a&gt;使用ssh服务管理远程主机&lt;/h1&gt;&lt;h2 id=&quot;配置网卡服务&quot;&gt;&lt;a href=&quot;#配置网卡服务&quot; class=&quot;headerlink&quot; title=&quot;配置网卡服务&quot;&gt;&lt;/a&gt;配置网卡服务&lt;/h2&gt;&lt;h3 id=&quot;配置网卡参数&quot;&gt;&lt;a href=&quot;#配置网卡参数&quot; class=&quot;headerlink&quot; title=&quot;配置网卡参数&quot;&gt;&lt;/a&gt;配置网卡参数&lt;/h3&gt;&lt;p&gt;使用nmtui命令来配置网络, 执行nmtui命令运行网络配置工具.&lt;br&gt;&lt;img src=&quot;/post/cea46563/%E7%AC%AC1%E6%AD%A5-%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E2%80%9Cnmtui%E2%80%9D.png&quot; alt=&quot;第1步:执行命令“nmtui&amp;quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选中Edit a connection并按下回车键&lt;br&gt;&lt;img src=&quot;/post/cea46563/%E7%AC%AC2%E6%AD%A5-%E9%80%89%E6%8B%A9%E8%A6%81%E7%BC%96%E8%BE%91%E7%9A%84%E7%BD%91%E5%8D%A1.png&quot; alt=&quot;第2步:选择要编辑的网卡&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
      <category term="Apache" scheme="http://www.mengyun.club/tags/Apache/"/>
    
      <category term="NFS" scheme="http://www.mengyun.club/tags/NFS/"/>
    
      <category term="MySQL" scheme="http://www.mengyun.club/tags/MySQL/"/>
    
      <category term="Nginx" scheme="http://www.mengyun.club/tags/Nginx/"/>
    
      <category term="SSH" scheme="http://www.mengyun.club/tags/SSH/"/>
    
      <category term="SELinux" scheme="http://www.mengyun.club/tags/SELinux/"/>
    
      <category term="FTP" scheme="http://www.mengyun.club/tags/FTP/"/>
    
      <category term="TFTP" scheme="http://www.mengyun.club/tags/TFTP/"/>
    
      <category term="Samba" scheme="http://www.mengyun.club/tags/Samba/"/>
    
      <category term="AutoFs" scheme="http://www.mengyun.club/tags/AutoFs/"/>
    
      <category term="Bind" scheme="http://www.mengyun.club/tags/Bind/"/>
    
      <category term="DHCP" scheme="http://www.mengyun.club/tags/DHCP/"/>
    
      <category term="Postfix" scheme="http://www.mengyun.club/tags/Postfix/"/>
    
      <category term="Dovecot" scheme="http://www.mengyun.club/tags/Dovecot/"/>
    
      <category term="SYSLinux" scheme="http://www.mengyun.club/tags/SYSLinux/"/>
    
      <category term="KickStart" scheme="http://www.mengyun.club/tags/KickStart/"/>
    
      <category term="PXE" scheme="http://www.mengyun.club/tags/PXE/"/>
    
      <category term="PHP" scheme="http://www.mengyun.club/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础知识</title>
    <link href="http://www.mengyun.club/post/df41aea9/"/>
    <id>http://www.mengyun.club/post/df41aea9/</id>
    <published>2020-06-18T01:47:31.000Z</published>
    <updated>2021-04-27T11:46:36.642Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><code>Linux</code>是一个基于<code>POSIX</code>的<code>多用户</code>、<code>多任务</code>、支持<code>多线程</code>和多CPU的<code>操作系统</code></p><p><code>可移植操作系统接口</code>(英语:<code>Portable Operating System Interface</code>, 缩写为<code>POSIX</code>)是<code>IEEE</code>为要在各种<code>UNIX操作系统</code>上运行软件, 而定义<code>API</code>的一系列互相关联的标准的总称.</p><p><code>电气与电子工程师协会</code>(英语: <code>Institute of Electrical and Electronics Engineers</code>), 简称<code>IEEE</code>, 总部位于美国纽约, 是一个国际性的电子技术与信息科学工程师的协会, 也是目前全球最大的非营利性专业技术学会. <code>IEEE</code>大部分成员是<code>电子工程师</code>、<code>计算机工程师</code>和<code>计算机科学家</code></p><p><code>Unix</code>是20世纪70年代初出现的一个<code>操作系统</code>, 除了作为<code>网络操作系统</code>之外, 还可以作为<code>单机操作系统</code>使用.</p><p><code>API</code>(英语:<code>Application Programming Interface</code>, 应用程序接口)是一些<code>预先定义</code>的<code>接口</code>(如函数、HTTP接口), 或指软件系统不同组成部分衔接的<code>约定</code>. 用来提供应用程序与开发人员基于某软件或硬件得以访问的一组例程, 而又无需访问源码, 或理解内部工作机制的细节.</p><h1 id="用户类型"><a href="#用户类型" class="headerlink" title="用户类型"></a>用户类型</h1><p><code>uid=0 gid=0 groups=0</code> <code>root</code>用户: 一个特殊的管理帐户, 也被称为超级用户; root已接近完整的系统控制, 对系统损害几乎有无限的能力, 除非必要, 不要登录为root.<br><code>999 &gt;= uid gid groups &gt;= 1</code> 系统用户: Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器, 默认服务程序会有独立的系统用户负责运行, 进而有效控制被破坏范围.<br><code>uid gid groups &gt;= 1000</code> 普通用户:  由<code>root</code>创建的用于日常工作的用户, 权限有限, 造成损害的能力比较有限.</p><a id="more"></a><h1 id="终端类型"><a href="#终端类型" class="headerlink" title="终端类型"></a>终端类型</h1><p>设备终端: 键盘、鼠标、显示器<br>控制台终端: <code>/dev/console</code><br>串行终端: <code>/dev/ttyS数字</code><br>虚拟终端: <code>tty</code>(<code>teletypewriters</code>), <code>/dev/tty数字</code>.<br>图形终端<br>伪终端: <code>/dev/pts/数字</code><br>查看终端的命令: <code>tty</code></p><h1 id="交互式接口"><a href="#交互式接口" class="headerlink" title="交互式接口"></a>交互式接口</h1><p>图形用户界面(英语: <code>Graphical User Interface</code>, 简称: <code>GUI</code>, 又称图形用户接口）是指采用图形方式显示的计算机操作用户界面.<br>命令行界面（英语: <code>Command-Line Interface</code>, 简称: <code>CLI</code>）是在图形用户界面得到普及之前使用最为广泛的用户界面, 它通常不支持鼠标, 用户通过键盘输入指令, 计算机接收到指令后, 予以执行.</p><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><p><code>Shell</code>是Linux系统的用户界面(命令行), 提供了用户与内核进行交互操作的一种接口. 它接收用户输入的命令并把它送入内核去执行; <code>Shell</code>也被称为Linux的命令解释器(<code>Command Interpreter</code>); <code>Shell</code>是一种高级程序设计语言.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前使用的shell</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;SHELL&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前系统使用的所有shell</span></span><br><span class="line">cat /etc/shells</span><br></pre></td></tr></table></figure><h1 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h1><p>Vim编辑器中设置了三种模式:</p><pre> 命令模式: 控制光标移动, 可对文本进行复制、粘贴、删除和查找等工作. 输入模式: 正常的文本录入. 末行模式: 保存或退出文档, 以及设置编辑环境.</pre><p><img src="/post/df41aea9/vim%E4%B8%8D%E5%90%8C%E6%A8%A1%E5%BC%8F%E9%97%B4%E7%9A%84%E5%88%87%E6%8D%A2.png" alt="vim不同模式间的切换"></p><p>命令模式的常用命令</p><table><tr><td>命令</td><td>作用</td></tr><tr><td>dd</td><td>删除(剪切)光标所在整行</td></tr><tr><td>5dd</td><td>删除(剪切)从光标处开始的5行</td></tr><tr><td>yy</td><td>复制光标所在整行</td></tr><tr><td>5yy</td><td>复制从光标处开始的5行</td></tr><tr><td>n</td><td>显示搜索命令定位到的下一个字符串</td></tr><tr><td>N</td><td>显示搜索命令定位到的上一个字符串</td></tr><tr><td>u</td><td>撤销上一步的操作</td></tr><tr><td>p</td><td>将之前删除(dd)或复制(yy)过的数据粘贴到光标后面</td></tr></table><p>末行模式的常用命令</p><table><tr><td>命令</td><td>作用</td></tr><tr><td>:w</td><td>保存</td></tr><tr><td>:q</td><td>退出</td></tr><tr><td>:q!</td><td>强制退出(放弃对文档的修改内容)</td></tr><tr><td>:wq!</td><td>强制保存退出</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>不显示行号</td></tr><tr><td>:命令</td><td>执行该命令</td></tr><tr><td>:整数</td><td>跳转到该行</td></tr><tr><td>:s/one/two</td><td>将当前光标所在行的第一个one替换成two</td></tr><tr><td>:s/one/two/g</td><td>将当前光标所在行的所有one替换成two</td></tr><tr><td>:%s/one/two/g</td><td>将全文中的所有one替换成two</td></tr><tr><td>?字符串</td><td>在文本中从下至上搜索该字符串</td></tr><tr><td>/字符串</td><td>在文本中从上至下搜索该字符串</td></tr></table><h2 id="配置主机名称"><a href="#配置主机名称" class="headerlink" title="配置主机名称"></a>配置主机名称</h2><p>在Linux系统中, 主机名大多保存在/etc/hostname文件中.</p><p>第1步: 使用Vim编辑器修改”/etc/hostname”主机名称文件.<br><code>vim /etc/hostname</code></p><p>第2步: 保存并退出文档, 然后使用hostname命令检查是否修改成功.<br><code>hostname</code></p><h2 id="配置网卡信息"><a href="#配置网卡信息" class="headerlink" title="配置网卡信息"></a>配置网卡信息</h2><p>第1步: 切换到/etc/sysconfig/network-scripts目录中(存放着网卡的配置文件).<br><code>cd /etc/sysconfig/network-scripts/</code>&nbsp;&nbsp;<code>vim ifcfg-eno16777736</code></p><p>第2步: 使用Vim编辑器修改网卡文件ifcfg-eno16777736,逐项写入下面的配置参数并保存退出.</p><pre>设备类型: TYPE=Ethernet地址分配模式: BOOTPROTO=static网卡名称: NAME=eno16777736是否启动: ONBOOT=yesIP地址: IPADDR=192.168.10.10子网掩码: NETMASK=255.255.255.0网关地址: GATEWAY=192.168.10.1DNS地址: DNS1=192.168.10.1</pre><p>第3步: 重启网络服务并测试网络是否联通<br><code>systemctl restart network</code></p><h2 id="配置Yum仓库"><a href="#配置Yum仓库" class="headerlink" title="配置Yum仓库"></a>配置Yum仓库</h2><p>Yum软件仓库的作用是为了进一步简化RPM管理软件的难度以及自动分析所需软件包及其依赖关系的技术</p><h3 id="FTP提供方式"><a href="#FTP提供方式" class="headerlink" title="FTP提供方式"></a>FTP提供方式</h3><p>客户端:<br>配置好FTP服务进行文件共享</p><p>服务端:</p><pre>vi repo_http.repo [http] name=http_centos7.2 baseurl=ftp://用户名:密码@ftp服务端ip/默认根目录下的指定目录 gpgcheck=0 enabled=1</pre><h3 id="HTTP提供方式"><a href="#HTTP提供方式" class="headerlink" title="HTTP提供方式"></a>HTTP提供方式</h3><p>本地镜像:<br>安装httpd软件. 启动httpd服务并设置配置为开机启动.</p><pre> yum -y install httpd systemctl enabled httpd systemctl restart httpd</pre><p>镜像资源目录拷贝至http的网站根目录(/var/www/html/)</p><pre> /var/www/html/centos7.2</pre><p>使用该yum仓库</p><pre> vi /etc/yum.repo.d/centos.repo [http] name=http_centos7.2 baseurl=http://ip地址/centos7.2 gpgcheck=0 enabled=1</pre><p>阿里源镜像:</p><pre>wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</pre><p>查看yum源中是否有软件包<br><code>yum repolist</code></p><h3 id="本地提供方式"><a href="#本地提供方式" class="headerlink" title="本地提供方式"></a>本地提供方式</h3><p>第1步: 进入到/etc/yum.repos.d/目录中(因为该目录存放着Yum软件仓库的配置文件).<br><code>cd /etc/yum.repos.d/</code></p><p>第2步: 使用Vim编辑器创建一个名为rhel7.repo的新配置文件(文件名称可随意,但后缀必须为.repo), 逐项写入下面加粗的配置参数并保存退出.<br><code>vim rhel7.repo</code></p><table><tr><td>[rhel-media]</td><td>Yum软件仓库唯一标识符, 避免与其他仓库冲突.</td></tr><tr><td>name=linuxprobe</td><td>Yum软件仓库的名称描述, 易于识别仓库用处.</td></tr><tr><td>baseurl=file:///media/cdrom</td><td>提供的方式包括FTP(ftp://..)、HTTP(http://..)、本地(file:///..).</td></tr><tr><td>enabled=1</td><td>设置此源是否可用; 1为可用, 0为禁用.</td></tr><tr><td>gpgcheck=1</td><td>设置此源是否校验文件; 1为校验, 0为不校验.</td></tr><tr><td>gpgkey=file</td><td>///media/cdrom/RPM-GPG-KEY-redhat-release: 若上面参数开启校验,那么请指定公钥文件地址.</td></tr></table><p>第3步: 按配置参数的路径挂载光盘, 并把光盘挂载信息写入到/etc/fstab文件中.</p><pre> mkdir -p /media/cdrom mount /dev/cdrom /media/cdrom vim /etc/fstab /dev/cdrom /media/cdrom iso9660 defaults 0 0</pre><p>第4步: 使用<code>yum install httpd -y</code>命令检查Yum软件仓库是否已经可用.<br>尝试使用Yum软件仓库来安装Web服务, 末尾出现Complete!则代表配置正确.</p><h1 id="计划任务服务程序"><a href="#计划任务服务程序" class="headerlink" title="计划任务服务程序"></a>计划任务服务程序</h1><h2 id="一次性计划任务"><a href="#一次性计划任务" class="headerlink" title="一次性计划任务"></a>一次性计划任务</h2><table><tr><td>at 时间</td><td>设置一次性计划任务</td></tr><tr><td>atrm 任务序号</td><td>根据任务序号删除一次性计划任务</td></tr><tr><td>at -l</td><td>查看已设置好但还未执行的一次性计划任务</td></tr><tr><td>at -c 任务序号</td><td>查看指定一次性计划任务的执行命令</td></tr></table><h2 id="周期性计划任务"><a href="#周期性计划任务" class="headerlink" title="周期性计划任务"></a>周期性计划任务</h2><p>cronb:服务名称<br>crontab:配置工具</p><table><tr><td>crontab -e</td><td>编辑计划任务</td></tr><tr><td>crontab -e -u 用户名</td><td>编辑指定用户的计划任务</td></tr><tr><td>crontab -l</td><td>查看当前计划任务</td></tr><tr><td>crontab -r 任务序号</td><td>删除某条计划任务</td></tr></table><pre>*  *  *  *  *  任务内容分 时 日 月 周  执行命令whereis 命令 --查询命令的所在路径</pre>注:用任务计划执行时, 命令必须使用绝对路径.<h1 id="用户身份与能力"><a href="#用户身份与能力" class="headerlink" title="用户身份与能力"></a>用户身份与能力</h1><table><tr><td>管理员UID:0</td><td>系统的管理员用户</td></tr><tr><td>系统用户UID:1-999</td><td>Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器, 默认服务程序会有独立的系统用户负责运行, 进而有效控制被破坏范围.</td></tr><tr><td>普通用户UID:1000-</td><td>由管理员创建的用于日常工作的用户</td></tr></table><h2 id="id命令"><a href="#id命令" class="headerlink" title="id命令"></a>id命令</h2><p>id命令用于显示指定用户的用户ID和组ID, 其格式为:<code>id [选项] [用户名]</code>.</p><h2 id="useradd命令"><a href="#useradd命令" class="headerlink" title="useradd命令"></a>useradd命令</h2><p>useradd命令用于创建新的用户, 格式为<code>useradd [选项] 用户名</code>.</p><pre>使用该命令创建用户账户时, 默认的用户家目录会被存放在/home目录中, 默认的Shell解释器为/bin/bash.在Linux系统中创建每个用户时, 将自动创建一个与其同名的基本用户组, 而且这个基本用户组只有该用户一个人.</pre><h2 id="groupadd命令"><a href="#groupadd命令" class="headerlink" title="groupadd命令"></a>groupadd命令</h2><p>groupadd命令用于创建用户组, 格式为<code>groupadd [选项] 群组名</code>.</p><pre>如果该用户以后被归纳入其他用户组, 则这个其他用户组称之为扩展用户组.一个用户只有一个基本用户组, 但是可以有多个扩展用户组, 从而满足日常的工作需要.</pre><h2 id="usermod命令"><a href="#usermod命令" class="headerlink" title="usermod命令"></a>usermod命令</h2><p>usermod命令用于修改用户的属性, 格式为<code>usermod [选项] 用户名</code>.</p><pre>用户的信息保存在/etc/passwd文件中</pre><h2 id="passwd命令"><a href="#passwd命令" class="headerlink" title="passwd命令"></a>passwd命令</h2><p>passwd命令用于修改用户密码、过期时间、认证信息等, 格式为<code>passwd [选项] [用户名]</code>.</p><pre>普通用户只能使用passwd命令修改自身的系统密码, 而root管理员则有权限修改其他所有人的密码.root管理员在Linux系统中修改自己或他人的密码时不需要验证旧密码</pre><h2 id="userdel命令"><a href="#userdel命令" class="headerlink" title="userdel命令"></a>userdel命令</h2><p>userdel命令用于删除用户, 格式为<code>userdel [选项] 用户名</code>.</p><h1 id="文件权限与归属"><a href="#文件权限与归属" class="headerlink" title="文件权限与归属"></a>文件权限与归属</h1><table><tr><td>-</td><td>普通文件</td></tr><tr><td>d</td><td>目录文件</td></tr><tr><td>l</td><td>链接文件</td></tr><tr><td>b</td><td>块设备文件</td></tr><tr><td>c</td><td>字符设备文件</td></tr><tr><td>p</td><td>管道文件</td></tr></table><table style="text-align:center;"><tr><td>字符表示</td><td>r</td><td>w</td><td>x</td></tr><tr><td>特殊字符表示</td><td>s</td><td>s</td><td>t</td></tr><tr><td>数字表示</td><td>4</td><td>2</td><td>1</td></tr><tr><td>权限分配</td><td>文件所有者</td><td>文件所属组</td><td>其他用户</td></tr></table><h2 id="文件的特殊权限"><a href="#文件的特殊权限" class="headerlink" title="文件的特殊权限"></a>文件的特殊权限</h2><table style="text-align:center;"><tr><td>SUID</td><td>执行者临时获取命令的所有者权限</td><td>??x/??s | ??-/??S</td><td>u+s</td></tr><tr><td>SGID</td><td>在某个目录中创建的文件自动继承该目录的用户组(只可以对目录进行设置)</td><td>??x/??s | ??-/??S</td><td>g+s</td></tr><tr><td>SBIT</td><td>确保用户只能删除自己的文件, 而不能删除其他用户的文件.</td><td>??x/??t | ??-/??T</td><td>o+t</td></tr></table><h2 id="文件的隐藏属性"><a href="#文件的隐藏属性" class="headerlink" title="文件的隐藏属性"></a>文件的隐藏属性</h2><h3 id="chattr命令"><a href="#chattr命令" class="headerlink" title="chattr命令"></a>chattr命令</h3><p>chattr命令用于设置文件的隐藏权限, 格式为<code>chattr [参数] 文件</code>.</p><h3 id="lsattr命令"><a href="#lsattr命令" class="headerlink" title="lsattr命令"></a>lsattr命令</h3><p>lsattr命令用于显示文件的隐藏权限, 格式为<code>lsattr [参数] 文件</code>.</p><h2 id="文件访问控制列表"><a href="#文件访问控制列表" class="headerlink" title="文件访问控制列表"></a>文件访问控制列表</h2><pre>对某个指定的用户进行单独的权限控制, 就需要用到文件的访问控制列表(ACL).通俗来讲, 基于普通文件或目录设置ACL其实就是针对指定的用户或用户组设置文件或目录的操作权限.另外, 如果针对某个目录设置了ACL, 则目录中的文件会继承其ACL; 若针对文件设置了ACL, 则文件不再继承其所在目录的ACL.</pre><h3 id="setfacl命令"><a href="#setfacl命令" class="headerlink" title="setfacl命令"></a>setfacl命令</h3><p>setfacl命令用于管理文件的ACL规则</p><pre> setfacl 选项 用户:名:权限 文件名称/目录 |__ -m --更改文件的访问控制列表 |__ -M --从文件读取访问控制列表条目更改 |__ -x --根据文件中访问控制列表移除条目 |__ -X --从文件读取访问控制列表条目并删除 |__ -b --删除所有扩展访问控制列表条目 |__ -k --移除默认访问控制列表 |__ -d --应用到默认访问控制列表的操作 |__ -P --依照自然逻辑, 不跟随符号链接 |__ -v --显示版本并退出 |__ -R --递归操作子目录</pre><h3 id="getfacl命令"><a href="#getfacl命令" class="headerlink" title="getfacl命令"></a>getfacl命令</h3><p>getfacl命令用于显示文件上设置的ACL信息, 格式为<code>getfacl 文件名称</code>.</p><h2 id="su命令和sudo服务"><a href="#su命令和sudo服务" class="headerlink" title="su命令和sudo服务"></a>su命令和sudo服务</h2><h3 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h3><p>su命令可以解决切换用户身份的需求, 使得当前用户在不退出登录的情况下, 顺畅地切换到其他用户.<br>格式:<code>su - 用户名</code>, -:表示完全切换, 环境变量信息也变更为新用户的相应信息.</p><h3 id="sudo服务"><a href="#sudo服务" class="headerlink" title="sudo服务"></a>sudo服务</h3><p>sudo命令用于给普通用户提供额外的权限来完成原本root管理员才能完成的任务</p><table>sudo命令功能:<tr><td>限制用户执行指定的命令</td></tr><tr><td>记录用户执行的每一条命令</td></tr><tr><td>配置文件(/etc/sudoers)提供集中的用户管理、权限与主机等参数</td></tr><tr><td>验证密码的后5分钟内(默认值)无须再让用户再次验证密码</td></tr></table><pre> sudo [选项] 命令名称 |__ -h --列出帮助信息 |__ -l --列出当前用户可执行的命令 |__ -u 用户名/UID值 --以指定的用户身份执行命令 |__ -k --清空密码的有效时间, 下次执行sudo时需要再次进行密码验证. |__ -b --在后台执行指定的命令 |__ -p --更改询问密码的提示语</pre><pre>root管理员进行授权: visudo 谁可以使用 允许使用的主机=(以谁的身份) 可执行命令的列表 root ALL=(ALL) ALL ... #xxx ALL=(ALL) NOPASSWD: xxx//普通用户执行命令时无需输入密码普通用户获取权限: sudo 命令名称 输入当前用户的密码后执行命令</pre><h1 id="存储结构与磁盘划分"><a href="#存储结构与磁盘划分" class="headerlink" title="存储结构与磁盘划分"></a>存储结构与磁盘划分</h1><h2 id="一切从”-“开始"><a href="#一切从”-“开始" class="headerlink" title="一切从”/“开始"></a>一切从”/“开始</h2><p>在Linux系统中, 目录、字符设备、块设备、套接字、打印机等都被抽象成了文件, 即Linux系统中一切都是文件.<br>Linux系统中的一切文件都是从”根(<code>/</code>)”目录开始的, 并按照文件系统层次化标准(FHS)采用树形结构来存放文件, 以及定义了常见目录的用途.</p><table>Linux系统中常见的目录名称以及相应内容<tr><td>/boot</td><td>开机所需文件—内核、开机菜单以及所需配置文件等</td></tr><tr><td>*/etc</td><td>配置文件</td></tr><tr><td>*/home</td><td>用户主目录</td></tr><tr><td>/media</td><td>用于挂载设备文件的目录</td></tr><tr><td>/opt</td><td>放置第三方的软件</td></tr><tr><td>*/root</td><td>系统管理员的家目录</td></tr><tr><td>/srv</td><td>一些网络服务的数据文件目录</td></tr><tr><td>/tmp</td><td>任何人均可使用的"共享"临时目录</td></tr><tr><td>*/proc</td><td>虚拟文件系统, 例如系统内核、进程、外部设备及网络状态等.</td></tr><tr><td>/usr/local</td><td>用户自行安装的软件</td></tr><tr><td>/usr/share</td><td>帮助与说明文件, 也可放置共享文件.</td></tr><tr><td>*/var</td><td>主要存放经常变化的文件, 如日志.</td></tr></table><p><a href="https://blog.csdn.net/u013239236/article/details/48845251" target="_blank" rel="noopener">详细介绍请看CSDN博主:Super-小志志的博客介绍</a></p><pre> 相对路径: 根据一个路径来定位 绝对路径: 指定全路径</pre><h2 id="物理设备的命令规则"><a href="#物理设备的命令规则" class="headerlink" title="物理设备的命令规则"></a>物理设备的命令规则</h2><table><tr><td>IDE设备</td><td>/dev/hd[a-d]</td></tr><tr><td>SCSI/SATA/U盘</td><td>/dev/sd[a-p]</td></tr><tr><td>软驱</td><td>/dev/fd[0-1]</td></tr><tr><td>打印机</td><td>/dev/lp[0-15]</td></tr><tr><td>光驱</td><td>/dev/cdrom</td></tr><tr><td>鼠标</td><td>/dev/mouse</td></tr><tr><td>磁带机</td><td>/dev/st0或/dev/ht0</td></tr></table><code>主分区或扩展分区的编号从1开始, 到4结束; 逻辑分区从编号5开始.</code><pre> 硬盘设备是由大量的扇区组成的, 每个扇区的容量为512字节. 第一个扇区最重要: 里面保存着主引导记录与分区表信息.  主引导记录需要占用446字节, 分区表为64字节, 结束符占用2字节. 分区表中每记录一个分区信息就需要16字节 最多只有4个分区信息可以写到第一个扇区中, 这4个分区就是4个主分区. 为了解决分区个数不够的问题, 可以将第一个扇区的分区表中16字节的空间(称之为扩展分区)拿出来指向另外一个分区. 扩展分区其实并不是一个真正的分区, 而更像是一个占用16字节分区表空间的指针, 一个指向另外一个分区的指针.</pre><h2 id="文件系统与数据资料"><a href="#文件系统与数据资料" class="headerlink" title="文件系统与数据资料"></a>文件系统与数据资料</h2><p>用户在硬件存储设备中执行的文件建立、写入、读取、修改、转存与控制等操作都是依靠文件系统来完成的. 文件系统的作用是合理规划硬盘, 以保证用户正常的使用需求. </p><p>计算机系统在发展过程中产生了众多的文件系统, 为了使用户在读取或写入文件时不用关心底层的硬盘结构, Linux内核中的软件层为用户程序提供了一个VFS(Virtual File System, 虚拟文件系统)接口, 这样用户实际上在操作文件时就是统一对这个虚拟文件系统进行操作了</p><p>最常见的文件系统</p><pre> Ext3:是一款日志文件系统, 能够在系统异常宕机时避免文件系统资料丢失, 并能自动修复数据的不一致与错误. 然而, 当硬盘容量较大时, 所需的修复时间也会很长, 而且也不能百分之百地保证资料不会丢失.它会把整个磁盘的每个写入动作的细节都预先记录下来, 以便在发生异常宕机后能回溯追踪到被中断的部分, 然后尝试进行修复. Ext4:Ext3的改进版本, 作为RHEL 6系统中的默认文件管理系统, 它支持的存储容量高达1EB(1EB=1,073,741,824GB), 且能够有无限多的子目录. 另外, Ext4文件系统能够批量分配block块, 从而极大地提高了读写效率. XFS:是一种高性能的日志文件系统, 而且是RHEL 7中默认的文件管理系统, 它的优势在发生意外宕机后尤其明显, 即可以快速地恢复可能被破坏的文件, 而且强大的日志功能只用花费极低的计算和存储性能.并且它最大可支持的存储容量为18EB, 这几乎满足了所有需求.</pre><pre> Linux系统中有一个名为super block的"硬盘地图", 里面记录着整个文件系统的信息. Linux只是把每个文件的权限与属性记录在inode中, 而且每个文件占用一个独立的inode表格, 该表格的大小默认为128字节. 该文件的访问权限(read、write、execute) 该文件的所有者与所属组(owner、group) 该文件的大小(size) 该文件的创建或内容修改时间(ctime) 该文件的最后一次访问时间(atime) 该文件的修改时间(mtime) 文件的特殊权限(SUID、SGID、SBIT) 该文件的真实数据地址(point)</pre><pre> 文件的实际内容则保存在block块中(大小可以是1KB、2KB或4KB), 一个inode的默认大小仅为128B(Ext3), 记录一个block则消耗4B. 当文件的inode被写满后, Linux系统会自动分配出一个block块, 专门用于像inode那样记录其他block块的信息,  这样把各个block块的内容串到一起,就能够让用户读到完整的文件内容了. 对于存储文件内容的block块,有下面两种常见情况(以4KB的block大小为例进行说明). 情况1:文件很小(1KB), 但依然会占用一个block, 因此会潜在地浪费3KB. 情况2:文件很大(5KB), 那么会占用两个block(5KB-4KB后剩下的1KB也要占用一个block).</pre><h2 id="挂载硬件设备"><a href="#挂载硬件设备" class="headerlink" title="挂载硬件设备"></a>挂载硬件设备</h2><p>当用户需要使用硬盘设备或分区中的数据时, 需要先将其与一个已存在的目录文件进行关联, 而这个关联动作就是”挂载”.<br>挂载: <code>mount 存储设备 挂载点</code><br>卸载: <code>umount 存储设备/挂载点</code></p><table style="font-size:12px;text-align:center;">永久挂载的各字段所表示的含义(写入到/etc/fstab文件)<tr><td>设备文件</td><td>挂载目录</td><td>格式类型</td><td>权限选项</td><td>是否备份</td><td>是否自检</td></tr><tr><td>一般为设备的路径+设备名称,也可以写唯一识别码(UUID,Universally Unique Identifier).</td><td>指定要挂载到的目录, 需在挂载前创建好.</td><td>指定文件系统的格式</td><td>若设置为defaults, 则默认权限为:rw, suid, dev, exec, auto, nouser, async.</td><td>若为1则开机后使用dump进行磁盘备份, 为0则不备份.</td><td>若为1则开机后自动进行磁盘自检, 为0则不自检.</td></tr></table><h2 id="添加硬盘设备"><a href="#添加硬盘设备" class="headerlink" title="添加硬盘设备"></a>添加硬盘设备</h2><p>添加硬盘: 虚拟主机 -&gt; 设置 -&gt; 添加 -&gt; 硬盘 </p><p>第一步: fdisk命令用于管理磁盘分区, 格式为<code>fdisk [磁盘名称]</code>;<br>使用file命令查看该文件的属性, 格式为<code>file 分区名称</code>.</p><p>第二步: 输入partprobe命令手动将分区信息同步到内核, 格式为<code>partprobe</code>.<br>第三步: 使用mkfs命令对其分区进行格式化, 格式为<code>mkfs.文件类型名称 分区名称</code>.<br>第四步: 创建一个用于挂载设备的挂载点目录; 然后使用mount命令将存储设备与挂载点进行关联.<br>使用<code>df -h</code>命令来查看挂载状态和硬盘使用量信息</p><p>用于查看文件数据占用量的du命令, 其格式为<code>du [选项] [文件]</code>.</p><h2 id="添加交换分区"><a href="#添加交换分区" class="headerlink" title="添加交换分区"></a>添加交换分区</h2><p>SWAP(交换)分区是一种通过在硬盘中预先划分一定的空间, 然后将把内存中暂时不常用的数据临时存放到硬盘中, 以便腾出物理内存空间让更活跃的程序服务来使用的技术, 其设计目的是为了解决真实物理内存不足的问题. 但由于交换分区毕竟是通过硬盘设备读写数据的, 速度肯定要比物理内存慢, 所以只有当真实的物理内存耗尽后才会调用交换分区的资源.</p><p>交换分区的划分建议: 在生产环境中, 交换分区的大小一般为真实物理内存的1.5～2倍.</p><p>第一步: fdisk命令用于管理磁盘分区, 格式为<code>fdisk [磁盘名称]</code>;<br>第二步: 输入partprobe命令手动将分区信息同步到内核, 格式为<code>partprobe</code>.<br>第三步: 使用mkfs命令对其分区进行格式化, 格式为<code>mkswap 分区名称</code>.<br>第四步: 使用swapon命令把准备好的SWAP分区设备正式挂载到系统中, 格式为<code>swapon 分区名称</code>.<br>第五步: 进行永久挂载:<code>/dev/分区名称 swap swap defaults 0 0</code><br>使用<code>free -m</code>命令查看交换分区的大小变化</p><h2 id="磁盘容量配额"><a href="#磁盘容量配额" class="headerlink" title="磁盘容量配额"></a>磁盘容量配额</h2><p>使用quota命令进行磁盘容量配额管理, 从而限制用户的硬盘可用容量或所能创建的最大文件个数.</p><pre> 软限制: 当达到软限制时会提示用户, 但仍允许用户在限定的额度内继续使用. 硬限制: 当达到硬限制时会提示用户, 且强制终止用户的操作.</pre><p>创建一个用于检查quota磁盘容量配额效果的用户tom, 并针对/boot目录增加其他人的写权限, 保证用户能够正常写入数据.</p><pre> useradd tom chmod -Rf o+w /boot</pre><h3 id="xfs-quota命令"><a href="#xfs-quota命令" class="headerlink" title="xfs_quota命令"></a>xfs_quota命令</h3><p>xfs_quota命令是一个专门针对XFS文件系统来管理quota磁盘容量配额服务而设计的命令,<br>格式为<code>xfs_quota [参数] 配额 文件目录</code>.</p><pre> xfs_quota [参数] 配额 文件目录 |__ -c --用于以参数的形式设置要执行的命令 |__ -x --专家模式硬盘使用量的软限制和硬限制分别为3MB和6MB; 创建文件数量的软限制和硬限制分别为3个和6个.xfs_quota -x -c 'limit bsoft=3m bhard=6m isoft=3 ihard=6 tom' /boot</pre><h3 id="edquota命令"><a href="#edquota命令" class="headerlink" title="edquota命令"></a>edquota命令</h3><p>edquota命令用于编辑用户的quota配额限制, 格式为<code>edquota [参数] [用户]</code>.</p><pre> edquota [参数] [用户] |__ -u --表示要针对哪个用户进行设置 |__ -g --表示要针对哪个用户组进行设置 edquota命令会调用Vi或Vim编辑器来让root管理员修改要限制的具体细节</pre><h1 id="使用RAID与LVM磁盘阵列技术"><a href="#使用RAID与LVM磁盘阵列技术" class="headerlink" title="使用RAID与LVM磁盘阵列技术"></a>使用RAID与LVM磁盘阵列技术</h1><h2 id="RAID磁盘冗余阵列"><a href="#RAID磁盘冗余阵列" class="headerlink" title="RAID磁盘冗余阵列"></a>RAID磁盘冗余阵列</h2><p>RAID技术通过把多个硬盘设备组合成一个容量更大、安全性更好的磁盘阵列, 并把数据切割成多个区段后分别存放在各个不同的物理硬盘设备上, 然后利用分散读写技术来提升磁盘阵列整体的性能, 同时把多个重要数据的副本同步到不同的物理硬盘设备上, 从而起到了非常好的数据冗余备份效果.<br>也就是说, RAID不仅降低了硬盘设备损坏后丢失数据的几率, 还提升了硬盘设备的读写速度.</p><h3 id="RAID-0"><a href="#RAID-0" class="headerlink" title="RAID 0"></a>RAID 0</h3><p>RAID0技术能够有效地提升硬盘数据的吞吐速度, 但是不具备数据备份和错误修复能力.<br><img src="/post/df41aea9/RAID0.png" alt="RAID0"></p><h3 id="RAID-1"><a href="#RAID-1" class="headerlink" title="RAID 1"></a>RAID 1</h3><p>如果生产环境对硬盘设备的读写速度没有要求, 而是希望增加数据的安全性时, 就需要用到RAID1技术了.<br><img src="/post/df41aea9/RAID1.jpg" alt="RAID1"></p><h3 id="RAID-5"><a href="#RAID-5" class="headerlink" title="RAID 5"></a>RAID 5</h3><p>RAID5技术是把硬盘设备的数据奇偶校验信息保存到其他硬盘设备中. RAID5磁盘阵列组中数据的奇偶校验信息并不是单独保存到某一块硬盘设备中, 而是存储到除自身以外的其他每一块硬盘设备上, 这样的好处是其中任何一设备损坏后不至于出现致命缺陷.<br><img src="/post/df41aea9/RAID5.gif" alt="RAID5"></p><h3 id="RAID-10"><a href="#RAID-10" class="headerlink" title="RAID 10"></a>RAID 10</h3><p>大部分企业更在乎的是数据本身的价值而非硬盘价格, 因此生产环境中主要使用RAID10技术.<br>顾名思义, RAID10技术是RAID1+RAID0技术的一个”组合体”. RAID10技术需要至少4块硬盘来组建, 其中先分别两两制作成RAID1磁盘阵列, 以保证数据的安全性; 然后再对两个RAID1磁盘阵列实施RAID0技术, 进一步提高硬盘设备的读写速度.<br><img src="/post/df41aea9/RAID10.png" alt="RAID10"></p><h2 id="部署磁盘阵列"><a href="#部署磁盘阵列" class="headerlink" title="部署磁盘阵列"></a>部署磁盘阵列</h2><p>mdadm命令用于管理Linux系统中的软件RAID硬盘阵列,<br>格式为<code>mdadm [模式] &lt;RAID设备名称&gt; [选项] [成员设备名称]</code>.</p><pre> mdadm [模式] &lt;RAID设备名称&gt; [选项] [成员设备名称] |__ -a --向RAID设备中添加一个成员 |__ -n --指定设备数量 |__ -l --指定RAID级别 |__ -C --创建 |__ -v --显示过程 |__ -f --模拟设备损坏 |__ -r --移除设备 |__ -Q --查看摘要信息 |__ -D --查看详细信息 |__ -S --停止RAID磁盘阵列 |__ -x --指定初始RAID设备的备用成员的数量</pre><p>在虚拟机中添加4块硬盘设备来制作一个RAID 10磁盘阵列<br>第一步: <code>mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde</code><br>第二步: <code>mkfs.ext4 /dev/md0</code><br>第三步: <code>mkdir /RAID</code>&nbsp;&nbsp;<code>mount /dev/md0 /RAID</code><br>第四步: <code>echo "/dev/md0 /RAID ext4 defaults 0 0" >> /etc/fstab</code></p><h2 id="损坏磁盘阵列及修复"><a href="#损坏磁盘阵列及修复" class="headerlink" title="损坏磁盘阵列及修复"></a>损坏磁盘阵列及修复</h2><p>在确认有一块物理硬盘设备出现损坏而不能继续正常使用后, 应该使用mdadm命令将其移除, 然后查看RAID磁盘阵列的状态, 可以发现状态已经改变.<br>在RAID 10级别的磁盘阵列中, 当RAID 1磁盘阵列中存在一个故障盘时并不影响RAID 10磁盘阵列的使用. 当购买了新的硬盘设备后再使用mdadm命令来予以替换即可, 在此期间我们可以在/RAID目录中正常地创建或删除文件.</p><pre> mdadm /dev/md0 -f /dev/sdb umount /RAID mdadm /dev/md0 -a /dev/sdb</pre><h2 id="磁盘阵列-备份盘"><a href="#磁盘阵列-备份盘" class="headerlink" title="磁盘阵列 + 备份盘"></a>磁盘阵列 + 备份盘</h2><p>RAID备份盘技术核心理念就是准备一块足够大的硬盘, 这块硬盘平时处于闲置状态, 一旦RAID磁盘阵列中有硬盘出现故障后则会马上自动顶替上去.</p><pre> mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde mkfs.ext4 /dev/md0 echo "/dev/md0 /RAID ext4 defaults 0 0" >> /etc/fstab mkdir /RAID mount -a</pre><h1 id="LVM逻辑卷管理器"><a href="#LVM逻辑卷管理器" class="headerlink" title="LVM逻辑卷管理器"></a>LVM逻辑卷管理器</h1><p>逻辑卷管理器是Linux系统用于对硬盘分区进行管理的一种机制<br>LVM的核心理念:物理卷处于LVM中的最底层, 可以将其理解为物理硬盘、硬盘分区或者RAID磁盘阵列, 这都可以. 卷组建立在物理卷之上, 一个卷组可以包含多个物理卷, 而且在卷组创建之后也可以继续向其中添加新的物理卷. 逻辑卷是用卷组中空闲的资源建立的, 并且逻辑卷在建立后可以动态地扩展或缩小空间.</p><h2 id="部署逻辑卷"><a href="#部署逻辑卷" class="headerlink" title="部署逻辑卷"></a>部署逻辑卷</h2><table style="text-align:center;"><tr><td>功能/命令</td><td>物理卷管理</td><td>卷组管理</td><td>逻辑卷管理</td></tr><tr><td>扫描</td><td>pvscan</td><td>vgscan</td><td>lvscan</td></tr><tr><td>建立</td><td>pvcreate</td><td>vgcreate</td><td>lvcreate</td></tr><tr><td>显示</td><td>pvdisplay</td><td>vgdisplay</td><td>lvdisplay</td></tr><tr><td>删除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>扩展</td><td></td><td>vgextend</td><td>lvextend</td></tr><tr><td>缩小</td><td></td><td>vgreduce</td><td>lvreduce</td></tr></table><p>让新添加的两块硬盘设备支持LVM技术<br>第一步:<code>pvcreate /dev/sdb /dev/sdc</code></p><p>把两块硬盘设备加入到storage卷组中, 然后查看卷组的状态.<br>第二步:<code>vgcreate storage /dev/sdb /dev/sdc</code>&nbsp;&nbsp;<code>vgdisplay</code></p><p>切割出一个约为150MB的逻辑卷设备, 以容量为单位, 所使用的参数为-l.<br>第三步:<code>lvcreate -n vo -l 37 storage</code>&nbsp;&nbsp;<code>lvdisplay</code></p><p>把生成好的逻辑卷进行格式化, 然后挂载使用.<br>第四步:<code>mkfs.ext4 /dev/storage/vo</code>&nbsp;&nbsp;<code>mkdir /linuxprobe</code><br><code>mount /dev/storage/vo /linuxprobe</code></p><p>查看挂载状态, 并写入到配置文件, 使其永久生效.<br>第五步:<code>df -h</code>&nbsp;&nbsp;<code>echo "/dev/storage/vo /linuxprobe ext4 defaults 0 0" >> /etc/fstab</code></p><h2 id="扩容逻辑卷"><a href="#扩容逻辑卷" class="headerlink" title="扩容逻辑卷"></a>扩容逻辑卷</h2><p>扩展前要先卸载设备和挂载点的关联<br><code>umount /linuxprobe</code></p><p>把逻辑卷vo扩展至290MB<br>第一步:<code>lvextend -L 290M /dev/storage/vo</code></p><p>检查硬盘完整性, 并重置硬盘容量.<br>第二步:<code>e2fsck -f /dev/storage/vo</code>&nbsp;&nbsp;<code>resize2fs /dev/storage/vo</code></p><p>重新挂载硬盘设备并查看挂载状态<br>第三步:<code>mount -a</code>&nbsp;&nbsp;<code>df -h</code></p><h2 id="缩小逻辑卷"><a href="#缩小逻辑卷" class="headerlink" title="缩小逻辑卷"></a>缩小逻辑卷</h2><p>一定要提前备份好数据. 另外Linux系统规定, 在对LVM逻辑卷进行缩容操作之前, 要先检查文件系统的完整性. 在执行缩容操作前记得先把文件系统卸载掉.<br><code>umount /linuxprobe</code></p><p>检查文件系统的完整性<br>第一步:<code>e2fsck -f /dev/storage/vo</code></p><p>把逻辑卷vo的容量减小到120MB.<br>第二步:<code>resize2fs /dev/storage/vo 120M</code>&nbsp;&nbsp;<code>lvreduce -L 120M /dev/storage/vo</code></p><p>重新挂载文件系统并查看系统状态<br>第三步:<code>mount -a</code>&nbsp;&nbsp;<code>df -h</code></p><h2 id="逻辑卷快照"><a href="#逻辑卷快照" class="headerlink" title="逻辑卷快照"></a>逻辑卷快照</h2><p>LVM还具备有”快照卷”功能, 该功能类似于虚拟机软件的还原时间点功能.<br>LVM的快照卷功能有两个特点:</p><pre>快照卷的容量必须等同于逻辑卷的容量快照卷仅一次有效, 一旦执行还原操作后则会被立即自动删除.</pre><p>首先查看卷组的信息, 用重定向往逻辑卷设备所挂载的目录中写入一个文件.<br><code>vgdisplay</code><br><code>echo "Welcome to Linuxprobe.com" > /linuxprobe/readme.txt</code></p><p>使用-s参数生成一个快照卷, 使用-L参数指定切割的大小.<br>第一步:<code>lvcreate -L 120M -s -n SNAP /dev/storage/vo</code>&nbsp;&nbsp;<code>lvdisplay</code></p><p>在逻辑卷所挂载的目录中创建一个100MB的垃圾文件, 然后再查看快照卷的状态.<br>第二步:<code>dd if=/dev/zero of=/linuxprobe/files count=1 bs=100M</code>&nbsp;&nbsp;<code>lvdisplay</code></p><p>对逻辑卷进行快照还原操作, 在此之前先卸载掉逻辑卷设备与目录的挂载.<br>第三步:<code>umount /linuxprobe</code>&nbsp;&nbsp;<code>lvconvert --merge /dev/storage/SNAP</code></p><p>进行挂载和查看当前的状态<br>第四步:<code>mount -a</code>&nbsp;&nbsp;<code>ls /linuxprobe/</code></p><h2 id="删除逻辑卷"><a href="#删除逻辑卷" class="headerlink" title="删除逻辑卷"></a>删除逻辑卷</h2><p>当生产环境中想要重新部署LVM或者不再需要使用LVM时, 则需要执行LVM的删除操作.<br>依次删除逻辑卷、卷组、物理卷设备, 这个顺序不可颠倒.</p><p>取消逻辑卷与目录的挂载关联, 删除配置文件中永久生效的设备参数.<br>第一步:<code>umount /linuxprobe</code>&nbsp;&nbsp;<code>vim /etc/fstab</code></p><p>删除逻辑卷设备, 需要输入y来确认操作.<br>第二步:<code>lvremove /dev/storage/vo</code></p><p>删除卷组, 此处只写卷组名称即可, 不需要设备的绝对路径.<br>第三步:<code>vgremove storage</code></p><p>删除物理卷设备<br>第四步:<code>pvremove /dev/sdb /dev/sdc</code></p><h1 id="Iptables与Firewalld防火墙"><a href="#Iptables与Firewalld防火墙" class="headerlink" title="Iptables与Firewalld防火墙"></a>Iptables与Firewalld防火墙</h1><p>保障数据的安全性是继保障数据的可用性之后最为重要的一项工作. 防火墙作为公网与内网之间的保护屏障, 在保障数据的安全性方面起着至关重要的作用.</p><p>Linux的防火墙体系主要工作在网络层, 针对TCP/IP数据包实施过滤和限制, 属于典型的包过滤防火墙(或称为网络层防火墙). Linux系统的防火墙体系基于内核编码实现, 具有非常稳定的性能和极高的效率.</p><table>netfilter和iptables的主要区别<tr><td>netilter</td><td>指的是Linux内核中实现包过滤防火墙的内部结构, 不以程序或文件的形式存在, 属于"内核态"(Kernel Space, 又称为内核空间)的防火墙功能体系.</td></tr><tr><td>iptables</td><td>指的是用来管理Linux防火墙的命令程序, 通常位于/sbin/iptables目录下, 属于"用户态(User Space, 又称为用户空间)的防火墙管理体系.</td></tr></table><h2 id="防火墙管理工具"><a href="#防火墙管理工具" class="headerlink" title="防火墙管理工具"></a>防火墙管理工具</h2><p>主要功能都是依据策略对穿越防火墙自身的流量进行过滤. 防火墙策略可以基于流量的源目地址、端口号、协议、应用等信息来定制, 然后防火墙使用预先定制的策略规则监控出入的流量, 若流量与某一条策略规则相匹配, 则执行相应的处理, 反之则丢弃.</p><p>iptables与firewalld都不是真正的防火墙, 它们都只是用来定义防火墙策略的防火墙管理工具而已, 或者说, 它们只是一种服务. iptables服务会把配置好的防火墙策略交由内核层面的netfilter网络过滤器来处理, 而firewalld服务则是把配置好的防火墙策略交由内核层面的nftables包过滤框架来处理.</p><h2 id="Iptables"><a href="#Iptables" class="headerlink" title="Iptables"></a>Iptables</h2><p>在早期的Linux系统中, 默认使用的是iptables防火墙管理服务来配置防火墙. 尽管新型的firewalld防火墙管理服务已经被投入使用多年, 但是大量的企业在生产环境中依然出于各种原因而继续使用iptables.</p><h3 id="策略与规则链"><a href="#策略与规则链" class="headerlink" title="策略与规则链"></a>策略与规则链</h3><p>防火墙会从上至下的顺序来读取配置的策略规则, 在找到匹配项后就立即结束匹配工作并去执行匹配项中定义的行为(即放行或阻止). 如果在读取完所有的策略规则之后没有匹配项, 就去执行默认的策略.</p><p>一般而言, 防火墙策略规则的设置有两种:一种是”通”(即放行), 一种是”堵”(即阻止).</p><p>iptables服务把用于处理或过滤流量的策略条目称之为规则, 多条规则可以组成一个规则链, 而规则链则依据数据包处理位置的不同进行分类:</p><pre> 在进行路由选择前处理数据包(PREROUTING) 处理流入的数据包(INPUT) 处理转发的数据包(FORWARD) 处理流出的数据包(OUTPUT) 在进行路由选择后处理数据包(POSTROUTING)</pre><table style="text-align:center">应用顺序为:raw -> mangle -> nat -> filter<tr><td>规则表名</td><td>作用</td><td>内核模块</td><td>规则链</td></tr><tr><td>filter</td><td>对数据包进行过滤,根据具体的规则要求决定如何处理一个数据包.</td><td>iptable_filter</td><td>INPUT<br>FORWARD<br>OUTPUT</td></tr><tr><td>nat</td><td>修改数据包的IP地址、端口号等信息.</td><td>iptable_nat</td><td>PREROUTING<br>POSTROUTING<br>OUTPUT</td></tr><tr><td>mangle</td><td>修改数据包的TOS(Type Of Service, 服务类型)、TTL(Time To Live, 生存周期), 或者为数据包设置Mark标记, 以实现流量整形、策略路由等高级应用.</td><td>iptable_mangle</td><td>PREROUTING<br>POSTROUTING<br>INPUT<br>OUTPUT<br>FORWARD</td></tr><tr><td>raw</td><td>决定是否对数据包进行状态跟踪</td><td>iptable_raw</td><td>OUTPUT<br>PREROUTING</td></tr></table><p>处理这些匹配流量的相应动作:</p><pre> ACCEPT(允许流量通过) REJECT(拒绝流量通过并且响应) LOG(记录日志文件) DROP(拒绝流量通过, 但不会响应.)</pre><h3 id="基本的命令参数"><a href="#基本的命令参数" class="headerlink" title="基本的命令参数"></a>基本的命令参数</h3><p>iptables是一款基于命令行的防火墙策略管理工具, iptables命令可以根据流量的源地址、目的地址、传输协议、服务类型等信息进行匹配, 一旦匹配成功, iptables就会根据策略规则所预设的动作来处理这些流量. 未指定表名时将默认使用filter表.</p><pre> iptables [-t 表名] 管理选项 [链名] [匹配条件] [-j 相应动作] |__ -P --设置默认策略 |__ -F --清空规则链 |__ -L --查看规则链 |__ -A --在规则链的末尾加入新规则 |__ -I num --在规则链的头部加入新规则 |__ -R num --修改、替换指定链中的某一条规则, 可指定规则序号或具体内容. |__ -D num --删除某一条规则 |__ -s --匹配来源地址IP/MASK, 加叹号"!"表示除这个IP外. |__ -d --匹配目标地址 |__ -i 网卡名称 --匹配从这块网卡流入的数据 |__ -o 网卡名称 --匹配从这块网卡流出的数据 |__ -p --匹配协议, 如TCP、UDP、ICMP. |__ -j --处理动作 |__ -n --使用数字形式显示输出结果 |__ -y --查看规则列表时显示详细的信息 |__ -h --查看命令帮助信息 |__ -line-numbers --查看规则列表时, 同时显示规则在链中的顺序号. |__ --dport num --匹配目标端口号 |__ --sport num --匹配来源端口号</pre><h3 id="规则的匹配条件"><a href="#规则的匹配条件" class="headerlink" title="规则的匹配条件"></a>规则的匹配条件</h3><p>在编写防火墙规则时, 匹配条件的设置起着决定性的作用.</p><h4 id="通用匹配"><a href="#通用匹配" class="headerlink" title="通用匹配"></a>通用匹配</h4><p>通用匹配也称为常规匹配, 这种匹配方式可以独立使用, 不依赖于其他条件或扩展模块. 常见的通用匹配包括协议匹配、地址匹配、网络接口匹配.</p><table>可用的协议类型存放于Linux系统的/etc/protocols文件中<tr><td>匹配名称</td><td>指定形式</td><td>作用</td></tr><tr><td>协议匹配</td><td>-p 协议名</td><td>检查数据包所使用的网络协议</td></tr><tr><td>地址匹配</td><td>-s 源地址<br>-d 目标地址</td><td>检查数据包的源地址或目标地址</td></tr><tr><td>网络接口匹配</td><td>-i 接口名<br>-o 接口名</td><td>检查数据包从防火墙的哪一个接口进入或发出, 分别对应入站网卡、出站网卡.</td></tr></table><h4 id="隐含匹配"><a href="#隐含匹配" class="headerlink" title="隐含匹配"></a>隐含匹配</h4><p>这种匹配方式要求以指定的协议匹配作为前提条件, 相当于子条件, 因此无法独立使用, 其对应的功能由iptables在需要时自动(隐含)载入内核. 常见的隐含匹配包括端口匹配、TCP标记匹配、ICMP类型匹配.</p><table><tr><td>匹配名称</td><td>指定形式</td><td>作用</td></tr><tr><td>端口匹配</td><td>--sport 源端口<br>--dport 目标端口<br>针对协议:TCP或UDP<br>范围端口:起始端口:结束端口</td><td>检查数据包的源端口或目标端口</td></tr><tr><td>ІСМР类型匹配</td><td>--icmp-type ICMP 类型(使用字符串或数字代码表示)<br>Echo-Request(代码为8)--------------请求<br>Echo-Reply(代码为0)-----------------回显<br>Destination-Unreachable(代码为3)--目标不可达<br>针对协议:ICMP</td><td>检查ICMP数据包的类型</td></tr></table><code>iptables -p icmp -h</code>命令, 列出所有支持的类型.<h4 id="显式匹配"><a href="#显式匹配" class="headerlink" title="显式匹配"></a>显式匹配</h4><p>这种匹配方式要求有额外的内核模块提供支持, 必须手动以”-m 模块名称”的形式调用相应的模块, 然后方可设置匹配条件. 添加了带显式匹配条件的规则以后, 可以执行”lsmod | grep xt_”命令查看到相关的内核扩展模块. 常见的显式匹配包括多端口匹配、IP范围匹配、MAC地址匹配、状态匹配.</p><table>常见的连接状态:NEW(与任何连接无关的)、BI(响应请求或者已建立连接的)和RELATED(与已有连接有相关性的, 如FTP数据连接).<tr><td>匹配名称</td><td>指定形式</td><td>作用</td></tr><tr><td>多端口匹配</td><td>-m multiport-sports 端口列表<br>-m multport-dports 端口列表</td><td>检查数据包的源端口、目标端口, 多个端口之间以逗号进行分隔</td></tr><tr><td>IP范围匹配</td><td>-m iprange --src-range IP范围<br>-m iprange --dst-range IP范围</td><td>检查数据包的源地址、目标地址, 其中IP范围采用"起始地址 - 结束地址"的形式表示.</td></tr><tr><td>МAC地址匹配</td><td>-m mac --mac-source MAC地址</td><td>检查数据包的源MAC地址(一般只适用于内部网络)</td></tr><tr><td>状态匹配</td><td>-m state --state 连接状态</td><td>基于iptables的状态跟踪机制用来检查数据包的连接状态(State)</td></tr></table><blockquote><p>iptables命令实例<br> 查看已有的防火墙规则链:<br> <code>iptables -L</code><br><br> 清空已有的防火墙规则链:<br> <code>iptables -F</code><br><br> 设置INPUT规则链的默认策略为拒绝:<br> <code>iptables -P INPUT DROP</code><br><br> 向INPUT规则链中添加允许ICMP流量进入的策略规则:<br> <code>iptables -I INPUT -p icmp -j ACCEPT</code><br><br> 向INPUT规则链中添加拒绝ICMP流量进入的策略规则:<br> <code>iptables -I INPUT -p icmp -j REJECT</code><br><br> 删除INPUT规则链中刚刚加入的那条策略, 并把默认策略设置为允许:<br> <code>iptables -D INPUT 1</code>&nbsp;&nbsp;<code>iptables -P INPUT ACCEPT</code><br><br> 将INPUT规则链设置为只允许指定网段的主机访问本机的22端口, 拒绝来自其他所有主机的流量:<br> <code>iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT</code><br> <code>iptables -A INPUT -p tcp --dport 22 -j REJECT</code><br><br> 向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则:<br> <code>iptables -I INPUT -p tcp --dport 12345 -j REJECT</code><br> <code>iptables -I INPUT -p udp --dport 12345 -j REJECT</code><br><br> 向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口(Web服务)的策略规则:<br> <code>iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT</code><br><br> 向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则:<br> <code>iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT</code><br> <code>iptables -A INPUT -p udp --dport 1000:1024 -j REJECT</code><br><br> 注:使用iptables命令配置的防火墙规则默认会在系统下一次重启时失效, 如果想让配置的防火墙策略永久生效, 需要执行保存命令:<br> <code>service iptables save</code></p></blockquote><h3 id="规则的导出、导入"><a href="#规则的导出、导入" class="headerlink" title="规则的导出、导入"></a>规则的导出、导入</h3><p>在Linux系统中, iptables为我们提供了批量备份与恢复规则的命令, 也提供了标准的系统服务以便开启、关闭防火墙功能.</p><h4 id="规则的备份及还原"><a href="#规则的备份及还原" class="headerlink" title="规则的备份及还原"></a>规则的备份及还原</h4><p>防火墙规则的批量备份、还原用到两个命令, 即iptables-save和iptables-restore, 分别用来保存(Save)和恢复(Restore).</p><p>iptables-save命令用来批量导出Linux防火墙规则. 直接执行iptables-save命令时, 将显示出当前启用的所有规则.</p><p>以”#”号开头的内容表示注释<br>“*表名”表示所在的表<br>“: 链名 默认策略”表示相应的链及默认策略<br>具体的规则部分省略了命令名”iptables”<br>后面的”COMMIT”表示提交前面的规则设置</p><p>备份所有表的规则<br><code>iptables-save > /opt/iprules_all.txt</code></p><p>iptables-retore命令用来批量导入Linux防火墙规则, 如果已经使用iptables-save命令导出备份文件, 则恢复规则的过程在一瞬间就能完成. 与iptables-save命令相对的iptables-restore命令应结合重定向输入来指定备份文件的位置.</p><p>从备份文件恢复规则<br><code>iptables-restore < /opt/iprules_all.txt</code></p><h3 id="使用防火墙脚本"><a href="#使用防火墙脚本" class="headerlink" title="使用防火墙脚本"></a>使用防火墙脚本</h3><p>防火墙脚本的构成:定义基本变量、加载内核模块、调整/proc参数</p><h4 id="定义基本变量"><a href="#定义基本变量" class="headerlink" title="定义基本变量"></a>定义基本变量</h4><p>将防火墙的网卡、IP地址、局域网段、iptables命令的路径等定义为变量, 便于对脚本程序进行维护和移植使用.</p><h4 id="加载内核模块"><a href="#加载内核模块" class="headerlink" title="加载内核模块"></a>加载内核模块</h4><p>iptables命令的大部分模块都可以根据需要动态载入内核, 只有个别模块需要手动进行加载. 但如果需要启用的规则数量较多, 为了提高规则设置的效率, 保持防火墙的稳定性, 建议将用到的各种模快提加载到内核中.</p><h4 id="调整-proc参数"><a href="#调整-proc参数" class="headerlink" title="调整/proc参数"></a>调整/proc参数</h4><p>proc是Linux或UNIX系统中的一种伪文件系统机制, 提供了访问内核运行结构、改变内核设置的实时数据. 与EXT3, FAT32等本地文件系统不同, /proc中的数据存放在内存而不是硬盘上.<br>在文件夹/proc/sys下存放着与系统相关的一些可控参数, 可以直接用来改变内核的行为, 通常作为Linux内核调优的实时入口.<br>用echo, sysctl命令都可以修改相关参数, 当然也可以写到/etc/sysctl.conf文件(执行sysctl -p后生效).</p><h4 id="设置具体的iptables规则"><a href="#设置具体的iptables规则" class="headerlink" title="设置具体的iptables规则"></a>设置具体的iptables规则</h4><p>1.清理已有的规则<br>为了避免已有的防火墙规则造成干扰, 通常会预先安排一个”清理”操作, 删除所有表中用户自定义的链, 清空所有链内的规则.</p><pre> 删除各表中自定义的链 $TPT -t filter -X $IPT -t nat -X $IPT -t mangle -x $IPT -t raw -X 清空各表中已有的规则 $IPT -t filter -F $IPT  t nat -F $IPT -t mangle -F $IPT -t raw -F</pre><p>2.设置规则链的默认策略<br>在实际生产环境中, 防火墙过滤规则建议采取”默认拒绝”的策略, 可以获得更好的安全性.</p><pre> $IPT -P INPUT DROP $IPT -P FORWARD DROP $IPT -P OUTPUT ACCEPT</pre><p>3.设置nat表中的各种规则<br>iptables的nat表主要用在Linux网关服务器中, 一般的主机型防火墙方案很少会用到nat表. 根据实际情况编写相应的SNAT、DNAT规则(如局域网共享上网、发布内部Web服务器), 如果没有则跳过此部分.</p><p>4.设置fiter表的各种规则<br>iptables的filter表主要用来过滤数据包, 无论是Linux网关还是一般的Linux服务器都可能用到. 主机型的防火墙主要使用INPUT, OUTPUT链, 而对于网络型的防火墙主要使用FORWARD链.</p><h2 id="防火墙脚本示例"><a href="#防火墙脚本示例" class="headerlink" title="防火墙脚本示例"></a>防火墙脚本示例</h2><pre> vim /opt/myipfw.hostonly <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#1.定义基本变量</span></span><br><span class="line"><span class="attribute">IPT</span>=<span class="string">"/sbin/iptables"</span> # iptables命令的路径</span><br><span class="line"><span class="attribute">CTL</span>=<span class="string">"/sbin/sysctl"</span> # sysctl命令的路径</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.调整/proc参数</span></span><br><span class="line"><span class="variable">$CTL</span> -w net.ipv4.<span class="attribute">tcp_syncookies</span>=1 # 启用SYN Cookie机制</span><br><span class="line"><span class="variable">$CTL</span> -w net.ipv4.<span class="attribute">tcp_syn_retries</span>=3 # 最大SYN请求重试次数</span><br><span class="line"><span class="variable">$CTL</span> -w net.ipv4.<span class="attribute">tcp_synack_retries</span>=3 # 最大ACK确认重试次数</span><br><span class="line"><span class="variable">$CTL</span> -w net.ipv4.<span class="attribute">tcp_fin_timeout</span>=60 # TCP连接等待超时</span><br><span class="line"><span class="variable">$CTL</span> -w net.ipv4.<span class="attribute">tcp_max_syn_backlog</span>=3200 # SYN请求的队列长度</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.设置具体的防火墙规则</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.1 删除自定义链、清空已有规则</span></span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> filter </span>-X </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> nat </span>-X </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> mangle </span>-X </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> raw </span>-X </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> filter </span>-F </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> nat </span>-F  </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> mangle </span>-F </span><br><span class="line"><span class="variable">$IPT</span> -t<span class="built_in"> raw </span>-F</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.2 定义默认策略</span></span><br><span class="line"><span class="variable">$IPT</span> -P INPUT DROP</span><br><span class="line"><span class="variable">$IPT</span> -P FORWARD DROP</span><br><span class="line"><span class="variable">$IPT</span> -P OUTPUT ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.3 设置filter表中的各种规则</span></span><br><span class="line"><span class="variable">$IPT</span> -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line"><span class="variable">$IPT</span> -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br></pre></td></tr></table></figure> chmod +x /opt/myipfw.hostonly</pre><h2 id="Firewalld"><a href="#Firewalld" class="headerlink" title="Firewalld"></a>Firewalld</h2><p>RHEL 7系统中集成了多款防火墙管理工具, 其中firewalld(Dynamic Firewall Manager of Linux systems, Linux系统的动态防火墙管理器)服务是默认的防火墙配置管理工具, 它拥有基于CLI(命令行界面)和基于GUI(图形用户界面)的两种管理方式.</p><p>firewalld支持动态更新技术并加入了区域(zone)的概念. 简单来说, 区域就是firewalld预先准备了几套防火墙策略集合(策略模板), 用户可以根据生产场景的不同而选择合适的策略集合, 从而实现防火墙策略之间的快速切换.</p><p>配置文件<br><code>/usr/lib/firewalld/</code><br>/usr/lib/firewalld/zones:被用于默认和备用配置</p><p><code>/etc/firewalld/</code><br>/etc/firewalld/zones:被用于用户创建和自定义配置文件</p><table style="text-align:center;"><tr><td>区域</td><td>默认规则策略</td></tr><tr><td>*trusted</td><td>允许所有的数据包</td></tr><tr><td>home</td><td>拒绝流入的流量, 除非与流出的流量相关; 而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关, 则允许流量.</td></tr><tr><td>internal</td><td>等同于home区域</td></tr><tr><td>work</td><td>拒绝流入的流量, 除非与流出的流量相关; 而如果流量与ssh、ipp-client与dhcpv6-client服务相关, 则允许流量.</td></tr><tr><td>*public</td><td>拒绝流入的流量, 除非与流出的流量相关; 而如果流量与ssh、dhcpv6-client服务相关, 则允许流量.</td></tr><tr><td>external</td><td>拒绝流入的流量, 除非与流出的流量相关; 而如果流量与ssh服务相关, 则允许流量. 默认将经过此区域转发的IPv4地址传出流量进行地址伪装.</td></tr><tr><td>dmz</td><td>拒绝流入的流量, 除非与流出的流量相关; 而如果流量与ssh服务相关, 则允许流量.</td></tr><tr><td>block</td><td>拒绝流入的流量, 除非与流出的流量相关.</td></tr><tr><td>*drop</td><td>丢弃流入的流量, 除非与流出的流量相关.</td></tr></table><h3 id="Firewalld数据处理流程"><a href="#Firewalld数据处理流程" class="headerlink" title="Firewalld数据处理流程"></a>Firewalld数据处理流程</h3><p>检查数据来源的源地址<br>1.若源地址关联到特定的区域, 则执行该区域所指定的规则.<br>2.若源地址未关联到特定的区域, 则使用传入网络接口的区域并执行该区域所指定的规则.<br>3.若网络接口未关联到特定的区域, 则使用默认区域并执行该区域所指定的规则.</p><h3 id="Firewalld防火墙的配置"><a href="#Firewalld防火墙的配置" class="headerlink" title="Firewalld防火墙的配置"></a>Firewalld防火墙的配置</h3><h4 id="运行时配置"><a href="#运行时配置" class="headerlink" title="运行时配置"></a>运行时配置</h4><p>实时生效, 并持续至Firewalld重新启动或重新加载配置.<br>不中断现有连接<br>不能修改服务配置</p><h4 id="永久配置"><a href="#永久配置" class="headerlink" title="永久配置"></a>永久配置</h4><p>不立即生效, 除非Firewalld重新启动或重新加载配置.<br>中断现有连接<br>可以修改服务配置</p><h3 id="终端管理工具"><a href="#终端管理工具" class="headerlink" title="终端管理工具"></a>终端管理工具</h3><h4 id="防火墙进程操作"><a href="#防火墙进程操作" class="headerlink" title="防火墙进程操作"></a>防火墙进程操作</h4><pre> systemctl start firewalld systemctl stop firewalld systemctl restart firewalld systemctl status firewalld</pre><h4 id="防火墙管理操作"><a href="#防火墙管理操作" class="headerlink" title="防火墙管理操作"></a>防火墙管理操作</h4><p>firewall-cmd是firewalld防火墙配置管理工具的CLI(命令行界面)版本, 它的参数一般都是以”长格式”来提供的.</p><table><tr><td>参数</td><td>作用</td></tr><tr><td>--zone=&lt;区域名称></td><td>指定区域</td></tr><tr><td>--get-default-zone</td><td>查询默认的区域名称</td></tr><tr><td>--set-default-zone=&lt;区域名称></td><td>设置默认的区域, 使其永久生效.</td></tr><tr><td>--get-zones</td><td>显示预定义的区域</td></tr><tr><td>--get-services</td><td>显示预定义的服务</td></tr><tr><td>--get-active-zones</td><td>显示当前正在使用的区域与网卡名称</td></tr><tr><td>--add-source=</td><td>将源自此IP或子网的流量导向指定的区域</td></tr><tr><td>--remove-source=</td><td>不再将源自此IP或子网的流量导向某个指定区域</td></tr><tr><td>--add-interface=&lt;网卡名称&gt;</td><td>将源自该网卡的所有流量都导向某个指定区域</td></tr><tr><td>--change-interface=&lt;网卡名称&gt;</td><td>将某个网卡与区域进行关联</td></tr><tr><td>--remove-interface=&lt;网卡名称&gt;</td><td>将某个网卡从指定区域中移除</td></tr><tr><td>--query-interface=&lt;网卡名称&gt;</td><td>在默认区域中查询是否包含该网卡</td></tr><tr><td>--get-zone-of-interface=&lt;网卡名称&gt;</td><td>显示指定网卡绑定的区域</td></tr><tr><td>--list-all</td><td>显示当前区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>--list-all-zones</td><td>显示所有区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>--list-services</td><td>显示默认区域内允许访问的所有服务</td></tr><tr><td>--add-service=&lt;服务名&gt;</td><td>设置默认区域允许该服务的流量</td></tr><tr><td>--remove-service=&lt;服务名&gt;</td><td>设置默认区域不再允许该服务的流量</td></tr><tr><td>--query-service=&lt;服务名&gt;</td><td>查询默认区域中是否启用了该服务</td></tr><tr><td>--list-ports</td><td>显示默认区域内允许访问的所有端口号</td></tr><tr><td>--add-port=&lt;端口号/协议&gt;</td><td>设置默认区域允许该端口的流量</td></tr><tr><td>--remove-port=&lt;端口号/协议&gt;</td><td>设置默认区域不再允许该端口的流量</td></tr><tr><td>--query-port=&lt;端口号/协议&gt;</td><td>查询默认区域中是否启用了该端口和协议</td></tr><tr><td>--list-icmp-blocks</td><td>显示默认区域内阻塞的所有ICMP类型</td></tr><tr><td>--add-icmp-block=echo-reply</td><td>为默认区域设置阻塞echo-reply类型的ICMP</td></tr><tr><td>--remove-icmp-block=echo-reply</td><td>删除默认区域已阻塞的echo-reply类型的ICMP</td></tr><tr><td>--query-icmp-block=echo-request</td><td>查询默认区域的echo-request类型的ICMP是否阻塞</td></tr><tr><td>--query-icmp-block=echo-request</td><td>查询默认区域的echo-request类型的ICMP是否阻塞</td></tr><tr><td>--get-icmptypes</td><td>显示预定义的icmp类型</td></tr><tr><td>--reload</td><td>让"永久生效"的配置规则立即生效, 并覆盖当前的配置规则.</td></tr><tr><td>--panic-on</td><td>开启应急状况模式</td></tr><tr><td>--panic-off</td><td>关闭应急状况模式</td></tr></table><br><h4 id="防火墙状态查询"><a href="#防火墙状态查询" class="headerlink" title="防火墙状态查询"></a>防火墙状态查询</h4><pre> systemctl status firewalld firewall-cmd --state</pre><h4 id="防火墙重载配置"><a href="#防火墙重载配置" class="headerlink" title="防火墙重载配置"></a>防火墙重载配置</h4><pre> firewall-cmd --reload # 状态信息将会丢失, 多用于处理防火墙出现问题时. firewall-cmd --complete-reload systemctl restart firewalld</pre><h4 id="区域管理"><a href="#区域管理" class="headerlink" title="区域管理"></a>区域管理</h4><p>查看默认区域<br><code>firewall-cmd --get-default-zone</code></p><p>列出当前正在使用的区域及其所对应的网卡接口<br><code>firewall-cmd --get-active-zone</code></p><p>列出所有可用的区域<br><code>firewall-cmd --get-zones</code></p><p>设置默认区域<br><code>firewall-cmd --set-default-zone=home</code></p><h4 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h4><p>查看预定义服务<br><code>firewall-cmd --get-service</code></p><p>添加httpd服务到public区域<br><code>firewall-cmd --add-service=http --zone=public --permanent</code><br><code>firewall-cmd --reload</code></p><p>查看public区域已配置规则<br><code>firewall-cmd --list-all --zone=public</code></p><p>移除public区域的httpd服务, 不使用–zone指定区域时使用默认区域.<br><code>firewall-cmd --remove-service=http --permanent</code><br><code>firewall-cmd --reload</code></p><p>也可以同时添加多个服务到某一区域, 如果不添加-permanent选项表示是即时生效的临时设置.<br><code>firewall-cmd --add-service=http --add-service=https</code></p><h4 id="端口管理"><a href="#端口管理" class="headerlink" title="端口管理"></a>端口管理</h4><p>允许TCP的3306端口到public区域<br><code>firewall-cmd --add-port=3306/tcp --permanent</code><br><code>firewall-cmd --reload</code><br><code>firewall-cmd --list-all</code></p><p>从public区域将TCP的3306端口移除<br><code>firewall-cmd --remove-port=3306/tcp --permanent</code><br><code>firewall-cmd --reload</code></p><p>允许某一范围的端口<br><code>firewall-cmd --add-port=2048-2050/udp --permanent</code><br><code>firewall-cmd --reload</code></p><p>使用–list-ports查看加入的端口操作是否成功<br><code>firewall-cmd --list-ports</code></p><h4 id="配置实例"><a href="#配置实例" class="headerlink" title="配置实例"></a>配置实例</h4><p>将默认区域设置为dmz区域, 来自网络192.168.46.0/24的流量全部分配给internal区域, 并且打开internal区域的80端口供用户访问.<br><code>firewall-cmd --set-default-zone=dmz</code><br><code>firewall-cmd --add-source=192.168.46.0/24 --zone=internal --permanent</code><br><code>firewall-cmd --add-service=http --zone=internal --permanent</code><br><code>firewall-cmd --reload</code></p><p>使用firewalld配置的防火墙策略默认为运行时(Runtime)模式, 又称为当前生效模式, 而且随着系统的重启会失效.<br>想让配置策略一直存在, 就需要使用永久(Permanent)模式, 方法就是在用firewall-cmd命令正常设置防火墙策略时添加–permanent参数, 但是使用永久生效模式设置的策略只有在系统重启之后才能自动生效. 如果想让配置的策略立即生效, 需要手动执行<code>firewall-cmd --reload</code>命令.</p><blockquote><p>firewalld命令实例<br> 查看firewalld服务当前所使用的区域:<br> <code>firewall-cmd --get-default-zone</code><br><br> 查询eno16777728网卡在firewalld服务中的区域:<br> <code>firewall-cmd --get-zone-of-interface=eno16777728</code><br><br> 把firewalld服务中eno16777728网卡的默认区域修改为external, 并在系统重启后生效. 分别查看当前与永久模式下的区域名称:<br> <code>firewall-cmd --permanent --zone=external --change-interface=eno16777728</code><br> <code>firewall-cmd --get-zone-of-interface=eno16777728</code><br> <code>firewall-cmd --permanent --get-zone-of-interface=eno16777728</code><br><br> 把firwalld服务的当前默认区域设置为public:<br> <code>firewall-cmd --set-default-zone=public</code><br><br> 启动/关闭firewalld防火墙服务的应急状况模式, 阻断一切网络连接(当远程控制服务器时请慎用):<br> <code>firewall-cmd --panic-on</code><br> <code>firewall-cmd --panic-off</code><br><br> 查询public区域是否允许请求SSH和HTTPS协议的流量:<br> <code>firewall-cmd --zone=public --query-service=ssh</code><br> <code>firewall-cmd --zone=public --query-service=https</code><br><br> 把firewalld服务中请求HTTPS协议的流量设置为永久允许, 并立即生效:<br> <code>firewall-cmd --zone=public --add-service=https</code><br> <code>firewall-cmd --permanent --zone=public --add-service=https</code><br> <code>firewall-cmd --reload</code><br><br> 把firewalld服务中请求HTTP协议的流量设置为永久拒绝, 并立即生效:<br> <code>firewall-cmd --permanent --zone=public --remove-service=http</code><br> <code>firewall-cmd --reload</code><br><br> 把在firewalld服务中访问8080和8081端口的流量策略设置为允许, 但仅限当前生效:<br> <code>firewall-cmd --zone=public --add-port=8080-8081/tcp</code><br><br> 把原本访问本机888端口的流量转发到22端口, 要且求当前和长期均有效:<br> <pre>firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10<br> 流量转发命令格式:<br>  firewall-cmd --permanent --zone=<区域><br>  --add-forward-port=<br>                     port=<源端口号>:<br>                     proto=<协议>:<br>                     toport=<目标端口号>:<br>                     toaddr=<目标IP地址><br> </目标IP地址></目标端口号></协议></源端口号></区域></pre><br> 在客户端使用ssh命令尝试访问192.168.10.10主机的888端口:<br> <code>ssh -p 888 192.168.10.10</code></p></blockquote><p>irewalld中的富规则表示更细致、更详细的防火墙策略配置, 它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置. 它的优先级在所有的防火墙策略中也是最高的.<br>例:拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务(22端口)</p><pre> firewall-cmd --permanent --zone=public --add-rich-rule="rule family="ipv4" source address="192.168.10.0/24" service name="ssh" reject" firewall-cmd --reload ssh 192.168.10.10</pre><h3 id="图形管理工具"><a href="#图形管理工具" class="headerlink" title="图形管理工具"></a>图形管理工具</h3><p>firewall-config是firewalld防火墙配置管理工具的GUI(图形用户界面)版本, 几乎可以实现所有以命令行来执行的操作. 打开firewall-config的命令:<code>firewall-config</code><br><img src="/post/df41aea9/firewall-config%E7%95%8C%E9%9D%A2.png" alt="firewall-config界面"></p><table><tr><td>1</td><td>选择运行时(Runtime)模式或永久(Permanent)模式的配置</td></tr><tr><td>2</td><td>可选的策略集合区域列表</td></tr><tr><td>3</td><td>常用的系统服务列表</td></tr><tr><td>4</td><td>当前正在使用的区域</td></tr><tr><td>5</td><td>管理当前被选中区域中的服务</td></tr><tr><td>6</td><td>管理当前被选中区域中的端口</td></tr><tr><td>7</td><td>开启或关闭SNAT(源地址转换协议)技术</td></tr><tr><td>8</td><td>设置端口转发策略</td></tr><tr><td>9</td><td>控制请求icmp服务的流量</td></tr><tr><td>10</td><td>管理防火墙的富规则</td></tr><tr><td>11</td><td>管理网卡设备</td></tr><tr><td>12</td><td>被选中区域的服务, 若勾选了相应服务前面的复选框, 则表示允许与之相关的流量.</td></tr><tr><td>13</td><td>firewall-config工具的运行状态</td></tr></table><p>将当前区域中请求http服务的流量设置为允许, 但仅限当前生效.<br><img src="/%E5%85%81%E8%AE%B8%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AEhttp%E6%9C%8D%E5%8A%A1.png" alt="允许其他主机访问http服务"></p><p>添加一条防火墙策略规则, 使其放行访问8080～8088端口(TCP协议)的流量, 并将其设置为永久生效, 以达到系统重启后防火墙策略依然生效的目的.<br><img src="/post/df41aea9/%E5%85%81%E8%AE%B8%E5%85%B6%E4%BB%96%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE8080-8088%E7%AB%AF%E5%8F%A3.png" alt="允许其他主机访问8080-8088端口"></p><p>在Options菜单中单击Reload Firewalld命令, 让配置的防火墙策略立即生效. 这与在命令行中执行–reload参数的效果一样.<br><img src="/post/df41aea9/%E9%87%8D%E5%90%AF%E5%90%8E%E4%BE%9D%E7%84%B6%E6%9C%89%E6%95%88.png" alt="重启后依然有效"></p><p>选中Masquerade zone复选框, 就自动开启了SNAT技术.<br><img src="/post/df41aea9/%E5%BC%80%E5%90%AF%E4%BC%AA%E8%A3%85%E5%8A%9F%E8%83%BD.png" alt="开启伪装功能"></p><p>使用firewall-cmd来配置防火墙策略规则, 将本机888端口的流量转发到22端口, 且要求当前和长期均有效.<br><img src="/post/df41aea9/%E5%B0%86%E5%90%91%E6%9C%AC%E6%9C%BA888%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91%E8%87%B3%E6%9C%AC%E6%9C%BA%E7%9A%8422%E7%AB%AF%E5%8F%A3.png" alt="将向本机888端口的请求转发至本机的22端口"><br><img src="/post/df41aea9/reload%E7%AB%8B%E5%8D%B3%E7%94%9F%E6%95%88.png" alt="reload立即生效"></p><p>配置富规则, 让192.168.10.20主机访问到本机的1234端口号.<br><img src="/post/df41aea9/%E4%BB%85%E5%85%81%E8%AE%B8192.168.10.20%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%AC%E6%9C%BA%E7%9A%841234%E7%AB%AF%E5%8F%A3.png" alt="仅允许192.168.10.20主机访问本机的1234端口"></p><p>如果生产环境中的服务器有多块网卡在同时提供服务(这种情况很常见), 则对内网和对外网提供服务的网卡要选择的防火墙策略区域也是不一样的. 也就是说, 可以把网卡与防火墙策略区域进行绑定. 配置防火墙策略的原则—只要能实现所需的功能, 用什么工具请随君便.<br><img src="/post/df41aea9/%E6%9F%A5%E7%9C%8B%E7%BD%91%E5%8D%A1%E8%AE%BE%E5%A4%87%E4%BF%A1%E6%81%AF.png" alt="查看网卡设备信息"></p><h2 id="服务的访问控制列表"><a href="#服务的访问控制列表" class="headerlink" title="服务的访问控制列表"></a>服务的访问控制列表</h2><p>TCP Wrappers是RHEL 7系统中默认启用的一款流量监控程序, 它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作. 换句话说, Linux系统中其实有两个层面的防火墙:</p><pre> 第一种是前面讲到的基于TCP/IP协议的流量过滤工具; 而TCP Wrappers服务则是能允许或禁止Linux系统提供服务的防火墙, 从而在更高层面保护了Linux系统的安全运行.</pre><p>TCP Wrappers服务的防火墙策略由两个控制列表文件所控制, 用户可以编辑允许控制列表文件来放行对服务的请求流量, 也可以编辑拒绝控制列表文件来阻止对服务的请求流量. 控制列表文件修改后会立即生效:</p><pre> 系统将会先检查允许控制列表文件(/etc/hosts.allow), 如果匹配到相应的允许策略则放行流量;  如果没有匹配, 则去进一步匹配拒绝控制列表文件(/etc/hosts.deny), 若找到匹配项则拒绝该流量.  如果这两个文件全都没有匹配到, 则默认放行流量.</pre><table> <tr><td>客户端类型</td><td>示例</td><td>满足示例的客户端列表</td></tr> <tr><td>单一主机</td><td>192.168.10.10</td><td>IP地址为192.168.10.10的主机</td></tr> <tr><td>指定网段</td><td>192.168.10.</td><td>IP段为192.168.10.0/24的主机</td></tr> <tr><td>指定网段</td><td>192.168.10.0/255.255.255.0</td><td>IP段为192.168.10.0/24的主机</td></tr> <tr><td>指定DNS后缀</td><td>.linuxprobe.com</td><td>所有DNS后缀为.linuxprobe.com的主机</td></tr> <tr><td>指定主机名称</td><td>www.linuxprobe.com</td><td>主机名称为www.linuxprobe.com的主机</td></tr> <tr><td>指定所有客户端</td><td>ALL</td><td>所有主机全部包括在内</td></tr></table><p>在配置TCP Wrappers服务时需要遵循两个原则:</p><pre> 编写拒绝策略规则时, 填写的是服务名称, 而非协议名称; 建议先编写拒绝策略规则, 再编写允许策略规则, 以便直观地看到相应的效果.</pre><p>编写拒绝策略规则文件, 禁止访问本机sshd服务的所有流量:</p><pre> vim /etc/hosts.deny sshd:*</pre><p>在允许策略规则文件中添加一条规则, 使其放行源自192.168.10.0/24网段, 访问本机sshd服务的所有流量:</p><pre> vim /etc/hosts.allow sshd:192.168.10.</pre><h1 id="Linux下的NAT技术"><a href="#Linux下的NAT技术" class="headerlink" title="Linux下的NAT技术"></a>Linux下的NAT技术</h1><h2 id="SNAT策略及应用"><a href="#SNAT策略及应用" class="headerlink" title="SNAT策略及应用"></a>SNAT策略及应用</h2><p>SNAT(Source Network Address Translation, 源网络地址转换)是Linux防火墙的一种地址转换操作, 也是iptables命令中的一种数据包控制类型, 其作用是根据指定条件修改数据包的源IP地址.</p><h3 id="SNAT策略概述"><a href="#SNAT策略概述" class="headerlink" title="SNAT策略概述"></a>SNAT策略概述</h3><p>随着Internet网络在全世界范围内的快速发展, IPv4协议支持的可用IP地址资源逐渐变少. 通过在网关中应用SNAT策略, 可以解决局域网共享上网的问题.</p><p>SNAT技术是一种为了解决IP地址匮乏而设计的技术, 它可以使得多个内网中的用户通过同一个外网IP接入Internet.</p><p>1.只开启路由转发, 未设置地址转换的情况.<br>如果网关服务器没有应用SNAT技术, 则互联网中的网站服务器在收到PC的请求数据包, 并回送响应数据包时, 将无法在网络中找到这个私有网络的IP地址, 所以PC也就收不到响应数据包了.<br><img src="/post/df41aea9/%E6%9C%AA%E7%94%A8SNAT1.png" alt="未用SNAT1"></p><p>2.开启路由转发, 并设置SNAT转换的情况.<br>由于网关服务器应用了SNAT技术, 所以互联网中的网站服务器会将响应数据包发给网关服务器, 再由后者转发给局域网中的PC.<br><img src="/post/df41aea9/%E4%BD%BF%E7%94%A8SNAT1.png" alt="使用SNAT1"></p><h3 id="SNAT策略应用"><a href="#SNAT策略应用" class="headerlink" title="SNAT策略应用"></a>SNAT策略应用</h3><p>SNAT的典型应用是为局域网共享上网提供接入策略, 处理数据包的切入时机是在路由选择之后(POSTROUTING)进行. 关键操作是将局域网外发数据包的源IP地址(私有地址)修改为网关服务器的外网口IP地址(公有地址)</p><p>SNAT策略只能用在nat表的POSTROUTING链, 使用iptables命令编写SNA策略时, 需要结合”–to-source IP地址”选项来指定修改后的源IP地址.<br>例:<code>-j SNAT --to-source 公有ip地址</code></p><h4 id="共享固定IP地址上网"><a href="#共享固定IP地址上网" class="headerlink" title="共享固定IP地址上网"></a>共享固定IP地址上网</h4><table>环境:<tr><td>Linux网关服务器</td><td>eth0</td><td>eth1</td></tr><tr><td>网卡分别接入网</td><td>Internet</td><td>局域网</td></tr><tr><td>网卡ip地址</td><td>218.29.30.31</td><td>192.168.1.1</td></tr></table><p>第1步:Linux主机作为网关设备时, 打开网关的路由转发.<br>修改sysctl.conf配置文件, 永久打开路由转发功能.</p><pre> vim /etc/sysctl.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net.ipv4.ip_forward</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure> sysctl -p # 读取修改后的配置</pre><p>临时开启路由转发<br>①<code>echo 1 > /proc/sys/net/ipv4/ip_forward</code><br>②<code>sysctl -w net.ipv4.ip_forward=1</code></p><p>第2步:正确设置SNAT策略<br>将源地址更改为网关的公网IP地址, 若要保持SNAT策略长期有效, 应将相关命令写入到rc.local配置文件, 以便开机后自动设置.<br><code>iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j SNAT --to-source 218.29.30.31</code></p><p>第3步:测试SNAT共享接入结果<br><code>ping ip地址</code></p><h4 id="共享动态IP地址上网"><a href="#共享动态IP地址上网" class="headerlink" title="共享动态IP地址上网"></a>共享动态IP地址上网</h4><p>在某些情况下, 网关的外网IP地址可能并不是固定的. 针对这种需求, iptables命令提供了一个名为MASQUERADE(伪装)的数据包控制类型, MASQUERADE相当于SNAT的一个特例, 同样用来修改(伪装)数据包源IP地址, 且能够自动获取外网接口的IP地址.<br><code>iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o 接口名 -j MASQUERADE</code></p><h2 id="DNAT策略及应用"><a href="#DNAT策略及应用" class="headerlink" title="DNAT策略及应用"></a>DNAT策略及应用</h2><p>DNAT(Destination Network Address Translation, 目标地址转换)是Linux防火墙的另一种地址转换操作, 同样也是iptables命令中的一种数据包控制类型, 其作用是根据指定条件修改数据包的目标IP地址和目标端口.</p><h3 id="DNAT策略概述"><a href="#DNAT策略概述" class="headerlink" title="DNAT策略概述"></a>DNAT策略概述</h3><p>DNAT用来修改目标IP地址和目标端口, DNAT只能用在nat表的PREROUTING链和OUTPUT链(或被其调用的链)中.<br><img src="/post/df41aea9/%E4%BD%BF%E7%94%A8DNAT.png" alt="使用DNAT"></p><h3 id="DNAT策略应用"><a href="#DNAT策略应用" class="headerlink" title="DNAT策略应用"></a>DNAT策略应用</h3><p>DNAT的典型应用是在Internet中发布企业内部的服务器, 处理数据包的切入时机是在路由选择之前(PREROUTING)进行. 关键操作是将访问网关外网接口IP地址(公有地址)的数据包的目标地址修改为实际提供服务的内部服务器的IP地址(私有地址).</p><p>使用iptables命令设置DNAT策略时, 需要结合”–to-destination IP地址”选项来指定内部服务器的IP地址</p><h4 id="发布企业内部的Web服务器"><a href="#发布企业内部的Web服务器" class="headerlink" title="发布企业内部的Web服务器"></a>发布企业内部的Web服务器</h4><p>环境:<br>网站域名:<a href="http://www.Iyun.com" target="_blank" rel="noopener">www.Iyun.com</a>, IP地址:218.29.30.31.<br>网站服务器:局域网内, IP地址:192.168.1.6.</p><p>第1步:打开网关的路由转发</p><pre> vim /etc/sysctl.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net.ipv4.ip_forward</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure> sysctl -p</pre><p>第2步:正确设置DNAT策略<br>需要针对Internet中的任意主机访问网关80端口的数据包, 将目标地址修改为位于内网的网站服务器的IP地址.<br><code>iptables -t nat -A PREROUTING -i eth0 -d 218.29.30.31 -p tcp --dport 80 -j DNAT --to-destination 192.168.1.6<br></code></p><p>第3步:测试DNAT发布结果<br><code>网址中输入域名或IP地址</code></p><h4 id="发布企业内部的OpenSSH服务器"><a href="#发布企业内部的OpenSSH服务器" class="headerlink" title="发布企业内部的OpenSSH服务器"></a>发布企业内部的OpenSSH服务器</h4><p>大多数情况下, DNAT策略只是用来修改数据包的目标IP地址, 但在需要时也可以修改目标端口号.</p><p>网关公网IP地址:218.29.30.31, 在2345端口启用OpenSSH服务.<br>网站服务器位于局域网内IP地址:192.168.1.6, 在22端口启用OpensSH服务.</p><p>第1步:配置OpenSSH服务<br>在网关、网站服务器中均开启OpenSSH服务, 分别使用2345、22端口. 其中网关的sshd服务因直接面向Internet, 因此不使用默认端口.</p><p>第2步:打开网关的路由转发</p><pre> vim /etc/sysctl.conf <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net.ipv4.ip_forward</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure> sysctl -p</pre><p>第3步:正确设置DNAT策略<br>在网关中设置防火墙规则, 修改访问外网IP地址2346端口的数据包, 将目标地址改为192.168.1.6, 将目标端口改为22, 以便转发给网站服务器。<br><code>iptables -t nat -A PREROUTING -i eth0 -d 218.29.30.31 -p tcp --dport 2346<br>-j DNAT --to-destination 192.168.1.622<br></code></p><p>第4步:测试DNAT发布结果<br>在Internet中进行SSH登录测试</p><pre> ssh -p 2345 iyun@218.29.30.31 输入用户名密码 /sbin/ifconfig eth0 | grep "inet addr" # 确认连接结果 ssh -p 2346 iyun@218.29.30.31 输入用户名密码 /sbin/ifconfig eth0 | grep "inet addr" # 确认连接结果</pre><table style="text-align:center;"><tr><td>部分转载(原文链接):</td><td><a href="https://www.linuxprobe.com/chapter-00.html" target="_blank" rel="noopener">https://www.linuxprobe.com/chapter-00.html</a></td></tr></table>>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;是一个基于&lt;code&gt;POSIX&lt;/code&gt;的&lt;code&gt;多用户&lt;/code&gt;、&lt;code&gt;多任务&lt;/code&gt;、支持&lt;code&gt;多线程&lt;/code&gt;和多CPU的&lt;code&gt;操作系统&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;可移植操作系统接口&lt;/code&gt;(英语:&lt;code&gt;Portable Operating System Interface&lt;/code&gt;, 缩写为&lt;code&gt;POSIX&lt;/code&gt;)是&lt;code&gt;IEEE&lt;/code&gt;为要在各种&lt;code&gt;UNIX操作系统&lt;/code&gt;上运行软件, 而定义&lt;code&gt;API&lt;/code&gt;的一系列互相关联的标准的总称.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;电气与电子工程师协会&lt;/code&gt;(英语: &lt;code&gt;Institute of Electrical and Electronics Engineers&lt;/code&gt;), 简称&lt;code&gt;IEEE&lt;/code&gt;, 总部位于美国纽约, 是一个国际性的电子技术与信息科学工程师的协会, 也是目前全球最大的非营利性专业技术学会. &lt;code&gt;IEEE&lt;/code&gt;大部分成员是&lt;code&gt;电子工程师&lt;/code&gt;、&lt;code&gt;计算机工程师&lt;/code&gt;和&lt;code&gt;计算机科学家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Unix&lt;/code&gt;是20世纪70年代初出现的一个&lt;code&gt;操作系统&lt;/code&gt;, 除了作为&lt;code&gt;网络操作系统&lt;/code&gt;之外, 还可以作为&lt;code&gt;单机操作系统&lt;/code&gt;使用.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;API&lt;/code&gt;(英语:&lt;code&gt;Application Programming Interface&lt;/code&gt;, 应用程序接口)是一些&lt;code&gt;预先定义&lt;/code&gt;的&lt;code&gt;接口&lt;/code&gt;(如函数、HTTP接口), 或指软件系统不同组成部分衔接的&lt;code&gt;约定&lt;/code&gt;. 用来提供应用程序与开发人员基于某软件或硬件得以访问的一组例程, 而又无需访问源码, 或理解内部工作机制的细节.&lt;/p&gt;
&lt;h1 id=&quot;用户类型&quot;&gt;&lt;a href=&quot;#用户类型&quot; class=&quot;headerlink&quot; title=&quot;用户类型&quot;&gt;&lt;/a&gt;用户类型&lt;/h1&gt;&lt;p&gt;&lt;code&gt;uid=0 gid=0 groups=0&lt;/code&gt; &lt;code&gt;root&lt;/code&gt;用户: 一个特殊的管理帐户, 也被称为超级用户; root已接近完整的系统控制, 对系统损害几乎有无限的能力, 除非必要, 不要登录为root.&lt;br&gt;&lt;code&gt;999 &amp;gt;= uid gid groups &amp;gt;= 1&lt;/code&gt; 系统用户: Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器, 默认服务程序会有独立的系统用户负责运行, 进而有效控制被破坏范围.&lt;br&gt;&lt;code&gt;uid gid groups &amp;gt;= 1000&lt;/code&gt; 普通用户:  由&lt;code&gt;root&lt;/code&gt;创建的用于日常工作的用户, 权限有限, 造成损害的能力比较有限.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.mengyun.club/tags/Linux/"/>
    
  </entry>
  
</feed>
